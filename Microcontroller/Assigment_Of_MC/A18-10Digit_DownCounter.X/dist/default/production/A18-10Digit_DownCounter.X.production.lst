

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 20 21:50:57 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234                           
   235                           	psect	idataBANK0
   236     05BB                     __pidataBANK0:
   237                           
   238                           ;initializer for main@F860
   239     05BB  3439               	retlw	57
   240     05BC  3439               	retlw	57
   241     05BD  3439               	retlw	57
   242     05BE  3439               	retlw	57
   243     05BF  3439               	retlw	57
   244     05C0  3439               	retlw	57
   245     05C1  3439               	retlw	57
   246     05C2  3439               	retlw	57
   247     05C3  3439               	retlw	57
   248     05C4  3439               	retlw	57
   249     05C5  3400               	retlw	0
   250     0008                     _PORTD	set	8
   251     0049                     _RE1	set	73
   252     004A                     _RE2	set	74
   253     0088                     _TRISD	set	136
   254     0449                     _TRISE1	set	1097
   255     044A                     _TRISE2	set	1098
   256                           
   257                           	psect	strings
   258     0003                     __pstrings:
   259     0003                     stringtab:
   260     0003                     __stringtab:
   261                           
   262                           ;	String table - string pointers are 1 byte each
   263     0003  1BFF               	btfsc	btemp+1,7
   264     0004  280D               	ljmp	stringcode
   265     0005  1383               	bcf	3,7
   266     0006  187F               	btfsc	btemp+1,0
   267     0007  1783               	bsf	3,7
   268     0008  0800               	movf	0,w
   269     0009  0A84               	incf	4,f
   270     000A  1903               	skipnz
   271     000B  0AFF               	incf	btemp+1,f
   272     000C  0008               	return
   273     000D                     stringcode:
   274     000D                     stringdir:
   275     000D  3000               	movlw	high stringdir
   276     000E  008A               	movwf	10
   277     000F  0804               	movf	4,w
   278     0010  0A84               	incf	4,f
   279     0011  0782               	addwf	2,f
   280     0012                     __stringbase:
   281     0012  3400               	retlw	0
   282     0013                     __end_of__stringtab:
   283     0013                     STR_1:
   284     0013  3420               	retlw	32	;' '
   285     0014  3444               	retlw	68	;'D'
   286     0015  344F               	retlw	79	;'O'
   287     0016  3457               	retlw	87	;'W'
   288     0017  344E               	retlw	78	;'N'
   289     0018  3420               	retlw	32	;' '
   290     0019  3443               	retlw	67	;'C'
   291     001A  344F               	retlw	79	;'O'
   292     001B  3455               	retlw	85	;'U'
   293     001C  344E               	retlw	78	;'N'
   294     001D  3454               	retlw	84	;'T'
   295     001E  3445               	retlw	69	;'E'
   296     001F  3452               	retlw	82	;'R'
   297     0020  3420               	retlw	32	;' '
   298     0021  3400               	retlw	0
   299     0022                     STR_2:
   300     0022  3443               	retlw	67	;'C'
   301     0023  346F               	retlw	111	;'o'
   302     0024  3475               	retlw	117	;'u'
   303     0025  346E               	retlw	110	;'n'
   304     0026  3474               	retlw	116	;'t'
   305     0027  343A               	retlw	58	;':'
   306     0028  3400               	retlw	0
   307                           
   308                           	psect	cinit
   309     07EE                     start_initialization:	
   310                           ; #config settings
   311                           
   312     07EE                     __initialization:
   313                           
   314                           ; Initialize objects allocated to BANK0
   315     07EE  1383               	bcf	3,7	;select IRP bank0
   316     07EF  3038               	movlw	low (__pdataBANK0+11)
   317     07F0  00FD               	movwf	btemp+-1
   318     07F1  3005               	movlw	high __pidataBANK0
   319     07F2  00FE               	movwf	btemp
   320     07F3  30BB               	movlw	low __pidataBANK0
   321     07F4  00FF               	movwf	btemp+1
   322     07F5  302D               	movlw	low __pdataBANK0
   323     07F6  0084               	movwf	4
   324     07F7  120A  118A  25CA  120A  118A  	fcall	init_ram0
   325     07FC                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328     07FC                     __end_of__initialization:
   329     07FC  0183               	clrf	3
   330     07FD  120A  118A  2E7F   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	dataBANK0
   333     002D                     __pdataBANK0:
   334     002D                     main@F860:
   335     002D                     	ds	11
   336                           
   337                           	psect	inittext
   338     05C6                     init_fetch0:	
   339                           ;	Called with low address in FSR and high address in W
   340                           
   341     05C6  087E               	movf	btemp,w
   342     05C7  008A               	movwf	10
   343     05C8  087F               	movf	btemp+1,w
   344     05C9  0082               	movwf	2
   345     05CA                     init_ram0:	
   346                           ;Called with:
   347                           ;	high address of idata address in btemp 
   348                           ;	low address of idata address in btemp+1 
   349                           ;	low address of data in FSR
   350                           ;	high address + 1 of data in btemp-1
   351                           
   352     05CA  120A  118A  25C6  120A  118A  	fcall	init_fetch0
   353     05CF  0080               	movwf	0
   354     05D0  0A84               	incf	4,f
   355     05D1  0804               	movf	4,w
   356     05D2  067D               	xorwf	btemp+-1,w
   357     05D3  1903               	btfsc	3,2
   358     05D4  3400               	retlw	0
   359     05D5  0AFF               	incf	btemp+1,f
   360     05D6  1903               	btfsc	3,2
   361     05D7  0AFE               	incf	btemp,f
   362     05D8  2DCA               	goto	init_ram0
   363                           
   364                           	psect	cstackCOMMON
   365     0070                     __pcstackCOMMON:
   366     0070                     ?_clcd_write:
   367     0070                     ?_init_display_controller:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_init_clcd:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ?_init_config:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ?_main:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     clcd_write@mode:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 1 bytes @ 0x0
   384     0070                     	ds	1
   385     0071                     ??_clcd_write:
   386                           
   387                           ; 1 bytes @ 0x1
   388     0071                     	ds	2
   389     0073                     clcd_write@byte:
   390                           
   391                           ; 1 bytes @ 0x3
   392     0073                     	ds	1
   393     0074                     ??_init_display_controller:
   394     0074                     ?_clcd_print:	
   395                           ; 1 bytes @ 0x4
   396                           
   397     0074                     clcd_print@str:	
   398                           ; 1 bytes @ 0x4
   399                           
   400                           
   401                           ; 2 bytes @ 0x4
   402     0074                     	ds	2
   403     0076                     ??_init_clcd:
   404     0076                     ??_init_config:	
   405                           ; 1 bytes @ 0x6
   406                           
   407     0076                     clcd_print@addr:	
   408                           ; 1 bytes @ 0x6
   409                           
   410                           
   411                           ; 1 bytes @ 0x6
   412     0076                     	ds	1
   413     0077                     ??_clcd_print:
   414     0077                     ??_main:	
   415                           ; 1 bytes @ 0x7
   416                           
   417                           
   418                           ; 1 bytes @ 0x7
   419     0077                     	ds	4
   420                           
   421                           	psect	cstackBANK0
   422     0020                     __pcstackBANK0:
   423     0020                     main@wait:
   424                           
   425                           ; 2 bytes @ 0x0
   426     0020                     	ds	2
   427     0022                     main@str:
   428                           
   429                           ; 11 bytes @ 0x2
   430     0022                     	ds	11
   431                           
   432                           	psect	maintext
   433     067F                     __pmaintext:	
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 33 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  str            11    2[BANK0 ] unsigned char [11]
   444 ;;  wait            2    0[BANK0 ] int 
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0      13       0       0       0
   456 ;;      Temps:          4       0       0       0       0
   457 ;;      Totals:         4      13       0       0       0
   458 ;;Total ram usage:       17 bytes
   459 ;; Hardware stack levels required when called: 4
   460 ;; This function calls:
   461 ;;		_clcd_print
   462 ;;		_init_config
   463 ;; This function is called by:
   464 ;;		Startup code after reset
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     067F                     _main:	
   469                           ;psect for function _main
   470                           
   471     067F                     l921:	
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   474                           
   475                           
   476                           ;main.c: 35:             }
   477     067F  120A  118A  25AA  120A  118A  	fcall	_init_config
   478     0684                     l923:
   479                           
   480                           ;main.c: 37:             {
   481     0684  3090               	movlw	144
   482     0685  1283               	bcf	3,5	;RP0=0, select bank0
   483     0686  1303               	bcf	3,6	;RP1=0, select bank0
   484     0687  00A0               	movwf	main@wait
   485     0688  3001               	movlw	1
   486     0689  00A1               	movwf	main@wait+1
   487     068A                     l925:
   488                           
   489                           ;main.c: 38:                 str[6]--;
   490     068A  3022               	movlw	main@str& (0+255)
   491     068B  0084               	movwf	4
   492     068C  302D               	movlw	low main@F860
   493     068D  00F7               	movwf	??_main
   494     068E  0804               	movf	4,w
   495     068F  00F8               	movwf	??_main+1
   496     0690  300B               	movlw	11
   497     0691  00F9               	movwf	??_main+2
   498     0692                     u290:
   499     0692  0877               	movf	??_main,w
   500     0693  0084               	movwf	4
   501     0694  1383               	bcf	3,7	;select IRP bank0
   502     0695  0800               	movf	0,w
   503     0696  00FA               	movwf	??_main+3
   504     0697  0AF7               	incf	??_main,f
   505     0698  0878               	movf	??_main+1,w
   506     0699  0084               	movwf	4
   507     069A  087A               	movf	??_main+3,w
   508     069B  0080               	movwf	0
   509     069C  0AF8               	incf	??_main+1,f
   510     069D  0BF9               	decfsz	??_main+2,f
   511     069E  2E92               	goto	u290
   512     069F                     l927:
   513                           
   514                           ;main.c: 41:                 str[9] = '9';
   515     069F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   516     06A0  00F4               	movwf	clcd_print@str
   517     06A1  3080               	movlw	128
   518     06A2  00F5               	movwf	clcd_print@str+1
   519     06A3  3080               	movlw	128
   520     06A4  00F6               	movwf	clcd_print@addr
   521     06A5  120A  118A  25F9  120A  118A  	fcall	_clcd_print
   522     06AA                     l929:
   523                           
   524                           ;main.c: 42: 
   525     06AA  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   526     06AB  00F4               	movwf	clcd_print@str
   527     06AC  3080               	movlw	128
   528     06AD  00F5               	movwf	clcd_print@str+1
   529     06AE  30C0               	movlw	192
   530     06AF  00F6               	movwf	clcd_print@addr
   531     06B0  120A  118A  25F9  120A  118A  	fcall	_clcd_print
   532     06B5                     l931:
   533                           
   534                           ;main.c: 43:             }
   535     06B5  3022               	movlw	(low (main@str| 0))& (0+255)
   536     06B6  00F4               	movwf	clcd_print@str
   537     06B7  3000               	movlw	0
   538     06B8  00F5               	movwf	clcd_print@str+1
   539     06B9  30C6               	movlw	198
   540     06BA  00F6               	movwf	clcd_print@addr
   541     06BB  120A  118A  25F9  120A  118A  	fcall	_clcd_print
   542     06C0                     l933:
   543                           
   544                           ;main.c: 45:             {;main.c: 46:                 str[5]--;
   545     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   546     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   547     06C2  0821               	movf	main@wait+1,w
   548     06C3  00F8               	movwf	??_main+1
   549     06C4  03A0               	decf	main@wait,f
   550     06C5  0A20               	incf	main@wait,w
   551     06C6  00F7               	movwf	??_main
   552     06C7  1903               	skipnz
   553     06C8  03A1               	decf	main@wait+1,f
   554     06C9  0878               	movf	??_main+1,w
   555     06CA  3A80               	xorlw	128
   556     06CB  00FF               	movwf	btemp+1
   557     06CC  3080               	movlw	128
   558     06CD  027F               	subwf	btemp+1,w
   559     06CE  1D03               	skipz
   560     06CF  2ED2               	goto	u305
   561     06D0  3001               	movlw	1
   562     06D1  0277               	subwf	??_main,w
   563     06D2                     u305:
   564     06D2  1803               	skipnc
   565     06D3  2ED5               	goto	u301
   566     06D4  2ED6               	goto	u300
   567     06D5                     u301:
   568     06D5  2EC0               	goto	l933
   569     06D6                     u300:
   570     06D6                     l935:
   571                           
   572                           ;main.c: 47:                 str[6] = '9';;main.c: 48:                 str[7] = '9';
   573     06D6  3090               	movlw	144
   574     06D7  1283               	bcf	3,5	;RP0=0, select bank0
   575     06D8  1303               	bcf	3,6	;RP1=0, select bank0
   576     06D9  00A0               	movwf	main@wait
   577     06DA  3001               	movlw	1
   578     06DB  00A1               	movwf	main@wait+1
   579     06DC                     l937:
   580                           
   581                           ;main.c: 49:                 str[8] = '9';
   582     06DC  3001               	movlw	1
   583     06DD  02AB               	subwf	main@str+9,f
   584     06DE                     l939:
   585                           
   586                           ;main.c: 50:                 str[9] = '9';
   587     06DE  3030               	movlw	48
   588     06DF  022B               	subwf	main@str+9,w
   589     06E0  1803               	skipnc
   590     06E1  2EE3               	goto	u311
   591     06E2  2EE4               	goto	u310
   592     06E3                     u311:
   593     06E3  2EE8               	goto	l945
   594     06E4                     u310:
   595     06E4                     l941:
   596                           
   597                           ;main.c: 51: ;main.c: 52:             }
   598     06E4  3001               	movlw	1
   599     06E5  02AA               	subwf	main@str+8,f
   600     06E6                     l943:
   601                           
   602                           ;main.c: 53:             if(str[5] < '0')
   603     06E6  3039               	movlw	57
   604     06E7  00AB               	movwf	main@str+9
   605     06E8                     l945:
   606                           
   607                           ;main.c: 57:                 str[6] = '9';
   608     06E8  3030               	movlw	48
   609     06E9  022A               	subwf	main@str+8,w
   610     06EA  1803               	skipnc
   611     06EB  2EED               	goto	u321
   612     06EC  2EEE               	goto	u320
   613     06ED                     u321:
   614     06ED  2EF4               	goto	l953
   615     06EE                     u320:
   616     06EE                     l947:
   617                           
   618                           ;main.c: 58:                 str[7] = '9';;main.c: 59:                 str[8] = '9';
   619     06EE  3001               	movlw	1
   620     06EF  02A9               	subwf	main@str+7,f
   621     06F0                     l949:
   622                           
   623                           ;main.c: 60:                 str[9] = '9';
   624     06F0  3039               	movlw	57
   625     06F1  00AA               	movwf	main@str+8
   626     06F2                     l951:
   627                           
   628                           ;main.c: 61: 
   629     06F2  3039               	movlw	57
   630     06F3  00AB               	movwf	main@str+9
   631     06F4                     l953:
   632                           
   633                           ;main.c: 64:             {
   634     06F4  3030               	movlw	48
   635     06F5  0229               	subwf	main@str+7,w
   636     06F6  1803               	skipnc
   637     06F7  2EF9               	goto	u331
   638     06F8  2EFA               	goto	u330
   639     06F9                     u331:
   640     06F9  2F02               	goto	l963
   641     06FA                     u330:
   642     06FA                     l955:
   643                           
   644                           ;main.c: 65:                 str[3]--;;main.c: 66:                 str[4] = '9';
   645     06FA  3001               	movlw	1
   646     06FB  02A8               	subwf	main@str+6,f
   647     06FC                     l957:
   648                           
   649                           ;main.c: 67:                 str[5] = '9';
   650     06FC  3039               	movlw	57
   651     06FD  00A9               	movwf	main@str+7
   652     06FE                     l959:
   653                           
   654                           ;main.c: 68:                 str[6] = '9';
   655     06FE  3039               	movlw	57
   656     06FF  00AA               	movwf	main@str+8
   657     0700                     l961:
   658                           
   659                           ;main.c: 69:                 str[7] = '9';
   660     0700  3039               	movlw	57
   661     0701  00AB               	movwf	main@str+9
   662     0702                     l963:
   663                           
   664                           ;main.c: 72: 
   665     0702  3030               	movlw	48
   666     0703  0228               	subwf	main@str+6,w
   667     0704  1803               	skipnc
   668     0705  2F07               	goto	u341
   669     0706  2F08               	goto	u340
   670     0707                     u341:
   671     0707  2F12               	goto	l975
   672     0708                     u340:
   673     0708                     l965:
   674                           
   675                           ;main.c: 73:             };main.c: 74:             if(str[3] < '0')
   676     0708  3001               	movlw	1
   677     0709  02A7               	subwf	main@str+5,f
   678     070A                     l967:
   679                           
   680                           ;main.c: 75:             {
   681     070A  3039               	movlw	57
   682     070B  00A8               	movwf	main@str+6
   683     070C                     l969:
   684                           
   685                           ;main.c: 76:                 str[2]--;
   686     070C  3039               	movlw	57
   687     070D  00A9               	movwf	main@str+7
   688     070E                     l971:
   689                           
   690                           ;main.c: 77:                 str[3] = '9';
   691     070E  3039               	movlw	57
   692     070F  00AA               	movwf	main@str+8
   693     0710                     l973:
   694                           
   695                           ;main.c: 78:                 str[4] = '9';
   696     0710  3039               	movlw	57
   697     0711  00AB               	movwf	main@str+9
   698     0712                     l975:
   699                           
   700                           ;main.c: 81:                 str[7] = '9';
   701     0712  3030               	movlw	48
   702     0713  0227               	subwf	main@str+5,w
   703     0714  1803               	skipnc
   704     0715  2F17               	goto	u351
   705     0716  2F18               	goto	u350
   706     0717                     u351:
   707     0717  2F24               	goto	l989
   708     0718                     u350:
   709     0718                     l977:
   710                           
   711                           ;main.c: 82:                 str[8] = '9';;main.c: 83:                 str[9] = '9';
   712     0718  3001               	movlw	1
   713     0719  02A6               	subwf	main@str+4,f
   714     071A                     l979:
   715                           
   716                           ;main.c: 84: 
   717     071A  3039               	movlw	57
   718     071B  00A7               	movwf	main@str+5
   719     071C                     l981:
   720                           
   721                           ;main.c: 85:             }
   722     071C  3039               	movlw	57
   723     071D  00A8               	movwf	main@str+6
   724     071E                     l983:
   725                           
   726                           ;main.c: 86:             if(str[2] < '0')
   727     071E  3039               	movlw	57
   728     071F  00A9               	movwf	main@str+7
   729     0720                     l985:
   730                           
   731                           ;main.c: 87:             {
   732     0720  3039               	movlw	57
   733     0721  00AA               	movwf	main@str+8
   734     0722                     l987:
   735                           
   736                           ;main.c: 88:                 str[1]--;
   737     0722  3039               	movlw	57
   738     0723  00AB               	movwf	main@str+9
   739     0724                     l989:
   740                           
   741                           ;main.c: 91:                 str[4] = '9';
   742     0724  3030               	movlw	48
   743     0725  0226               	subwf	main@str+4,w
   744     0726  1803               	skipnc
   745     0727  2F29               	goto	u361
   746     0728  2F2A               	goto	u360
   747     0729                     u361:
   748     0729  2F38               	goto	l1005
   749     072A                     u360:
   750     072A                     l991:
   751                           
   752                           ;main.c: 92:                 str[5] = '9';;main.c: 93:                 str[6] = '9';
   753     072A  3001               	movlw	1
   754     072B  02A5               	subwf	main@str+3,f
   755     072C                     l993:
   756                           
   757                           ;main.c: 94:                 str[7] = '9';
   758     072C  3039               	movlw	57
   759     072D  00A6               	movwf	main@str+4
   760     072E                     l995:
   761                           
   762                           ;main.c: 95:                 str[8] = '9';
   763     072E  3039               	movlw	57
   764     072F  00A7               	movwf	main@str+5
   765     0730                     l997:
   766                           
   767                           ;main.c: 96:                 str[9] = '9';
   768     0730  3039               	movlw	57
   769     0731  00A8               	movwf	main@str+6
   770     0732                     l999:
   771                           
   772                           ;main.c: 97: 
   773     0732  3039               	movlw	57
   774     0733  00A9               	movwf	main@str+7
   775     0734                     l1001:
   776                           
   777                           ;main.c: 98:             }
   778     0734  3039               	movlw	57
   779     0735  00AA               	movwf	main@str+8
   780     0736                     l1003:
   781                           
   782                           ;main.c: 99:             if(str[1] < '0')
   783     0736  3039               	movlw	57
   784     0737  00AB               	movwf	main@str+9
   785     0738                     l1005:
   786                           
   787                           ;main.c: 102:                 str[1] = '9';
   788     0738  3030               	movlw	48
   789     0739  0225               	subwf	main@str+3,w
   790     073A  1803               	skipnc
   791     073B  2F3D               	goto	u371
   792     073C  2F3E               	goto	u370
   793     073D                     u371:
   794     073D  2F4E               	goto	l1023
   795     073E                     u370:
   796     073E                     l1007:
   797                           
   798                           ;main.c: 103:                 str[2] = '9';;main.c: 104:                 str[3] = '9';
   799     073E  3001               	movlw	1
   800     073F  02A4               	subwf	main@str+2,f
   801     0740                     l1009:
   802                           
   803                           ;main.c: 105:                 str[4] = '9';
   804     0740  3039               	movlw	57
   805     0741  00A5               	movwf	main@str+3
   806     0742                     l1011:
   807                           
   808                           ;main.c: 106:                 str[5] = '9';
   809     0742  3039               	movlw	57
   810     0743  00A6               	movwf	main@str+4
   811     0744                     l1013:
   812                           
   813                           ;main.c: 107:                 str[6] = '9';
   814     0744  3039               	movlw	57
   815     0745  00A7               	movwf	main@str+5
   816     0746                     l1015:
   817                           
   818                           ;main.c: 108:                 str[7] = '9';
   819     0746  3039               	movlw	57
   820     0747  00A8               	movwf	main@str+6
   821     0748                     l1017:
   822                           
   823                           ;main.c: 109:                 str[8] = '9';
   824     0748  3039               	movlw	57
   825     0749  00A9               	movwf	main@str+7
   826     074A                     l1019:
   827                           
   828                           ;main.c: 110:                 str[9] = '9';
   829     074A  3039               	movlw	57
   830     074B  00AA               	movwf	main@str+8
   831     074C                     l1021:
   832                           
   833                           ;main.c: 111: 
   834     074C  3039               	movlw	57
   835     074D  00AB               	movwf	main@str+9
   836     074E                     l1023:
   837                           
   838                           ;main.c: 114:             {
   839     074E  3030               	movlw	48
   840     074F  0224               	subwf	main@str+2,w
   841     0750  1803               	skipnc
   842     0751  2F53               	goto	u381
   843     0752  2F54               	goto	u380
   844     0753                     u381:
   845     0753  2F66               	goto	l1043
   846     0754                     u380:
   847     0754                     l1025:
   848                           
   849                           ;main.c: 115:                 str[0] = '9';;main.c: 116:                 str[1] = '9';
   850     0754  3001               	movlw	1
   851     0755  02A3               	subwf	main@str+1,f
   852     0756                     l1027:
   853                           
   854                           ;main.c: 117:                 str[2] = '9';
   855     0756  3039               	movlw	57
   856     0757  00A4               	movwf	main@str+2
   857     0758                     l1029:
   858                           
   859                           ;main.c: 118:                 str[3] = '9';
   860     0758  3039               	movlw	57
   861     0759  00A5               	movwf	main@str+3
   862     075A                     l1031:
   863                           
   864                           ;main.c: 119:                 str[4] = '9';
   865     075A  3039               	movlw	57
   866     075B  00A6               	movwf	main@str+4
   867     075C                     l1033:
   868                           
   869                           ;main.c: 120:                 str[5] = '9';
   870     075C  3039               	movlw	57
   871     075D  00A7               	movwf	main@str+5
   872     075E                     l1035:
   873                           
   874                           ;main.c: 121:                 str[6] = '9';
   875     075E  3039               	movlw	57
   876     075F  00A8               	movwf	main@str+6
   877     0760                     l1037:
   878                           
   879                           ;main.c: 122:                 str[7] = '9';
   880     0760  3039               	movlw	57
   881     0761  00A9               	movwf	main@str+7
   882     0762                     l1039:
   883                           
   884                           ;main.c: 123:                 str[8] = '9';
   885     0762  3039               	movlw	57
   886     0763  00AA               	movwf	main@str+8
   887     0764                     l1041:
   888                           
   889                           ;main.c: 124:                 str[9] = '9';
   890     0764  3039               	movlw	57
   891     0765  00AB               	movwf	main@str+9
   892     0766                     l1043:
   893                           
   894                           ;main.c: 127:             if((str[0] == '0') && (str[1] == '0') && (str[2] == '0') && (s
      +                          tr[3] == '0') && (str[4] == '0') && (str[5] == '0') && (str[6] == '0') && (str[7] == '0'
      +                          ) && (str[8] == '0') && (str[9] == '0'))
   895     0766  3030               	movlw	48
   896     0767  0223               	subwf	main@str+1,w
   897     0768  1803               	skipnc
   898     0769  2F6B               	goto	u391
   899     076A  2F6C               	goto	u390
   900     076B                     u391:
   901     076B  2F80               	goto	l1065
   902     076C                     u390:
   903     076C                     l1045:
   904                           
   905                           ;main.c: 128:      {;main.c: 129:                 str[0] = '0';
   906     076C  3001               	movlw	1
   907     076D  02A2               	subwf	main@str,f
   908     076E                     l1047:
   909                           
   910                           ;main.c: 130:                 str[1] = '0';
   911     076E  3039               	movlw	57
   912     076F  00A3               	movwf	main@str+1
   913     0770                     l1049:
   914                           
   915                           ;main.c: 131:                 str[2] = '0';
   916     0770  3039               	movlw	57
   917     0771  00A4               	movwf	main@str+2
   918     0772                     l1051:
   919                           
   920                           ;main.c: 132:                 str[3] = '0';
   921     0772  3039               	movlw	57
   922     0773  00A5               	movwf	main@str+3
   923     0774                     l1053:
   924                           
   925                           ;main.c: 133:                 str[4] = '0';
   926     0774  3039               	movlw	57
   927     0775  00A6               	movwf	main@str+4
   928     0776                     l1055:
   929                           
   930                           ;main.c: 134:                 str[5] = '0';
   931     0776  3039               	movlw	57
   932     0777  00A7               	movwf	main@str+5
   933     0778                     l1057:
   934                           
   935                           ;main.c: 135:                 str[6] = '0';
   936     0778  3039               	movlw	57
   937     0779  00A8               	movwf	main@str+6
   938     077A                     l1059:
   939                           
   940                           ;main.c: 136:                 str[7] = '0';
   941     077A  3039               	movlw	57
   942     077B  00A9               	movwf	main@str+7
   943     077C                     l1061:
   944                           
   945                           ;main.c: 137:                 str[8] = '0';
   946     077C  3039               	movlw	57
   947     077D  00AA               	movwf	main@str+8
   948     077E                     l1063:
   949                           
   950                           ;main.c: 138:                 str[9] = '0';
   951     077E  3039               	movlw	57
   952     077F  00AB               	movwf	main@str+9
   953     0780                     l1065:
   954                           
   955                           ;main.c: 141: 
   956     0780  3030               	movlw	48
   957     0781  0222               	subwf	main@str,w
   958     0782  1803               	skipnc
   959     0783  2F85               	goto	u401
   960     0784  2F86               	goto	u400
   961     0785                     u401:
   962     0785  2F9A               	goto	l1069
   963     0786                     u400:
   964     0786                     l1067:
   965                           
   966                           ;main.c: 142:             clcd_print(str, (0xC0 + 6));;main.c: 143:   }
   967     0786  3039               	movlw	57
   968     0787  00A2               	movwf	main@str
   969                           
   970                           ;main.c: 144:     }
   971     0788  3039               	movlw	57
   972     0789  00A3               	movwf	main@str+1
   973                           
   974                           ;main.c: 145: }
   975     078A  3039               	movlw	57
   976     078B  00A4               	movwf	main@str+2
   977     078C  3039               	movlw	57
   978     078D  00A5               	movwf	main@str+3
   979     078E  3039               	movlw	57
   980     078F  00A6               	movwf	main@str+4
   981     0790  3039               	movlw	57
   982     0791  00A7               	movwf	main@str+5
   983     0792  3039               	movlw	57
   984     0793  00A8               	movwf	main@str+6
   985     0794  3039               	movlw	57
   986     0795  00A9               	movwf	main@str+7
   987     0796  3039               	movlw	57
   988     0797  00AA               	movwf	main@str+8
   989     0798  3039               	movlw	57
   990     0799  00AB               	movwf	main@str+9
   991     079A                     l1069:
   992     079A  3030               	movlw	48
   993     079B  0622               	xorwf	main@str,w
   994     079C  1D03               	btfss	3,2
   995     079D  2F9F               	goto	u411
   996     079E  2FA0               	goto	u410
   997     079F                     u411:
   998     079F  2EB5               	goto	l931
   999     07A0                     u410:
  1000     07A0                     l1071:
  1001     07A0  3030               	movlw	48
  1002     07A1  0623               	xorwf	main@str+1,w
  1003     07A2  1D03               	btfss	3,2
  1004     07A3  2FA5               	goto	u421
  1005     07A4  2FA6               	goto	u420
  1006     07A5                     u421:
  1007     07A5  2EB5               	goto	l931
  1008     07A6                     u420:
  1009     07A6                     l1073:
  1010     07A6  3030               	movlw	48
  1011     07A7  0624               	xorwf	main@str+2,w
  1012     07A8  1D03               	btfss	3,2
  1013     07A9  2FAB               	goto	u431
  1014     07AA  2FAC               	goto	u430
  1015     07AB                     u431:
  1016     07AB  2EB5               	goto	l931
  1017     07AC                     u430:
  1018     07AC                     l1075:
  1019     07AC  3030               	movlw	48
  1020     07AD  0625               	xorwf	main@str+3,w
  1021     07AE  1D03               	btfss	3,2
  1022     07AF  2FB1               	goto	u441
  1023     07B0  2FB2               	goto	u440
  1024     07B1                     u441:
  1025     07B1  2EB5               	goto	l931
  1026     07B2                     u440:
  1027     07B2                     l1077:
  1028     07B2  3030               	movlw	48
  1029     07B3  0626               	xorwf	main@str+4,w
  1030     07B4  1D03               	btfss	3,2
  1031     07B5  2FB7               	goto	u451
  1032     07B6  2FB8               	goto	u450
  1033     07B7                     u451:
  1034     07B7  2EB5               	goto	l931
  1035     07B8                     u450:
  1036     07B8                     l1079:
  1037     07B8  3030               	movlw	48
  1038     07B9  0627               	xorwf	main@str+5,w
  1039     07BA  1D03               	btfss	3,2
  1040     07BB  2FBD               	goto	u461
  1041     07BC  2FBE               	goto	u460
  1042     07BD                     u461:
  1043     07BD  2EB5               	goto	l931
  1044     07BE                     u460:
  1045     07BE                     l1081:
  1046     07BE  3030               	movlw	48
  1047     07BF  0628               	xorwf	main@str+6,w
  1048     07C0  1D03               	btfss	3,2
  1049     07C1  2FC3               	goto	u471
  1050     07C2  2FC4               	goto	u470
  1051     07C3                     u471:
  1052     07C3  2EB5               	goto	l931
  1053     07C4                     u470:
  1054     07C4                     l1083:
  1055     07C4  3030               	movlw	48
  1056     07C5  0629               	xorwf	main@str+7,w
  1057     07C6  1D03               	btfss	3,2
  1058     07C7  2FC9               	goto	u481
  1059     07C8  2FCA               	goto	u480
  1060     07C9                     u481:
  1061     07C9  2EB5               	goto	l931
  1062     07CA                     u480:
  1063     07CA                     l1085:
  1064     07CA  3030               	movlw	48
  1065     07CB  062A               	xorwf	main@str+8,w
  1066     07CC  1D03               	btfss	3,2
  1067     07CD  2FCF               	goto	u491
  1068     07CE  2FD0               	goto	u490
  1069     07CF                     u491:
  1070     07CF  2EB5               	goto	l931
  1071     07D0                     u490:
  1072     07D0                     l1087:
  1073     07D0  3030               	movlw	48
  1074     07D1  062B               	xorwf	main@str+9,w
  1075     07D2  1D03               	btfss	3,2
  1076     07D3  2FD5               	goto	u501
  1077     07D4  2FD6               	goto	u500
  1078     07D5                     u501:
  1079     07D5  2EB5               	goto	l931
  1080     07D6                     u500:
  1081     07D6                     l1089:
  1082     07D6  3030               	movlw	48
  1083     07D7  00A2               	movwf	main@str
  1084     07D8  3030               	movlw	48
  1085     07D9  00A3               	movwf	main@str+1
  1086     07DA  3030               	movlw	48
  1087     07DB  00A4               	movwf	main@str+2
  1088     07DC  3030               	movlw	48
  1089     07DD  00A5               	movwf	main@str+3
  1090     07DE  3030               	movlw	48
  1091     07DF  00A6               	movwf	main@str+4
  1092     07E0  3030               	movlw	48
  1093     07E1  00A7               	movwf	main@str+5
  1094     07E2  3030               	movlw	48
  1095     07E3  00A8               	movwf	main@str+6
  1096     07E4  3030               	movlw	48
  1097     07E5  00A9               	movwf	main@str+7
  1098     07E6  3030               	movlw	48
  1099     07E7  00AA               	movwf	main@str+8
  1100     07E8  3030               	movlw	48
  1101     07E9  00AB               	movwf	main@str+9
  1102     07EA  2EB5               	goto	l931
  1103     07EB  120A  118A  2800   	ljmp	start
  1104     07EE                     __end_of_main:
  1105                           
  1106                           	psect	text1
  1107     05AA                     __ptext1:	
  1108 ;; *************** function _init_config *****************
  1109 ;; Defined at:
  1110 ;;		line 28 in file "main.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0
  1127 ;;      Totals:         0       0       0       0       0
  1128 ;;Total ram usage:        0 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 3
  1131 ;; This function calls:
  1132 ;;		_init_clcd
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138     05AA                     _init_config:	
  1139                           ;psect for function _init_config
  1140                           
  1141     05AA                     l917:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1144                           
  1145                           
  1146                           ;main.c: 30:             {
  1147     05AA  120A  118A  25B0  120A  118A  	fcall	_init_clcd
  1148     05AF                     l39:
  1149     05AF  0008               	return
  1150     05B0                     __end_of_init_config:
  1151                           
  1152                           	psect	text2
  1153     05B0                     __ptext2:	
  1154 ;; *************** function _init_clcd *****************
  1155 ;; Defined at:
  1156 ;;		line 43 in file "clcd.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 2
  1177 ;; This function calls:
  1178 ;;		_init_display_controller
  1179 ;; This function is called by:
  1180 ;;		_init_config
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184     05B0                     _init_clcd:	
  1185                           ;psect for function _init_clcd
  1186                           
  1187     05B0                     l901:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1190                           
  1191                           
  1192                           ;clcd.c: 46:     TRISD = 0x00;
  1193     05B0  1683               	bsf	3,5	;RP0=1, select bank1
  1194     05B1  1303               	bcf	3,6	;RP1=0, select bank1
  1195     05B2  0188               	clrf	8	;volatile
  1196     05B3                     l903:
  1197                           
  1198                           ;clcd.c: 49:     TRISE2 = 0;
  1199     05B3  1109               	bcf	9,2	;volatile
  1200     05B4                     l905:
  1201                           
  1202                           ;clcd.c: 50:     TRISE1 = 0;
  1203     05B4  1089               	bcf	9,1	;volatile
  1204     05B5                     l907:
  1205                           
  1206                           ;clcd.c: 52:     init_display_controller();
  1207     05B5  120A  118A  2628  120A  118A  	fcall	_init_display_controller
  1208     05BA                     l23:
  1209     05BA  0008               	return
  1210     05BB                     __end_of_init_clcd:
  1211                           
  1212                           	psect	text3
  1213     0628                     __ptext3:	
  1214 ;; *************** function _init_display_controller *****************
  1215 ;; Defined at:
  1216 ;;		line 22 in file "clcd.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0
  1232 ;;      Temps:          2       0       0       0       0
  1233 ;;      Totals:         2       0       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 1
  1237 ;; This function calls:
  1238 ;;		_clcd_write
  1239 ;; This function is called by:
  1240 ;;		_init_clcd
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244     0628                     _init_display_controller:	
  1245                           ;psect for function _init_display_controller
  1246                           
  1247     0628                     l881:	
  1248                           ;incstack = 0
  1249                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1250                           
  1251                           
  1252                           ;clcd.c: 25:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1253     0628  30C3               	movlw	195
  1254     0629  00F5               	movwf	??_init_display_controller+1
  1255     062A  30CD               	movlw	205
  1256     062B  00F4               	movwf	??_init_display_controller
  1257     062C                     u517:
  1258     062C  0BF4               	decfsz	??_init_display_controller,f
  1259     062D  2E2C               	goto	u517
  1260     062E  0BF5               	decfsz	??_init_display_controller+1,f
  1261     062F  2E2C               	goto	u517
  1262     0630                     l883:
  1263                           
  1264                           ;clcd.c: 28:     clcd_write(0x33, 0);
  1265     0630  01F0               	clrf	clcd_write@mode
  1266     0631  3033               	movlw	51
  1267     0632  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1268     0637                     l885:
  1269                           
  1270                           ;clcd.c: 29:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1271     0637  301B               	movlw	27
  1272     0638  00F5               	movwf	??_init_display_controller+1
  1273     0639  309E               	movlw	158
  1274     063A  00F4               	movwf	??_init_display_controller
  1275     063B                     u527:
  1276     063B  0BF4               	decfsz	??_init_display_controller,f
  1277     063C  2E3B               	goto	u527
  1278     063D  0BF5               	decfsz	??_init_display_controller+1,f
  1279     063E  2E3B               	goto	u527
  1280     063F  0000               	nop
  1281                           
  1282                           ;clcd.c: 30:     clcd_write(0x33, 0);
  1283     0640  01F0               	clrf	clcd_write@mode
  1284     0641  3033               	movlw	51
  1285     0642  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1286     0647                     l887:
  1287                           
  1288                           ;clcd.c: 31:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1289     0647  30A6               	movlw	166
  1290     0648  00F4               	movwf	??_init_display_controller
  1291     0649                     u537:
  1292     0649  0BF4               	decfsz	??_init_display_controller,f
  1293     064A  2E49               	goto	u537
  1294     064B  0000               	nop
  1295     064C                     l889:
  1296                           
  1297                           ;clcd.c: 32:     clcd_write(0x33, 0);
  1298     064C  01F0               	clrf	clcd_write@mode
  1299     064D  3033               	movlw	51
  1300     064E  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1301     0653                     l891:
  1302                           
  1303                           ;clcd.c: 33:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1304     0653  2E54               	nop2	;2 cycle nop
  1305     0654  2E55               	nop2	;2 cycle nop
  1306     0655  0000               	nop
  1307     0656                     l893:
  1308                           
  1309                           ;clcd.c: 35:     clcd_write(0x38, 0);
  1310     0656  01F0               	clrf	clcd_write@mode
  1311     0657  3038               	movlw	56
  1312     0658  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1313     065D                     l895:
  1314                           
  1315                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1316     065D  30A6               	movlw	166
  1317     065E  00F4               	movwf	??_init_display_controller
  1318     065F                     u547:
  1319     065F  0BF4               	decfsz	??_init_display_controller,f
  1320     0660  2E5F               	goto	u547
  1321     0661  0000               	nop
  1322                           
  1323                           ;clcd.c: 37:     clcd_write(0x01, 0);
  1324     0662  01F0               	clrf	clcd_write@mode
  1325     0663  3001               	movlw	1
  1326     0664  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1327     0669                     l897:
  1328                           
  1329                           ;clcd.c: 38:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1330     0669  3004               	movlw	4
  1331     066A  00F5               	movwf	??_init_display_controller+1
  1332     066B  303D               	movlw	61
  1333     066C  00F4               	movwf	??_init_display_controller
  1334     066D                     u557:
  1335     066D  0BF4               	decfsz	??_init_display_controller,f
  1336     066E  2E6D               	goto	u557
  1337     066F  0BF5               	decfsz	??_init_display_controller+1,f
  1338     0670  2E6D               	goto	u557
  1339     0671  2E72               	nop2
  1340     0672                     l899:
  1341                           
  1342                           ;clcd.c: 39:     clcd_write(0x0C, 0);
  1343     0672  01F0               	clrf	clcd_write@mode
  1344     0673  300C               	movlw	12
  1345     0674  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1346                           
  1347                           ;clcd.c: 40:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1348     0679  30A6               	movlw	166
  1349     067A  00F4               	movwf	??_init_display_controller
  1350     067B                     u567:
  1351     067B  0BF4               	decfsz	??_init_display_controller,f
  1352     067C  2E7B               	goto	u567
  1353     067D  0000               	nop
  1354     067E                     l20:
  1355     067E  0008               	return
  1356     067F                     __end_of_init_display_controller:
  1357                           
  1358                           	psect	text4
  1359     05F9                     __ptext4:	
  1360 ;; *************** function _clcd_print *****************
  1361 ;; Defined at:
  1362 ;;		line 61 in file "clcd.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  str             2    4[COMMON] PTR const unsigned char 
  1365 ;;		 -> STR_2(7), STR_1(15), main@str(11), 
  1366 ;;  addr            1    6[COMMON] unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         3       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0
  1381 ;;      Totals:         3       0       0       0       0
  1382 ;;Total ram usage:        3 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 1
  1385 ;; This function calls:
  1386 ;;		_clcd_write
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392     05F9                     _clcd_print:	
  1393                           ;psect for function _clcd_print
  1394                           
  1395     05F9                     l909:	
  1396                           ;incstack = 0
  1397                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1398                           
  1399                           
  1400                           ;clcd.c: 61: void clcd_print(const char *str, unsigned char addr);clcd.c: 62: {;clcd.c: 
      +                          63:     clcd_write(addr, 0);
  1401     05F9  01F0               	clrf	clcd_write@mode
  1402     05FA  0876               	movf	clcd_print@addr,w
  1403     05FB  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1404                           
  1405                           ;clcd.c: 65:     while (*str != '\0')
  1406     0600  2E17               	goto	l915
  1407     0601                     l911:
  1408                           
  1409                           ;clcd.c: 66:     {;clcd.c: 67:         clcd_write(*str, 1);
  1410     0601  01F0               	clrf	clcd_write@mode
  1411     0602  0AF0               	incf	clcd_write@mode,f
  1412     0603  0875               	movf	clcd_print@str+1,w
  1413     0604  00FF               	movwf	btemp+1
  1414     0605  0874               	movf	clcd_print@str,w
  1415     0606  0084               	movwf	4
  1416     0607  120A  118A  2003  120A  118A  	fcall	stringtab
  1417     060C  120A  118A  25D9  120A  118A  	fcall	_clcd_write
  1418     0611                     l913:
  1419                           
  1420                           ;clcd.c: 68:         str++;
  1421     0611  3001               	movlw	1
  1422     0612  07F4               	addwf	clcd_print@str,f
  1423     0613  1803               	skipnc
  1424     0614  0AF5               	incf	clcd_print@str+1,f
  1425     0615  3000               	movlw	0
  1426     0616  07F5               	addwf	clcd_print@str+1,f
  1427     0617                     l915:
  1428                           
  1429                           ;clcd.c: 65:     while (*str != '\0')
  1430     0617  0875               	movf	clcd_print@str+1,w
  1431     0618  1283               	bcf	3,5	;RP0=0, select bank0
  1432     0619  1303               	bcf	3,6	;RP1=0, select bank0
  1433     061A  00FF               	movwf	btemp+1
  1434     061B  0874               	movf	clcd_print@str,w
  1435     061C  0084               	movwf	4
  1436     061D  120A  118A  2003  120A  118A  	fcall	stringtab
  1437     0622  3A00               	xorlw	0
  1438     0623  1D03               	skipz
  1439     0624  2E26               	goto	u281
  1440     0625  2E27               	goto	u280
  1441     0626                     u281:
  1442     0626  2E01               	goto	l911
  1443     0627                     u280:
  1444     0627                     l32:
  1445     0627  0008               	return
  1446     0628                     __end_of_clcd_print:
  1447                           
  1448                           	psect	text5
  1449     05D9                     __ptext5:	
  1450 ;; *************** function _clcd_write *****************
  1451 ;; Defined at:
  1452 ;;		line 10 in file "clcd.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  byte            1    wreg     unsigned char 
  1455 ;;  mode            1    0[COMMON] unsigned char 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  byte            1    3[COMMON] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         1       0       0       0       0
  1468 ;;      Locals:         1       0       0       0       0
  1469 ;;      Temps:          2       0       0       0       0
  1470 ;;      Totals:         4       0       0       0       0
  1471 ;;Total ram usage:        4 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_init_display_controller
  1477 ;;		_clcd_print
  1478 ;;		_clcd_putch
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482     05D9                     _clcd_write:	
  1483                           ;psect for function _clcd_write
  1484                           
  1485                           
  1486                           ;incstack = 0
  1487                           ; Regs used in _clcd_write: [wreg]
  1488                           ;clcd_write@byte stored from wreg
  1489     05D9  00F3               	movwf	clcd_write@byte
  1490     05DA                     l873:
  1491                           
  1492                           ;clcd.c: 10: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 11: 
      +                          {;clcd.c: 12:     RE2 = mode;
  1493     05DA  1870               	btfsc	clcd_write@mode,0
  1494     05DB  2DDD               	goto	u261
  1495     05DC  2DE1               	goto	u260
  1496     05DD                     u261:
  1497     05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1498     05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1499     05DF  1509               	bsf	9,2	;volatile
  1500     05E0  2DE4               	goto	u274
  1501     05E1                     u260:
  1502     05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1503     05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1504     05E3  1109               	bcf	9,2	;volatile
  1505     05E4                     u274:
  1506     05E4                     l875:
  1507                           
  1508                           ;clcd.c: 13:     PORTD = byte;
  1509     05E4  0873               	movf	clcd_write@byte,w
  1510     05E5  0088               	movwf	8	;volatile
  1511     05E6                     l877:
  1512                           
  1513                           ;clcd.c: 15:     RE1 = 1;
  1514     05E6  1489               	bsf	9,1	;volatile
  1515                           
  1516                           ;clcd.c: 16:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1517     05E7  30A6               	movlw	166
  1518     05E8  00F1               	movwf	??_clcd_write
  1519     05E9                     u577:
  1520     05E9  0BF1               	decfsz	??_clcd_write,f
  1521     05EA  2DE9               	goto	u577
  1522     05EB  0000               	nop
  1523     05EC                     l879:
  1524                           
  1525                           ;clcd.c: 17:     RE1 = 0;
  1526     05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1527     05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1528     05EE  1089               	bcf	9,1	;volatile
  1529                           
  1530                           ;clcd.c: 19:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1531     05EF  301B               	movlw	27
  1532     05F0  00F2               	movwf	??_clcd_write+1
  1533     05F1  309E               	movlw	158
  1534     05F2  00F1               	movwf	??_clcd_write
  1535     05F3                     u587:
  1536     05F3  0BF1               	decfsz	??_clcd_write,f
  1537     05F4  2DF3               	goto	u587
  1538     05F5  0BF2               	decfsz	??_clcd_write+1,f
  1539     05F6  2DF3               	goto	u587
  1540     05F7  0000               	nop
  1541     05F8                     l17:
  1542     05F8  0008               	return
  1543     05F9                     __end_of_clcd_write:
  1544     007E                     btemp	set	126	;btemp
  1545     007E                     wtemp0	set	126
  1546                           
  1547                           	psect	config
  1548                           
  1549                           ;Config register CONFIG @ 0x2007
  1550                           ;	Oscillator Selection bits
  1551                           ;	FOSC = 0x3, unprogrammed default
  1552                           ;	Watchdog Timer Enable bit
  1553                           ;	WDTE = OFF, WDT disabled
  1554                           ;	Power-up Timer Enable bit
  1555                           ;	PWRTE = 0x1, unprogrammed default
  1556                           ;	Brown-out Reset Enable bit
  1557                           ;	BOREN = 0x1, unprogrammed default
  1558                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1559                           ;	LVP = 0x1, unprogrammed default
  1560                           ;	Data EEPROM Memory Code Protection bit
  1561                           ;	CPD = 0x1, unprogrammed default
  1562                           ;	Flash Program Memory Write Enable bits
  1563                           ;	WRT = 0x3, unprogrammed default
  1564                           ;	In-Circuit Debugger Mode bit
  1565                           ;	DEBUG = 0x1, unprogrammed default
  1566                           ;	Flash Program Memory Code Protection bit
  1567                           ;	CP = 0x1, unprogrammed default
  1568     2007                     	org	8199
  1569     2007  3FFB               	dw	16379

Data Sizes:
    Strings     22
    Constant    0
    Data        11
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     13      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[7]), STR_1(CODE[15]), main@str(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    4543
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                         _clcd_print
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    1479
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 20 21:50:57 2022

                              pc 0002                   clcd_print@addr 0076                               l20 067E  
                             l23 05BA                               l32 0627                               l17 05F8  
                             l39 05AF                               fsr 0004                              l901 05B0  
                            l911 0601                              l903 05B3                              l913 0611  
                            l905 05B4                              l921 067F                              l915 0617  
                            l907 05B5                              l931 06B5                              l923 0684  
                            l909 05F9                              l917 05AA                              l941 06E4  
                            l933 06C0                              l925 068A                              l951 06F2  
                            l943 06E6                              l935 06D6                              l927 069F  
                            l873 05DA                              l881 0628                              l961 0700  
                            l953 06F4                              l945 06E8                              l937 06DC  
                            l929 06AA                              l875 05E4                              l891 0653  
                            l883 0630                              l971 070E                              l955 06FA  
                            l963 0702                              l947 06EE                              l939 06DE  
                            l877 05E6                              l893 0656                              l885 0637  
                            l981 071C                              l973 0710                              l965 0708  
                            l957 06FC                              l949 06F0                              l879 05EC  
                            l895 065D                              l887 0647                              l991 072A  
                            l983 071E                              l967 070A                              l975 0712  
                            l959 06FE                              l897 0669                              l889 064C  
                            l993 072C                              l985 0720                              l977 0718  
                            l969 070C                              l899 0672                              l995 072E  
                            l987 0722                              l979 071A                              l997 0730  
                            l989 0724                              l999 0732                              _RE1 0049  
                            _RE2 004A                              u300 06D6                              u301 06D5  
                            u310 06E4                              u311 06E3                              u400 0786  
                            u320 06EE                              u401 0785                              u321 06ED  
                            u305 06D2                              u410 07A0                              u330 06FA  
                            u411 079F                              u331 06F9                              u260 05E1  
                            u500 07D6                              u420 07A6                              u340 0708  
                            u261 05DD                              u501 07D5                              u421 07A5  
                            u341 0707                              u430 07AC                              u350 0718  
                            u431 07AB                              u351 0717                              u280 0627  
                            u440 07B2                              u360 072A                              u281 0626  
                            u441 07B1                              u361 0729                              u274 05E4  
                            u450 07B8                              u370 073E                              u290 0692  
                            u451 07B7                              u371 073D                              u460 07BE  
                            u380 0754                              u517 062C                              u461 07BD  
                            u381 0753                              u470 07C4                              u390 076C  
                            u527 063B                              u471 07C3                              u391 076B  
                            u480 07CA                              u537 0649                              u481 07C9  
                            u490 07D0                              u547 065F                              u491 07CF  
                            u557 066D                              u567 067B                              u577 05E9  
                            u587 05F3                              fsr0 0004                              indf 0000  
                           l1001 0734                             l1011 0742                             l1003 0736  
                           l1021 074C                             l1013 0744                             l1005 0738  
                           l1031 075A                             l1015 0746                             l1007 073E  
                           l1023 074E                             l1041 0764                             l1033 075C  
                           l1025 0754                             l1017 0748                             l1009 0740  
                           l1051 0772                             l1035 075E                             l1027 0756  
                           l1043 0766                             l1019 074A                             l1061 077C  
                           l1053 0774                             l1045 076C                             l1037 0760  
                           l1029 0758                             l1071 07A0                             l1063 077E  
                           l1055 0776                             l1047 076E                             l1039 0762  
                           l1081 07BE                             l1073 07A6                             l1057 0778  
                           l1049 0770                             l1065 0780                             l1083 07C4  
                           l1075 07AC                             l1067 0786                             l1059 077A  
                           l1085 07CA                             l1077 07B2                             l1069 079A  
                           l1087 07D0                             l1079 07B8                             l1089 07D6  
                           STR_1 0013                             STR_2 0022                             _main 067F  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISD 0088                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 07EE  
                   __end_of_main 07EE                           ??_main 0077                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 0628          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070                     __pidataBANK0 05BB        ??_init_display_controller 0074  
                     _clcd_print 05F9                       _clcd_write 05D9                       __pmaintext 067F  
                     __stringtab 0003                          __ptext1 05AA                          __ptext2 05B0  
                        __ptext3 0628                          __ptext4 05F9                          __ptext5 05D9  
__end_of_init_display_controller 067F                __end_of_init_clcd 05BB                          main@str 0022  
           end_of_initialization 07FC                      ?_clcd_print 0074                      ?_clcd_write 0070  
                  clcd_print@str 0074              start_initialization 07EE                       init_fetch0 05C6  
                    __pdataBANK0 002D                    ??_init_config 0076                        ___latbits 0002  
                  __pcstackBANK0 0020                        __pstrings 0003                        _init_clcd 05B0  
            __end_of_init_config 05B0         ?_init_display_controller 0070                     ??_clcd_print 0077  
                   ??_clcd_write 0071                      __stringbase 0012               __end_of_clcd_print 0628  
             __end_of_clcd_write 05F9                       ?_init_clcd 0070               __end_of__stringtab 0013  
                    _init_config 05AA                         main@F860 002D                         main@wait 0020  
                       init_ram0 05CA                      ??_init_clcd 0076                        stringcode 000D  
                       stringdir 000D                         stringtab 0003  
