

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 15 22:08:43 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234                           
   235                           	psect	idataCOMMON
   236     0685                     __pidataCOMMON:
   237                           
   238                           ;initializer for _ssd
   239     0685  343F               	retlw	63
   240     0686  343F               	retlw	63
   241     0687  343F               	retlw	63
   242     0688  343F               	retlw	63
   243                           
   244                           	psect	idataBANK0
   245     069B                     __pidataBANK0:
   246                           
   247                           ;initializer for _digit
   248     069B  343F               	retlw	63
   249     069C  3406               	retlw	6
   250     069D  345B               	retlw	91
   251     069E  344F               	retlw	79
   252     069F  3466               	retlw	102
   253     06A0  346D               	retlw	109
   254     06A1  347D               	retlw	125
   255     06A2  3407               	retlw	7
   256     06A3  347F               	retlw	127
   257     06A4  346F               	retlw	111
   258     06A5  3408               	retlw	8
   259     06A6  3408               	retlw	8
   260     0008                     _PORTD	set	8
   261     0005                     _PORTA	set	5
   262     0085                     _TRISA	set	133
   263     0088                     _TRISD	set	136
   264                           
   265                           	psect	cinit
   266     07D6                     start_initialization:	
   267                           ; #config settings
   268                           
   269     07D6                     __initialization:
   270                           
   271                           ; Initialize objects allocated to BANK0
   272     07D6  1383               	bcf	3,7	;select IRP bank0
   273     07D7  302C               	movlw	low (__pdataBANK0+12)
   274     07D8  00FD               	movwf	btemp+-1
   275     07D9  3006               	movlw	high __pidataBANK0
   276     07DA  00FE               	movwf	btemp
   277     07DB  309B               	movlw	low __pidataBANK0
   278     07DC  00FF               	movwf	btemp+1
   279     07DD  3020               	movlw	low __pdataBANK0
   280     07DE  0084               	movwf	4
   281     07DF  120A  118A  26AB  120A  118A  	fcall	init_ram0
   282                           
   283                           ; Initialize objects allocated to COMMON
   284     07E4  120A  118A  2685  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   285     07E9  00FA               	movwf	__pdataCOMMON& (0+127)
   286     07EA  120A  118A  2686  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   287     07EF  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   288     07F0  120A  118A  2687  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   289     07F5  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   290     07F6  120A  118A  2688  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   291     07FB  00FD               	movwf	(__pdataCOMMON+3)& (0+127)
   292     07FC                     end_of_initialization:	
   293                           ;End of C runtime variable initialization code
   294                           
   295     07FC                     __end_of__initialization:
   296     07FC  0183               	clrf	3
   297     07FD  120A  118A  2F4A   	ljmp	_main	;jump to C main() function
   298                           
   299                           	psect	dataCOMMON
   300     007A                     __pdataCOMMON:
   301     007A                     _ssd:
   302     007A                     	ds	4
   303                           
   304                           	psect	dataBANK0
   305     0020                     __pdataBANK0:
   306     0020                     _digit:
   307     0020                     	ds	12
   308                           
   309                           	psect	inittext
   310     06A7                     init_fetch0:	
   311                           ;	Called with low address in FSR and high address in W
   312                           
   313     06A7  087E               	movf	btemp,w
   314     06A8  008A               	movwf	10
   315     06A9  087F               	movf	btemp+1,w
   316     06AA  0082               	movwf	2
   317     06AB                     init_ram0:	
   318                           ;Called with:
   319                           ;	high address of idata address in btemp 
   320                           ;	low address of idata address in btemp+1 
   321                           ;	low address of data in FSR
   322                           ;	high address + 1 of data in btemp-1
   323                           
   324     06AB  120A  118A  26A7  120A  118A  	fcall	init_fetch0
   325     06B0  0080               	movwf	0
   326     06B1  0A84               	incf	4,f
   327     06B2  0804               	movf	4,w
   328     06B3  067D               	xorwf	btemp+-1,w
   329     06B4  1903               	btfsc	3,2
   330     06B5  3400               	retlw	0
   331     06B6  0AFF               	incf	btemp+1,f
   332     06B7  1903               	btfsc	3,2
   333     06B8  0AFE               	incf	btemp,f
   334     06B9  2EAB               	goto	init_ram0
   335                           
   336                           	psect	cstackCOMMON
   337     0070                     __pcstackCOMMON:
   338     0070                     ?_init_ssd:
   339     0070                     ??_init_ssd:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_display:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ??_display:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_init_config:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ??_init_config:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_main:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?___lwmod:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ___lwmod@divisor:	
   361                           ; 2 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365     0070                     	ds	2
   366     0072                     ___lwmod@dividend:
   367                           
   368                           ; 2 bytes @ 0x2
   369     0072                     	ds	2
   370     0074                     ??___lwmod:
   371     0074                     display@wait:	
   372                           ; 1 bytes @ 0x4
   373                           
   374                           
   375                           ; 4 bytes @ 0x4
   376     0074                     	ds	1
   377     0075                     ___lwmod@counter:
   378                           
   379                           ; 1 bytes @ 0x5
   380     0075                     	ds	3
   381     0078                     display@data:
   382                           
   383                           ; 1 bytes @ 0x8
   384     0078                     	ds	1
   385     0079                     display@digit:
   386                           
   387                           ; 1 bytes @ 0x9
   388     0079                     	ds	1
   389     007A                     ??_main:
   390                           
   391                           	psect	cstackBANK0
   392     002C                     __pcstackBANK0:	
   393                           ; 1 bytes @ 0xA
   394                           
   395     002C                     main@ssd:
   396                           
   397                           ; 4 bytes @ 0x0
   398     002C                     	ds	4
   399     0030                     main@wait:
   400                           
   401                           ; 2 bytes @ 0x4
   402     0030                     	ds	2
   403     0032                     main@i:
   404                           
   405                           ; 2 bytes @ 0x6
   406     0032                     	ds	2
   407                           
   408                           	psect	maintext
   409     074A                     __pmaintext:	
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 37 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;  ssd             4    0[BANK0 ] unsigned char [4]
   420 ;;  i               2    6[BANK0 ] unsigned int 
   421 ;;  wait            2    4[BANK0 ] unsigned int 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : B00/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         0       8       0       0       0
   433 ;;      Temps:          0       0       0       0       0
   434 ;;      Totals:         0       8       0       0       0
   435 ;;Total ram usage:        8 bytes
   436 ;; Hardware stack levels required when called: 2
   437 ;; This function calls:
   438 ;;		___lwmod
   439 ;;		_display
   440 ;;		_init_config
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446     074A                     _main:	
   447                           ;psect for function _main
   448                           
   449     074A                     l749:	
   450                           ;incstack = 0
   451                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   452                           
   453     074A  120A  118A  2689  120A  118A  	fcall	_init_config
   454     074F                     l751:
   455     074F  1283               	bcf	3,5	;RP0=0, select bank0
   456     0750  1303               	bcf	3,6	;RP1=0, select bank0
   457     0751  01B0               	clrf	main@wait
   458     0752  01B1               	clrf	main@wait+1
   459     0753                     l753:
   460     0753  01B2               	clrf	main@i
   461     0754  01B3               	clrf	main@i+1
   462     0755                     l755:
   463     0755  3001               	movlw	1
   464     0756  1283               	bcf	3,5	;RP0=0, select bank0
   465     0757  1303               	bcf	3,6	;RP1=0, select bank0
   466     0758  07B0               	addwf	main@wait,f
   467     0759  1803               	skipnc
   468     075A  0AB1               	incf	main@wait+1,f
   469     075B  3000               	movlw	0
   470     075C  07B1               	addwf	main@wait+1,f
   471     075D  3033               	movlw	51
   472     075E  0630               	xorwf	main@wait,w
   473     075F  0431               	iorwf	main@wait+1,w
   474     0760  1D03               	btfss	3,2
   475     0761  2F63               	goto	u221
   476     0762  2F64               	goto	u220
   477     0763                     u221:
   478     0763  2FCC               	goto	l769
   479     0764                     u220:
   480     0764                     l757:
   481     0764  01B0               	clrf	main@wait
   482     0765  01B1               	clrf	main@wait+1
   483     0766                     l759:
   484     0766  300C               	movlw	12
   485     0767  00F0               	movwf	___lwmod@divisor
   486     0768  3000               	movlw	0
   487     0769  00F1               	movwf	___lwmod@divisor+1
   488     076A  0833               	movf	main@i+1,w
   489     076B  00F3               	movwf	___lwmod@dividend+1
   490     076C  0832               	movf	main@i,w
   491     076D  00F2               	movwf	___lwmod@dividend
   492     076E  120A  118A  26BA  120A  118A  	fcall	___lwmod
   493     0773  0870               	movf	?___lwmod,w
   494     0774  3E20               	addlw	(low (_digit| 0))& (0+255)
   495     0775  0084               	movwf	4
   496     0776  1383               	bcf	3,7	;select IRP bank0
   497     0777  0800               	movf	0,w
   498     0778  1283               	bcf	3,5	;RP0=0, select bank0
   499     0779  1303               	bcf	3,6	;RP1=0, select bank0
   500     077A  00AC               	movwf	main@ssd
   501     077B                     l761:
   502     077B  300C               	movlw	12
   503     077C  00F0               	movwf	___lwmod@divisor
   504     077D  3000               	movlw	0
   505     077E  00F1               	movwf	___lwmod@divisor+1
   506     077F  0832               	movf	main@i,w
   507     0780  3E01               	addlw	1
   508     0781  00F2               	movwf	___lwmod@dividend
   509     0782  0833               	movf	main@i+1,w
   510     0783  1803               	skipnc
   511     0784  3E01               	addlw	1
   512     0785  3E00               	addlw	0
   513     0786  00F3               	movwf	___lwmod@dividend+1
   514     0787  120A  118A  26BA  120A  118A  	fcall	___lwmod
   515     078C  0870               	movf	?___lwmod,w
   516     078D  3E20               	addlw	(low (_digit| 0))& (0+255)
   517     078E  0084               	movwf	4
   518     078F  1383               	bcf	3,7	;select IRP bank0
   519     0790  0800               	movf	0,w
   520     0791  1283               	bcf	3,5	;RP0=0, select bank0
   521     0792  1303               	bcf	3,6	;RP1=0, select bank0
   522     0793  00AD               	movwf	main@ssd+1
   523     0794                     l763:
   524     0794  300C               	movlw	12
   525     0795  00F0               	movwf	___lwmod@divisor
   526     0796  3000               	movlw	0
   527     0797  00F1               	movwf	___lwmod@divisor+1
   528     0798  0832               	movf	main@i,w
   529     0799  3E02               	addlw	2
   530     079A  00F2               	movwf	___lwmod@dividend
   531     079B  0833               	movf	main@i+1,w
   532     079C  1803               	skipnc
   533     079D  3E01               	addlw	1
   534     079E  3E00               	addlw	0
   535     079F  00F3               	movwf	___lwmod@dividend+1
   536     07A0  120A  118A  26BA  120A  118A  	fcall	___lwmod
   537     07A5  0870               	movf	?___lwmod,w
   538     07A6  3E20               	addlw	(low (_digit| 0))& (0+255)
   539     07A7  0084               	movwf	4
   540     07A8  1383               	bcf	3,7	;select IRP bank0
   541     07A9  0800               	movf	0,w
   542     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   543     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   544     07AC  00AE               	movwf	main@ssd+2
   545     07AD                     l765:
   546     07AD  300C               	movlw	12
   547     07AE  00F0               	movwf	___lwmod@divisor
   548     07AF  3000               	movlw	0
   549     07B0  00F1               	movwf	___lwmod@divisor+1
   550     07B1  0832               	movf	main@i,w
   551     07B2  3E03               	addlw	3
   552     07B3  00F2               	movwf	___lwmod@dividend
   553     07B4  0833               	movf	main@i+1,w
   554     07B5  1803               	skipnc
   555     07B6  3E01               	addlw	1
   556     07B7  3E00               	addlw	0
   557     07B8  00F3               	movwf	___lwmod@dividend+1
   558     07B9  120A  118A  26BA  120A  118A  	fcall	___lwmod
   559     07BE  0870               	movf	?___lwmod,w
   560     07BF  3E20               	addlw	(low (_digit| 0))& (0+255)
   561     07C0  0084               	movwf	4
   562     07C1  1383               	bcf	3,7	;select IRP bank0
   563     07C2  0800               	movf	0,w
   564     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   565     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   566     07C5  00AF               	movwf	main@ssd+3
   567     07C6                     l767:
   568     07C6  3001               	movlw	1
   569     07C7  07B2               	addwf	main@i,f
   570     07C8  1803               	skipnc
   571     07C9  0AB3               	incf	main@i+1,f
   572     07CA  3000               	movlw	0
   573     07CB  07B3               	addwf	main@i+1,f
   574     07CC                     l769:
   575     07CC  302C               	movlw	(low (main@ssd| 0))& (0+255)
   576     07CD  120A  118A  26F4  120A  118A  	fcall	_display
   577     07D2  2F55               	goto	l755
   578     07D3  120A  118A  2800   	ljmp	start
   579     07D6                     __end_of_main:
   580                           
   581                           	psect	text1
   582     0689                     __ptext1:	
   583 ;; *************** function _init_config *****************
   584 ;; Defined at:
   585 ;;		line 33 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 1
   606 ;; This function calls:
   607 ;;		_init_ssd
   608 ;; This function is called by:
   609 ;;		_main
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613     0689                     _init_config:	
   614                           ;psect for function _init_config
   615                           
   616     0689                     l707:	
   617                           ;incstack = 0
   618                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   619                           
   620     0689  120A  118A  268F  120A  118A  	fcall	_init_ssd
   621     068E                     l11:
   622     068E  0008               	return
   623     068F                     __end_of_init_config:
   624                           
   625                           	psect	text2
   626     068F                     __ptext2:	
   627 ;; *************** function _init_ssd *****************
   628 ;; Defined at:
   629 ;;		line 11 in file "ssd.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_init_config
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656     068F                     _init_ssd:	
   657                           ;psect for function _init_ssd
   658                           
   659     068F                     l701:	
   660                           ;incstack = 0
   661                           ; Regs used in _init_ssd: [wreg+status,2]
   662                           
   663                           
   664                           ;ssd.c: 14:     TRISD = 0x00;
   665     068F  1683               	bsf	3,5	;RP0=1, select bank1
   666     0690  1303               	bcf	3,6	;RP1=0, select bank1
   667     0691  0188               	clrf	8	;volatile
   668     0692                     l703:
   669                           
   670                           ;ssd.c: 17:     TRISA = TRISA & 0xC3;
   671     0692  0805               	movf	5,w	;volatile
   672     0693  39C3               	andlw	195
   673     0694  0085               	movwf	5	;volatile
   674     0695                     l705:
   675                           
   676                           ;ssd.c: 20:     PORTA = PORTA & 0xC3;
   677     0695  1283               	bcf	3,5	;RP0=0, select bank0
   678     0696  1303               	bcf	3,6	;RP1=0, select bank0
   679     0697  0805               	movf	5,w	;volatile
   680     0698  39C3               	andlw	195
   681     0699  0085               	movwf	5	;volatile
   682     069A                     l31:
   683     069A  0008               	return
   684     069B                     __end_of_init_ssd:
   685                           
   686                           	psect	text3
   687     06F4                     __ptext3:	
   688 ;; *************** function _display *****************
   689 ;; Defined at:
   690 ;;		line 23 in file "ssd.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  data            1    wreg     PTR unsigned char 
   693 ;;		 -> main@ssd(4), 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  data            1    8[COMMON] PTR unsigned char 
   696 ;;		 -> main@ssd(4), 
   697 ;;  wait            4    4[COMMON] unsigned long 
   698 ;;  digit           1    9[COMMON] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         6       0       0       0       0
   710 ;;      Temps:          4       0       0       0       0
   711 ;;      Totals:        10       0       0       0       0
   712 ;;Total ram usage:       10 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721     06F4                     _display:	
   722                           ;psect for function _display
   723                           
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   727                           ;display@data stored from wreg
   728     06F4  00F8               	movwf	display@data
   729     06F5                     l709:
   730                           
   731                           ;ssd.c: 23: void display(unsigned char data[]);ssd.c: 24: {;ssd.c: 25:     unsigned char
      +                           digit ;;ssd.c: 27:     for (digit = 0; digit < 4; digit++)
   732     06F5  01F9               	clrf	display@digit
   733     06F6                     l715:
   734                           
   735                           ;ssd.c: 28:     {;ssd.c: 29:         PORTD = data[digit];
   736     06F6  0879               	movf	display@digit,w
   737     06F7  0778               	addwf	display@data,w
   738     06F8  00F0               	movwf	??_display
   739     06F9  0870               	movf	??_display,w
   740     06FA  0084               	movwf	4
   741     06FB  1383               	bcf	3,7	;select IRP bank0
   742     06FC  0800               	movf	0,w
   743     06FD  1283               	bcf	3,5	;RP0=0, select bank0
   744     06FE  1303               	bcf	3,6	;RP1=0, select bank0
   745     06FF  0088               	movwf	8	;volatile
   746     0700                     l717:
   747                           
   748                           ;ssd.c: 30:         PORTA = (PORTA & 0xC3) | (0x04 << digit);
   749     0700  3004               	movlw	4
   750     0701  00F0               	movwf	??_display
   751     0702  0A79               	incf	display@digit,w
   752     0703  2F06               	goto	u124
   753     0704                     u125:
   754     0704  1003               	clrc
   755     0705  0DF0               	rlf	??_display,f
   756     0706                     u124:
   757     0706  3EFF               	addlw	-1
   758     0707  1D03               	skipz
   759     0708  2F04               	goto	u125
   760     0709  0805               	movf	5,w	;volatile
   761     070A  39C3               	andlw	195
   762     070B  0470               	iorwf	??_display,w
   763     070C  0085               	movwf	5	;volatile
   764     070D                     l719:
   765                           
   766                           ;ssd.c: 32:        for (unsigned long int wait = 400; wait--; );
   767     070D  3000               	movlw	0
   768     070E  00F7               	movwf	display@wait+3
   769     070F  3000               	movlw	0
   770     0710  00F6               	movwf	display@wait+2
   771     0711  3001               	movlw	1
   772     0712  00F5               	movwf	display@wait+1
   773     0713  3090               	movlw	144
   774     0714  00F4               	movwf	display@wait
   775     0715                     l721:
   776     0715  3001               	movlw	1
   777     0716  00F0               	movwf	??_display
   778     0717  3000               	movlw	0
   779     0718  00F1               	movwf	??_display+1
   780     0719  3000               	movlw	0
   781     071A  00F2               	movwf	??_display+2
   782     071B  3000               	movlw	0
   783     071C  00F3               	movwf	??_display+3
   784     071D  0870               	movf	??_display,w
   785     071E  02F4               	subwf	display@wait,f
   786     071F  0871               	movf	??_display+1,w
   787     0720  1C03               	skipc
   788     0721  0F71               	incfsz	??_display+1,w
   789     0722  2F24               	goto	u135
   790     0723  2F25               	goto	u136
   791     0724                     u135:
   792     0724  02F5               	subwf	display@wait+1,f
   793     0725                     u136:
   794     0725  0872               	movf	??_display+2,w
   795     0726  1C03               	skipc
   796     0727  0F72               	incfsz	??_display+2,w
   797     0728  2F2A               	goto	u137
   798     0729  2F2B               	goto	u138
   799     072A                     u137:
   800     072A  02F6               	subwf	display@wait+2,f
   801     072B                     u138:
   802     072B  0873               	movf	??_display+3,w
   803     072C  1C03               	skipc
   804     072D  0F73               	incfsz	??_display+3,w
   805     072E  2F30               	goto	u139
   806     072F  2F31               	goto	u130
   807     0730                     u139:
   808     0730  02F7               	subwf	display@wait+3,f
   809     0731                     u130:
   810     0731  0A74               	incf	display@wait,w
   811     0732  1D03               	skipz
   812     0733  2F3E               	goto	u141
   813     0734  0A75               	incf	display@wait+1,w
   814     0735  1D03               	skipz
   815     0736  2F3E               	goto	u141
   816     0737  0A76               	incf	display@wait+2,w
   817     0738  1D03               	skipz
   818     0739  2F3E               	goto	u141
   819     073A  0A77               	incf	display@wait+3,w
   820     073B  1D03               	btfss	3,2
   821     073C  2F3E               	goto	u141
   822     073D  2F3F               	goto	u140
   823     073E                     u141:
   824     073E  2F15               	goto	l721
   825     073F                     u140:
   826     073F                     l723:
   827                           
   828                           ;ssd.c: 33:     }
   829     073F  3001               	movlw	1
   830     0740  00F0               	movwf	??_display
   831     0741  0870               	movf	??_display,w
   832     0742  07F9               	addwf	display@digit,f
   833     0743                     l725:
   834     0743  3004               	movlw	4
   835     0744  0279               	subwf	display@digit,w
   836     0745  1C03               	skipc
   837     0746  2F48               	goto	u151
   838     0747  2F49               	goto	u150
   839     0748                     u151:
   840     0748  2EF6               	goto	l715
   841     0749                     u150:
   842     0749                     l39:
   843     0749  0008               	return
   844     074A                     __end_of_display:
   845                           
   846                           	psect	text4
   847     06BA                     __ptext4:	
   848 ;; *************** function ___lwmod *****************
   849 ;; Defined at:
   850 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  divisor         2    0[COMMON] unsigned int 
   853 ;;  dividend        2    2[COMMON] unsigned int 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  counter         1    5[COMMON] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  2    0[COMMON] unsigned int 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         4       0       0       0       0
   866 ;;      Locals:         1       0       0       0       0
   867 ;;      Temps:          1       0       0       0       0
   868 ;;      Totals:         6       0       0       0       0
   869 ;;Total ram usage:        6 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878     06BA                     ___lwmod:	
   879                           ;psect for function ___lwmod
   880                           
   881     06BA                     l727:	
   882                           ;incstack = 0
   883                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   884                           
   885     06BA  0870               	movf	___lwmod@divisor,w
   886     06BB  0471               	iorwf	___lwmod@divisor+1,w
   887     06BC  1903               	btfsc	3,2
   888     06BD  2EBF               	goto	u161
   889     06BE  2EC0               	goto	u160
   890     06BF                     u161:
   891     06BF  2EEF               	goto	l745
   892     06C0                     u160:
   893     06C0                     l729:
   894     06C0  01F5               	clrf	___lwmod@counter
   895     06C1  0AF5               	incf	___lwmod@counter,f
   896     06C2  2ECE               	goto	l735
   897     06C3                     l731:
   898     06C3  3001               	movlw	1
   899     06C4                     u175:
   900     06C4  1003               	clrc
   901     06C5  0DF0               	rlf	___lwmod@divisor,f
   902     06C6  0DF1               	rlf	___lwmod@divisor+1,f
   903     06C7  3EFF               	addlw	-1
   904     06C8  1D03               	skipz
   905     06C9  2EC4               	goto	u175
   906     06CA                     l733:
   907     06CA  3001               	movlw	1
   908     06CB  00F4               	movwf	??___lwmod
   909     06CC  0874               	movf	??___lwmod,w
   910     06CD  07F5               	addwf	___lwmod@counter,f
   911     06CE                     l735:
   912     06CE  1FF1               	btfss	___lwmod@divisor+1,7
   913     06CF  2ED1               	goto	u181
   914     06D0  2ED2               	goto	u180
   915     06D1                     u181:
   916     06D1  2EC3               	goto	l731
   917     06D2                     u180:
   918     06D2                     l737:
   919     06D2  0871               	movf	___lwmod@divisor+1,w
   920     06D3  0273               	subwf	___lwmod@dividend+1,w
   921     06D4  1D03               	skipz
   922     06D5  2ED8               	goto	u195
   923     06D6  0870               	movf	___lwmod@divisor,w
   924     06D7  0272               	subwf	___lwmod@dividend,w
   925     06D8                     u195:
   926     06D8  1C03               	skipc
   927     06D9  2EDB               	goto	u191
   928     06DA  2EDC               	goto	u190
   929     06DB                     u191:
   930     06DB  2EE2               	goto	l741
   931     06DC                     u190:
   932     06DC                     l739:
   933     06DC  0870               	movf	___lwmod@divisor,w
   934     06DD  02F2               	subwf	___lwmod@dividend,f
   935     06DE  0871               	movf	___lwmod@divisor+1,w
   936     06DF  1C03               	skipc
   937     06E0  03F3               	decf	___lwmod@dividend+1,f
   938     06E1  02F3               	subwf	___lwmod@dividend+1,f
   939     06E2                     l741:
   940     06E2  3001               	movlw	1
   941     06E3                     u205:
   942     06E3  1003               	clrc
   943     06E4  0CF1               	rrf	___lwmod@divisor+1,f
   944     06E5  0CF0               	rrf	___lwmod@divisor,f
   945     06E6  3EFF               	addlw	-1
   946     06E7  1D03               	skipz
   947     06E8  2EE3               	goto	u205
   948     06E9                     l743:
   949     06E9  3001               	movlw	1
   950     06EA  02F5               	subwf	___lwmod@counter,f
   951     06EB  1D03               	btfss	3,2
   952     06EC  2EEE               	goto	u211
   953     06ED  2EEF               	goto	u210
   954     06EE                     u211:
   955     06EE  2ED2               	goto	l737
   956     06EF                     u210:
   957     06EF                     l745:
   958     06EF  0873               	movf	___lwmod@dividend+1,w
   959     06F0  00F1               	movwf	?___lwmod+1
   960     06F1  0872               	movf	___lwmod@dividend,w
   961     06F2  00F0               	movwf	?___lwmod
   962     06F3                     l407:
   963     06F3  0008               	return
   964     06F4                     __end_of___lwmod:
   965     007E                     btemp	set	126	;btemp
   966     007E                     wtemp0	set	126
   967                           
   968                           	psect	config
   969                           
   970                           ;Config register CONFIG @ 0x2007
   971                           ;	Oscillator Selection bits
   972                           ;	FOSC = 0x3, unprogrammed default
   973                           ;	Watchdog Timer Enable bit
   974                           ;	WDTE = OFF, WDT disabled
   975                           ;	Power-up Timer Enable bit
   976                           ;	PWRTE = 0x1, unprogrammed default
   977                           ;	Brown-out Reset Enable bit
   978                           ;	BOREN = 0x1, unprogrammed default
   979                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   980                           ;	LVP = 0x1, unprogrammed default
   981                           ;	Data EEPROM Memory Code Protection bit
   982                           ;	CPD = 0x1, unprogrammed default
   983                           ;	Flash Program Memory Write Enable bits
   984                           ;	WRT = 0x3, unprogrammed default
   985                           ;	In-Circuit Debugger Mode bit
   986                           ;	DEBUG = 0x1, unprogrammed default
   987                           ;	Flash Program Memory Code Protection bit
   988                           ;	CP = 0x1, unprogrammed default
   989     2007                     	org	8199
   990     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1145
                                              0 BANK0      8     8      0
                            ___lwmod
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10    10      0     168
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwmod
   _display
   _init_config
     _init_ssd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 15 22:08:43 2022

                      pc 0002                       l11 068E                       l31 069A  
                     l39 0749                       fsr 0004                      l407 06F3  
                    l701 068F                      l703 0692                      l721 0715  
                    l705 0695                      l731 06C3                      l723 073F  
                    l715 06F6                      l707 0689                      l741 06E2  
                    l733 06CA                      l725 0743                      l717 0700  
                    l709 06F5                      l743 06E9                      l735 06CE  
                    l727 06BA                      l719 070D                      l751 074F  
                    l737 06D2                      l729 06C0                      l745 06EF  
                    l761 077B                      l753 0753                      l739 06DC  
                    l763 0794                      l755 0755                      l765 07AD  
                    l757 0764                      l749 074A                      l767 07C6  
                    l759 0766                      l769 07CC                      u210 06EF  
                    u130 0731                      u211 06EE                      u140 073F  
                    u124 0706                      u220 0764                      u205 06E3  
                    u141 073E                      u125 0704                      u221 0763  
                    u150 0749                      u151 0748                      u135 0724  
                    u160 06C0                      u136 0725                      u161 06BF  
                    u137 072A                      u138 072B                      u139 0730  
                    u180 06D2                      u181 06D1                      u190 06DC  
                    u191 06DB                      u175 06C4                      u195 06D8  
                    _ssd 007A                      fsr0 0004                      indf 0000  
            display@data 0078              display@wait 0074                     _main 074A  
                   btemp 007E                     start 0000                    ?_main 0070  
        __end_of___lwmod 06F4             ?_init_config 0070                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
           display@digit 0079          __end_of_display 074A                    _digit 0020  
                  main@i 0032                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07D6             __end_of_main 07D6  
                 ??_main 007A                ??___lwmod 0074         __end_of_init_ssd 069B  
              ??_display 0070             __pdataCOMMON 007A  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 069B               __pmaintext 074A  
              ?_init_ssd 0070                  ___lwmod 06BA                  __ptext1 0689  
                __ptext2 068F                  __ptext3 06F4                  __ptext4 06BA  
                _display 06F4                  main@ssd 002C     end_of_initialization 07FC  
             ??_init_ssd 0070            __pidataCOMMON 0685      start_initialization 07D6  
             init_fetch0 06A7              __pdataBANK0 0020            ??_init_config 0070  
              ___latbits 0002            __pcstackBANK0 002C                 ?___lwmod 0070  
               ?_display 0070      __end_of_init_config 068F              _init_config 0689  
               _init_ssd 068F                 main@wait 0030                 init_ram0 06AB  
       ___lwmod@dividend 0072          ___lwmod@divisor 0070          ___lwmod@counter 0075  
