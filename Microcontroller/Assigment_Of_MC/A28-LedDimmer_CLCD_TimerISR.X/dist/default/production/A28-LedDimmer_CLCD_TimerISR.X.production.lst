

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 29 13:39:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234     0000                     	;# 
   235     0001                     	;# 
   236     0002                     	;# 
   237     0003                     	;# 
   238     0004                     	;# 
   239     0005                     	;# 
   240     0006                     	;# 
   241     0007                     	;# 
   242     0008                     	;# 
   243     0009                     	;# 
   244     000A                     	;# 
   245     000B                     	;# 
   246     000C                     	;# 
   247     000D                     	;# 
   248     000E                     	;# 
   249     000E                     	;# 
   250     000F                     	;# 
   251     0010                     	;# 
   252     0011                     	;# 
   253     0012                     	;# 
   254     0013                     	;# 
   255     0014                     	;# 
   256     0015                     	;# 
   257     0015                     	;# 
   258     0016                     	;# 
   259     0017                     	;# 
   260     0018                     	;# 
   261     0019                     	;# 
   262     001A                     	;# 
   263     001B                     	;# 
   264     001B                     	;# 
   265     001C                     	;# 
   266     001D                     	;# 
   267     001E                     	;# 
   268     001F                     	;# 
   269     0081                     	;# 
   270     0085                     	;# 
   271     0086                     	;# 
   272     0087                     	;# 
   273     0088                     	;# 
   274     0089                     	;# 
   275     008C                     	;# 
   276     008D                     	;# 
   277     008E                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000E                     	;# 
   310     000F                     	;# 
   311     0010                     	;# 
   312     0011                     	;# 
   313     0012                     	;# 
   314     0013                     	;# 
   315     0014                     	;# 
   316     0015                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0017                     	;# 
   320     0018                     	;# 
   321     0019                     	;# 
   322     001A                     	;# 
   323     001B                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001D                     	;# 
   327     001E                     	;# 
   328     001F                     	;# 
   329     0081                     	;# 
   330     0085                     	;# 
   331     0086                     	;# 
   332     0087                     	;# 
   333     0088                     	;# 
   334     0089                     	;# 
   335     008C                     	;# 
   336     008D                     	;# 
   337     008E                     	;# 
   338     0091                     	;# 
   339     0092                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0098                     	;# 
   343     0099                     	;# 
   344     009C                     	;# 
   345     009D                     	;# 
   346     009E                     	;# 
   347     009F                     	;# 
   348     010C                     	;# 
   349     010D                     	;# 
   350     010E                     	;# 
   351     010F                     	;# 
   352     018C                     	;# 
   353     018D                     	;# 
   354                           
   355                           	psect	nvCOMMON
   356     0078                     __pnvCOMMON:
   357     0078                     _duty_cycle:
   358     0078                     	ds	1
   359     0001                     _TMR0	set	1
   360     0008                     _PORTD	set	8
   361     001E                     _ADRESH	set	30
   362     0040                     _RD0	set	64
   363     0061                     _TMR2IF	set	97
   364     005D                     _TMR0IE	set	93
   365     005F                     _GIE	set	95
   366     005E                     _PEIE	set	94
   367     00FA                     _nDONE	set	250
   368     00FA                     _GO	set	250
   369     00F8                     _ADON	set	248
   370     0088                     _TRISD	set	136
   371     009E                     _ADRESL	set	158
   372     040B                     _PSA	set	1035
   373     040D                     _T0CS	set	1037
   374     04FF                     _ADFM	set	1279
   375                           
   376                           	psect	cinit
   377     000F                     start_initialization:	
   378                           ; #config settings
   379                           
   380     000F                     __initialization:
   381                           
   382                           ; Clear objects allocated to COMMON
   383     000F  01F9               	clrf	__pbssCOMMON& (0+127)
   384     0010                     end_of_initialization:	
   385                           ;End of C runtime variable initialization code
   386                           
   387     0010                     __end_of__initialization:
   388     0010  0183               	clrf	3
   389     0011  120A  118A  288B   	ljmp	_main	;jump to C main() function
   390                           
   391                           	psect	bssCOMMON
   392     0079                     __pbssCOMMON:
   393     0079                     isr@loop_counter:
   394     0079                     	ds	1
   395                           
   396                           	psect	cstackCOMMON
   397     0070                     __pcstackCOMMON:
   398     0070                     ?_init_timer0:
   399     0070                     ?_init_adc:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_init_config:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_main:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_isr:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ??_isr:	
   412                           ; 1 bytes @ 0x0
   413                           
   414                           
   415                           ; 1 bytes @ 0x0
   416     0070                     	ds	3
   417     0073                     ??_init_timer0:
   418     0073                     ??_init_adc:	
   419                           ; 1 bytes @ 0x3
   420                           
   421     0073                     ??_init_config:	
   422                           ; 1 bytes @ 0x3
   423                           
   424     0073                     ?_read_adc:	
   425                           ; 1 bytes @ 0x3
   426                           
   427                           
   428                           ; 2 bytes @ 0x3
   429     0073                     	ds	2
   430     0075                     ??_read_adc:
   431     0075                     read_adc@adc_reg_val:	
   432                           ; 1 bytes @ 0x5
   433                           
   434                           
   435                           ; 2 bytes @ 0x5
   436     0075                     	ds	2
   437     0077                     ??___lwdiv:
   438                           
   439                           ; 1 bytes @ 0x7
   440     0077                     	ds	1
   441     0078                     ??_main:
   442                           
   443                           	psect	cstackBANK0
   444     0020                     __pcstackBANK0:	
   445                           ; 1 bytes @ 0x8
   446                           
   447     0020                     ?___lwdiv:
   448     0020                     ___lwdiv@divisor:	
   449                           ; 2 bytes @ 0x0
   450                           
   451                           
   452                           ; 2 bytes @ 0x0
   453     0020                     	ds	2
   454     0022                     ___lwdiv@dividend:
   455                           
   456                           ; 2 bytes @ 0x2
   457     0022                     	ds	2
   458     0024                     ___lwdiv@counter:
   459                           
   460                           ; 1 bytes @ 0x4
   461     0024                     	ds	1
   462     0025                     ___lwdiv@quotient:
   463                           
   464                           ; 2 bytes @ 0x5
   465     0025                     	ds	2
   466                           
   467                           	psect	maintext
   468     008B                     __pmaintext:	
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 25 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  wait            2    0        unsigned int 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : B00/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels required when called: 3
   494 ;; This function calls:
   495 ;;		___lwdiv
   496 ;;		_init_config
   497 ;;		_read_adc
   498 ;; This function is called by:
   499 ;;		Startup code after reset
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503     008B                     _main:	
   504                           ;psect for function _main
   505                           
   506     008B                     l811:	
   507                           ;incstack = 0
   508                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   509                           
   510     008B  120A  118A  20AE  120A  118A  	fcall	_init_config
   511     0090                     l813:
   512     0090                     l815:
   513     0090  300A               	movlw	10
   514     0091  1283               	bcf	3,5	;RP0=0, select bank0
   515     0092  1303               	bcf	3,6	;RP1=0, select bank0
   516     0093  00A0               	movwf	___lwdiv@divisor
   517     0094  3000               	movlw	0
   518     0095  00A1               	movwf	___lwdiv@divisor+1
   519     0096  120A  118A  20C1  120A  118A  	fcall	_read_adc
   520     009B  0874               	movf	?_read_adc+1,w
   521     009C  1283               	bcf	3,5	;RP0=0, select bank0
   522     009D  1303               	bcf	3,6	;RP1=0, select bank0
   523     009E  00A3               	movwf	___lwdiv@dividend+1
   524     009F  0873               	movf	?_read_adc,w
   525     00A0  00A2               	movwf	___lwdiv@dividend
   526     00A1  120A  118A  2014  120A  118A  	fcall	___lwdiv
   527     00A6  1283               	bcf	3,5	;RP0=0, select bank0
   528     00A7  1303               	bcf	3,6	;RP1=0, select bank0
   529     00A8  0820               	movf	?___lwdiv,w
   530     00A9  00F8               	movwf	_duty_cycle
   531     00AA  2890               	goto	l815
   532     00AB  120A  118A  280C   	ljmp	start
   533     00AE                     __end_of_main:
   534                           
   535                           	psect	text1
   536     00C1                     __ptext1:	
   537 ;; *************** function _read_adc *****************
   538 ;; Defined at:
   539 ;;		line 12 in file "adc.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  adc_reg_val     2    5[COMMON] unsigned short 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  2    3[COMMON] unsigned short 
   546 ;; Registers used:
   547 ;;		wreg
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         2       0       0       0       0
   554 ;;      Locals:         2       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         4       0       0       0       0
   557 ;;Total ram usage:        4 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567     00C1                     _read_adc:	
   568                           ;psect for function _read_adc
   569                           
   570     00C1                     l747:	
   571                           ;incstack = 0
   572                           ; Regs used in _read_adc: [wreg]
   573                           
   574                           
   575                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
   576     00C1  1283               	bcf	3,5	;RP0=0, select bank0
   577     00C2  1303               	bcf	3,6	;RP1=0, select bank0
   578     00C3  151F               	bsf	31,2	;volatile
   579     00C4                     l18:	
   580                           ;adc.c: 20:     while (nDONE);
   581                           
   582     00C4  191F               	btfsc	31,2	;volatile
   583     00C5  28C7               	goto	u141
   584     00C6  28C8               	goto	u140
   585     00C7                     u141:
   586     00C7  28C4               	goto	l18
   587     00C8                     u140:
   588     00C8                     l749:
   589                           
   590                           ;adc.c: 23:     adc_reg_val = (ADRESH << 8) | ADRESL;
   591     00C8  081E               	movf	30,w	;volatile
   592     00C9  00F6               	movwf	read_adc@adc_reg_val+1
   593     00CA  1683               	bsf	3,5	;RP0=1, select bank1
   594     00CB  1303               	bcf	3,6	;RP1=0, select bank1
   595     00CC  081E               	movf	30,w	;volatile
   596     00CD  00F5               	movwf	read_adc@adc_reg_val
   597                           
   598                           ;adc.c: 25:     return adc_reg_val;
   599     00CE  0876               	movf	read_adc@adc_reg_val+1,w
   600     00CF  00F4               	movwf	?_read_adc+1
   601     00D0  0875               	movf	read_adc@adc_reg_val,w
   602     00D1  00F3               	movwf	?_read_adc
   603     00D2                     l21:
   604     00D2  0008               	return
   605     00D3                     __end_of_read_adc:
   606                           
   607                           	psect	text2
   608     00AE                     __ptext2:	
   609 ;; *************** function _init_config *****************
   610 ;; Defined at:
   611 ;;		line 15 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0, pclath, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 2
   632 ;; This function calls:
   633 ;;		_init_adc
   634 ;;		_init_timer0
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640     00AE                     _init_config:	
   641                           ;psect for function _init_config
   642                           
   643     00AE                     l685:	
   644                           ;incstack = 0
   645                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   646                           
   647                           
   648                           ;main.c: 17:     unsigned int wait = 0;
   649     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   650     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   651     00B0  0188               	clrf	8	;volatile
   652                           
   653                           ;main.c: 18:     while (1)
   654     00B1  1683               	bsf	3,5	;RP0=1, select bank1
   655     00B2  1303               	bcf	3,6	;RP1=0, select bank1
   656     00B3  0188               	clrf	8	;volatile
   657     00B4                     l687:
   658                           
   659                           ;main.c: 19:     {
   660     00B4  170B               	bsf	11,6	;volatile
   661     00B5                     l689:
   662                           
   663                           ;main.c: 20:      duty_cycle = (read_adc()/10);
   664     00B5  178B               	bsf	11,7	;volatile
   665     00B6                     l691:
   666                           
   667                           ;main.c: 21:     }
   668     00B6  120A  118A  20DD  120A  118A  	fcall	_init_adc
   669     00BB                     l693:
   670                           
   671                           ;main.c: 22:     return;
   672     00BB  120A  118A  20D3  120A  118A  	fcall	_init_timer0
   673     00C0                     l40:
   674     00C0  0008               	return
   675     00C1                     __end_of_init_config:
   676                           
   677                           	psect	text3
   678     00D3                     __ptext3:	
   679 ;; *************** function _init_timer0 *****************
   680 ;; Defined at:
   681 ;;		line 3 in file "timers.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_init_config
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709     00D3                     _init_timer0:	
   710                           ;psect for function _init_timer0
   711                           
   712     00D3                     l673:	
   713                           ;incstack = 0
   714                           ; Regs used in _init_timer0: [wreg]
   715                           
   716                           
   717                           ;timers.c: 6:     T0CS = 0;
   718     00D3  1683               	bsf	3,5	;RP0=1, select bank1
   719     00D4  1303               	bcf	3,6	;RP1=0, select bank1
   720     00D5  1281               	bcf	1,5	;volatile
   721                           
   722                           ;timers.c: 9:     PSA = 1;
   723     00D6  1581               	bsf	1,3	;volatile
   724     00D7                     l675:
   725                           
   726                           ;timers.c: 11:     TMR0 = 6;
   727     00D7  3006               	movlw	6
   728     00D8  1283               	bcf	3,5	;RP0=0, select bank0
   729     00D9  1303               	bcf	3,6	;RP1=0, select bank0
   730     00DA  0081               	movwf	1	;volatile
   731     00DB                     l677:
   732                           
   733                           ;timers.c: 14:     TMR0IE = 1;
   734     00DB  168B               	bsf	11,5	;volatile
   735     00DC                     l59:
   736     00DC  0008               	return
   737     00DD                     __end_of_init_timer0:
   738                           
   739                           	psect	text4
   740     00DD                     __ptext4:	
   741 ;; *************** function _init_adc *****************
   742 ;; Defined at:
   743 ;;		line 3 in file "adc.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		None
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_init_config
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     00DD                     _init_adc:	
   772                           ;psect for function _init_adc
   773                           
   774     00DD                     l671:	
   775                           ;incstack = 0
   776                           ; Regs used in _init_adc: []
   777                           
   778                           
   779                           ;adc.c: 6:     ADFM = 1;
   780     00DD  1683               	bsf	3,5	;RP0=1, select bank1
   781     00DE  1303               	bcf	3,6	;RP1=0, select bank1
   782     00DF  179F               	bsf	31,7	;volatile
   783                           
   784                           ;adc.c: 9:     ADON = 1;
   785     00E0  1283               	bcf	3,5	;RP0=0, select bank0
   786     00E1  1303               	bcf	3,6	;RP1=0, select bank0
   787     00E2  141F               	bsf	31,0	;volatile
   788     00E3                     l15:
   789     00E3  0008               	return
   790     00E4                     __end_of_init_adc:
   791                           
   792                           	psect	text5
   793     0014                     __ptext5:	
   794 ;; *************** function ___lwdiv *****************
   795 ;; Defined at:
   796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  divisor         2    0[BANK0 ] unsigned int 
   799 ;;  dividend        2    2[BANK0 ] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  quotient        2    5[BANK0 ] unsigned int 
   802 ;;  counter         1    4[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2    0[BANK0 ] unsigned int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       4       0       0       0
   813 ;;      Locals:         0       3       0       0       0
   814 ;;      Temps:          1       0       0       0       0
   815 ;;      Totals:         1       7       0       0       0
   816 ;;Total ram usage:        8 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826     0014                     ___lwdiv:	
   827                           ;psect for function ___lwdiv
   828                           
   829     0014                     l785:	
   830                           ;incstack = 0
   831                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   832                           
   833     0014  1283               	bcf	3,5	;RP0=0, select bank0
   834     0015  1303               	bcf	3,6	;RP1=0, select bank0
   835     0016  01A5               	clrf	___lwdiv@quotient
   836     0017  01A6               	clrf	___lwdiv@quotient+1
   837     0018                     l787:
   838     0018  0820               	movf	___lwdiv@divisor,w
   839     0019  0421               	iorwf	___lwdiv@divisor+1,w
   840     001A  1903               	btfsc	3,2
   841     001B  281D               	goto	u221
   842     001C  281E               	goto	u220
   843     001D                     u221:
   844     001D  2855               	goto	l807
   845     001E                     u220:
   846     001E                     l789:
   847     001E  01A4               	clrf	___lwdiv@counter
   848     001F  0AA4               	incf	___lwdiv@counter,f
   849     0020  282C               	goto	l795
   850     0021                     l791:
   851     0021  3001               	movlw	1
   852     0022                     u235:
   853     0022  1003               	clrc
   854     0023  0DA0               	rlf	___lwdiv@divisor,f
   855     0024  0DA1               	rlf	___lwdiv@divisor+1,f
   856     0025  3EFF               	addlw	-1
   857     0026  1D03               	skipz
   858     0027  2822               	goto	u235
   859     0028                     l793:
   860     0028  3001               	movlw	1
   861     0029  00F7               	movwf	??___lwdiv
   862     002A  0877               	movf	??___lwdiv,w
   863     002B  07A4               	addwf	___lwdiv@counter,f
   864     002C                     l795:
   865     002C  1FA1               	btfss	___lwdiv@divisor+1,7
   866     002D  282F               	goto	u241
   867     002E  2830               	goto	u240
   868     002F                     u241:
   869     002F  2821               	goto	l791
   870     0030                     u240:
   871     0030                     l797:
   872     0030  3001               	movlw	1
   873     0031                     u255:
   874     0031  1003               	clrc
   875     0032  0DA5               	rlf	___lwdiv@quotient,f
   876     0033  0DA6               	rlf	___lwdiv@quotient+1,f
   877     0034  3EFF               	addlw	-1
   878     0035  1D03               	skipz
   879     0036  2831               	goto	u255
   880     0037  0821               	movf	___lwdiv@divisor+1,w
   881     0038  0223               	subwf	___lwdiv@dividend+1,w
   882     0039  1D03               	skipz
   883     003A  283D               	goto	u265
   884     003B  0820               	movf	___lwdiv@divisor,w
   885     003C  0222               	subwf	___lwdiv@dividend,w
   886     003D                     u265:
   887     003D  1C03               	skipc
   888     003E  2840               	goto	u261
   889     003F  2841               	goto	u260
   890     0040                     u261:
   891     0040  2848               	goto	l803
   892     0041                     u260:
   893     0041                     l799:
   894     0041  0820               	movf	___lwdiv@divisor,w
   895     0042  02A2               	subwf	___lwdiv@dividend,f
   896     0043  0821               	movf	___lwdiv@divisor+1,w
   897     0044  1C03               	skipc
   898     0045  03A3               	decf	___lwdiv@dividend+1,f
   899     0046  02A3               	subwf	___lwdiv@dividend+1,f
   900     0047                     l801:
   901     0047  1425               	bsf	___lwdiv@quotient,0
   902     0048                     l803:
   903     0048  3001               	movlw	1
   904     0049                     u275:
   905     0049  1003               	clrc
   906     004A  0CA1               	rrf	___lwdiv@divisor+1,f
   907     004B  0CA0               	rrf	___lwdiv@divisor,f
   908     004C  3EFF               	addlw	-1
   909     004D  1D03               	skipz
   910     004E  2849               	goto	u275
   911     004F                     l805:
   912     004F  3001               	movlw	1
   913     0050  02A4               	subwf	___lwdiv@counter,f
   914     0051  1D03               	btfss	3,2
   915     0052  2854               	goto	u281
   916     0053  2855               	goto	u280
   917     0054                     u281:
   918     0054  2830               	goto	l797
   919     0055                     u280:
   920     0055                     l807:
   921     0055  0826               	movf	___lwdiv@quotient+1,w
   922     0056  00A1               	movwf	?___lwdiv+1
   923     0057  0825               	movf	___lwdiv@quotient,w
   924     0058  00A0               	movwf	?___lwdiv
   925     0059                     l437:
   926     0059  0008               	return
   927     005A                     __end_of___lwdiv:
   928                           
   929                           	psect	text6
   930     005A                     __ptext6:	
   931 ;; *************** function _isr *****************
   932 ;; Defined at:
   933 ;;		line 14 in file "isr.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0
   949 ;;      Temps:          3       0       0       0       0
   950 ;;      Totals:         3       0       0       0       0
   951 ;;Total ram usage:        3 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		Interrupt level 1
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960     005A                     _isr:	
   961                           ;psect for function _isr
   962                           
   963     005A                     i1l727:
   964                           
   965                           ;isr.c: 17:      static unsigned char loop_counter = 0;;isr.c: 19:     if (TMR2IF == 1)
   966     005A  1283               	bcf	3,5	;RP0=0, select bank0
   967     005B  1303               	bcf	3,6	;RP1=0, select bank0
   968     005C  1C8C               	btfss	12,1	;volatile
   969     005D  285F               	goto	u9_21
   970     005E  2860               	goto	u9_20
   971     005F                     u9_21:
   972     005F  2884               	goto	i1l79
   973     0060                     u9_20:
   974     0060                     i1l729:
   975                           
   976                           ;isr.c: 20:     {;isr.c: 21:         TMR0 = TMR0 + 15;
   977     0060  0801               	movf	1,w	;volatile
   978     0061  3E0F               	addlw	15
   979     0062  0081               	movwf	1	;volatile
   980     0063                     i1l731:
   981                           
   982                           ;isr.c: 22:     if(loop_counter < duty_cycle)
   983     0063  0878               	movf	_duty_cycle,w
   984     0064  0279               	subwf	isr@loop_counter,w
   985     0065  1803               	skipnc
   986     0066  2868               	goto	u10_21
   987     0067  2869               	goto	u10_20
   988     0068                     u10_21:
   989     0068  286B               	goto	i1l735
   990     0069                     u10_20:
   991     0069                     i1l733:
   992                           
   993                           ;isr.c: 23:         {;isr.c: 24:             RD0 = 1;
   994     0069  1408               	bsf	8,0	;volatile
   995                           
   996                           ;isr.c: 25:         }
   997     006A  2878               	goto	i1l741
   998     006B                     i1l735:
   999     006B  0878               	movf	_duty_cycle,w
  1000     006C  0279               	subwf	isr@loop_counter,w
  1001     006D  1C03               	skipc
  1002     006E  2870               	goto	u11_21
  1003     006F  2871               	goto	u11_20
  1004     0070                     u11_21:
  1005     0070  2878               	goto	i1l741
  1006     0071                     u11_20:
  1007     0071                     i1l737:
  1008     0071  3066               	movlw	102
  1009     0072  0279               	subwf	isr@loop_counter,w
  1010     0073  1803               	skipnc
  1011     0074  2876               	goto	u12_21
  1012     0075  2877               	goto	u12_20
  1013     0076                     u12_21:
  1014     0076  2878               	goto	i1l741
  1015     0077                     u12_20:
  1016     0077                     i1l739:
  1017                           
  1018                           ;isr.c: 27:         {;isr.c: 28:             RD0 = 0;
  1019     0077  1008               	bcf	8,0	;volatile
  1020     0078                     i1l741:
  1021                           
  1022                           ;isr.c: 30:         if(loop_counter++ == 102)
  1023     0078  3001               	movlw	1
  1024     0079  00F0               	movwf	??_isr
  1025     007A  0870               	movf	??_isr,w
  1026     007B  07F9               	addwf	isr@loop_counter,f
  1027     007C  3067               	movlw	103
  1028     007D  0679               	xorwf	isr@loop_counter,w
  1029     007E  1D03               	btfss	3,2
  1030     007F  2881               	goto	u13_21
  1031     0080  2882               	goto	u13_20
  1032     0081                     u13_21:
  1033     0081  2883               	goto	i1l745
  1034     0082                     u13_20:
  1035     0082                     i1l743:
  1036                           
  1037                           ;isr.c: 31:         {;isr.c: 32:             loop_counter = 0;
  1038     0082  01F9               	clrf	isr@loop_counter
  1039     0083                     i1l745:
  1040                           
  1041                           ;isr.c: 35:     TMR2IF = 0;
  1042     0083  108C               	bcf	12,1	;volatile
  1043     0084                     i1l79:
  1044     0084  0872               	movf	??_isr+2,w
  1045     0085  008A               	movwf	10
  1046     0086  0E71               	swapf	??_isr+1,w
  1047     0087  0083               	movwf	3
  1048     0088  0EFE               	swapf	btemp,f
  1049     0089  0E7E               	swapf	btemp,w
  1050     008A  0009               	retfie
  1051     008B                     __end_of_isr:
  1052     007E                     btemp	set	126	;btemp
  1053     007E                     wtemp0	set	126
  1054                           
  1055                           	psect	intentry
  1056     0004                     __pintentry:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _isr: [wreg+status,2+status,0]
  1059                           
  1060     0004                     interrupt_function:
  1061     007E                     saved_w	set	btemp
  1062     0004  00FE               	movwf	btemp
  1063     0005  0E03               	swapf	3,w
  1064     0006  00F1               	movwf	??_isr+1
  1065     0007  080A               	movf	10,w
  1066     0008  00F2               	movwf	??_isr+2
  1067     0009  120A  118A  285A   	ljmp	_isr
  1068                           
  1069                           	psect	config
  1070                           
  1071                           ;Config register CONFIG @ 0x2007
  1072                           ;	Oscillator Selection bits
  1073                           ;	FOSC = 0x3, unprogrammed default
  1074                           ;	Watchdog Timer Enable bit
  1075                           ;	WDTE = OFF, WDT disabled
  1076                           ;	Power-up Timer Enable bit
  1077                           ;	PWRTE = 0x1, unprogrammed default
  1078                           ;	Brown-out Reset Enable bit
  1079                           ;	BOREN = 0x1, unprogrammed default
  1080                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1081                           ;	LVP = 0x1, unprogrammed default
  1082                           ;	Data EEPROM Memory Code Protection bit
  1083                           ;	CPD = 0x1, unprogrammed default
  1084                           ;	Flash Program Memory Write Enable bits
  1085                           ;	WRT = 0x3, unprogrammed default
  1086                           ;	In-Circuit Debugger Mode bit
  1087                           ;	DEBUG = 0x1, unprogrammed default
  1088                           ;	Flash Program Memory Code Protection bit
  1089                           ;	CP = 0x1, unprogrammed default
  1090     2007                     	org	8199
  1091     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      7       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->_read_adc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     447
                            ___lwdiv
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      23
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_adc
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     421
                                              7 COMMON     1     1      0
                                              0 BANK0      7     3      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     _read_adc (ARG)
   _init_config
     _init_adc
     _init_timer0
   _read_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 29 13:39:40 2022

                     l21 00D2                       l15 00E3                       l40 00C0  
                     l18 00C4                       l59 00DC                       _GO 00FA  
                    l437 0059                      l801 0047                      l803 0048  
                    l811 008B                      l805 004F                      l813 0090  
                    l807 0055                      l671 00DD                      l815 0090  
                    l673 00D3                      l675 00D7                      l691 00B6  
                    l747 00C1                      l677 00DB                      l693 00BB  
                    l685 00AE                      l749 00C8                      l791 0021  
                    l687 00B4                      l793 0028                      l785 0014  
                    l689 00B5                      l795 002C                      l787 0018  
                    l797 0030                      l789 001E                      l799 0041  
                    _GIE 005F                      _RD0 0040                      u220 001E  
                    u140 00C8                      u221 001D                      u141 00C7  
                    u240 0030                      u241 002F                      u235 0022  
                    u260 0041                      u261 0040                      u255 0031  
                    u280 0055                      u281 0054                      u265 003D  
                    u275 0049                      _PSA 040B                      _isr 005A  
                   _ADFM 04FF                     ?_isr 0070                     _ADON 00F8  
                   _T0CS 040D                     _PEIE 005E                     i1l79 0084  
                   _TMR0 0001                     u9_20 0060                     u9_21 005F  
                   _main 008B                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070          __end_of___lwdiv 005A  
           ?_init_config 0070                    i1l731 0063                    i1l741 0078  
                  i1l733 0069                    i1l743 0082                    i1l735 006B  
                  i1l727 005A                    i1l745 0083                    i1l737 0071  
                  i1l729 0060                    i1l739 0077                    u10_20 0069  
                  u10_21 0068                    u11_20 0071                    u11_21 0070  
                  u12_20 0077                    u12_21 0076                    u13_20 0082  
                  u13_21 0081                    _PORTD 0008                    _TRISD 0088  
           ?_init_timer0 0070                    _nDONE 00FA                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00AE                   ??_main 0078          isr@loop_counter 0079  
                 _ADRESH 001E                   _ADRESL 009E                   _TMR0IE 005D  
                 _TMR2IF 0061                ??___lwdiv 0077         __end_of_init_adc 00E4  
       __end_of_read_adc 00D3                   saved_w 007E  __end_of__initialization 0010  
         __pcstackCOMMON 0070               __pnvCOMMON 0078               __pmaintext 008B  
             __pintentry 0004                ?_init_adc 0070                ?_read_adc 0073  
                ___lwdiv 0014                  __ptext1 00C1                  __ptext2 00AE  
                __ptext3 00D3                  __ptext4 00DD                  __ptext5 0014  
                __ptext6 005A               _duty_cycle 0078     end_of_initialization 0010  
             ??_init_adc 0073               ??_read_adc 0075      start_initialization 000F  
            __end_of_isr 008B            ??_init_config 0073            ??_init_timer0 0073  
            __pbssCOMMON 0079                ___latbits 0002            __pcstackBANK0 0020  
       ___lwdiv@dividend 0022                 ?___lwdiv 0020      read_adc@adc_reg_val 0075  
       ___lwdiv@quotient 0025      __end_of_init_config 00C1      __end_of_init_timer0 00DD  
      interrupt_function 0004              _init_config 00AE              _init_timer0 00D3  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0024                 _init_adc 00DD  
               _read_adc 00C1                 intlevel1 0000  
