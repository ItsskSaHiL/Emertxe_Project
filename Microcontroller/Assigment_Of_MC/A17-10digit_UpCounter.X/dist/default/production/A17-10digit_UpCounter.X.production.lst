

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 20 21:47:52 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     0000                     	;# 
   175     0001                     	;# 
   176     0002                     	;# 
   177     0003                     	;# 
   178     0004                     	;# 
   179     0005                     	;# 
   180     0006                     	;# 
   181     0007                     	;# 
   182     0008                     	;# 
   183     0009                     	;# 
   184     000A                     	;# 
   185     000B                     	;# 
   186     000C                     	;# 
   187     000D                     	;# 
   188     000E                     	;# 
   189     000E                     	;# 
   190     000F                     	;# 
   191     0010                     	;# 
   192     0011                     	;# 
   193     0012                     	;# 
   194     0013                     	;# 
   195     0014                     	;# 
   196     0015                     	;# 
   197     0015                     	;# 
   198     0016                     	;# 
   199     0017                     	;# 
   200     0018                     	;# 
   201     0019                     	;# 
   202     001A                     	;# 
   203     001B                     	;# 
   204     001B                     	;# 
   205     001C                     	;# 
   206     001D                     	;# 
   207     001E                     	;# 
   208     001F                     	;# 
   209     0081                     	;# 
   210     0085                     	;# 
   211     0086                     	;# 
   212     0087                     	;# 
   213     0088                     	;# 
   214     0089                     	;# 
   215     008C                     	;# 
   216     008D                     	;# 
   217     008E                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0094                     	;# 
   222     0098                     	;# 
   223     0099                     	;# 
   224     009C                     	;# 
   225     009D                     	;# 
   226     009E                     	;# 
   227     009F                     	;# 
   228     010C                     	;# 
   229     010D                     	;# 
   230     010E                     	;# 
   231     010F                     	;# 
   232     018C                     	;# 
   233     018D                     	;# 
   234                           
   235                           	psect	idataBANK0
   236     05A7                     __pidataBANK0:
   237                           
   238                           ;initializer for main@F860
   239     05A7  3430               	retlw	48
   240     05A8  3430               	retlw	48
   241     05A9  3430               	retlw	48
   242     05AA  3430               	retlw	48
   243     05AB  3430               	retlw	48
   244     05AC  3430               	retlw	48
   245     05AD  3430               	retlw	48
   246     05AE  3430               	retlw	48
   247     05AF  3430               	retlw	48
   248     05B0  3430               	retlw	48
   249     05B1  3400               	retlw	0
   250     0008                     _PORTD	set	8
   251     0049                     _RE1	set	73
   252     004A                     _RE2	set	74
   253     0088                     _TRISD	set	136
   254     0449                     _TRISE1	set	1097
   255     044A                     _TRISE2	set	1098
   256                           
   257                           	psect	strings
   258     0003                     __pstrings:
   259     0003                     stringtab:
   260     0003                     __stringtab:
   261                           
   262                           ;	String table - string pointers are 1 byte each
   263     0003  1BFF               	btfsc	btemp+1,7
   264     0004  280D               	ljmp	stringcode
   265     0005  1383               	bcf	3,7
   266     0006  187F               	btfsc	btemp+1,0
   267     0007  1783               	bsf	3,7
   268     0008  0800               	movf	0,w
   269     0009  0A84               	incf	4,f
   270     000A  1903               	skipnz
   271     000B  0AFF               	incf	btemp+1,f
   272     000C  0008               	return
   273     000D                     stringcode:
   274     000D                     stringdir:
   275     000D  3000               	movlw	high stringdir
   276     000E  008A               	movwf	10
   277     000F  0804               	movf	4,w
   278     0010  0A84               	incf	4,f
   279     0011  0782               	addwf	2,f
   280     0012                     __stringbase:
   281     0012  3400               	retlw	0
   282     0013                     __end_of__stringtab:
   283     0013                     STR_1:
   284     0013  3420               	retlw	32	;' '
   285     0014  3455               	retlw	85	;'U'
   286     0015  3450               	retlw	80	;'P'
   287     0016  3420               	retlw	32	;' '
   288     0017  3443               	retlw	67	;'C'
   289     0018  344F               	retlw	79	;'O'
   290     0019  3455               	retlw	85	;'U'
   291     001A  344E               	retlw	78	;'N'
   292     001B  3454               	retlw	84	;'T'
   293     001C  3445               	retlw	69	;'E'
   294     001D  3452               	retlw	82	;'R'
   295     001E  3420               	retlw	32	;' '
   296     001F  3400               	retlw	0
   297     0020                     STR_2:
   298     0020  3443               	retlw	67	;'C'
   299     0021  346F               	retlw	111	;'o'
   300     0022  3475               	retlw	117	;'u'
   301     0023  346E               	retlw	110	;'n'
   302     0024  3474               	retlw	116	;'t'
   303     0025  343A               	retlw	58	;':'
   304     0026  3400               	retlw	0
   305                           
   306                           	psect	cinit
   307     07EE                     start_initialization:	
   308                           ; #config settings
   309                           
   310     07EE                     __initialization:
   311                           
   312                           ; Initialize objects allocated to BANK0
   313     07EE  1383               	bcf	3,7	;select IRP bank0
   314     07EF  3038               	movlw	low (__pdataBANK0+11)
   315     07F0  00FD               	movwf	btemp+-1
   316     07F1  3005               	movlw	high __pidataBANK0
   317     07F2  00FE               	movwf	btemp
   318     07F3  30A7               	movlw	low __pidataBANK0
   319     07F4  00FF               	movwf	btemp+1
   320     07F5  302D               	movlw	low __pdataBANK0
   321     07F6  0084               	movwf	4
   322     07F7  120A  118A  25B6  120A  118A  	fcall	init_ram0
   323     07FC                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326     07FC                     __end_of__initialization:
   327     07FC  0183               	clrf	3
   328     07FD  120A  118A  2E6B   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	dataBANK0
   331     002D                     __pdataBANK0:
   332     002D                     main@F860:
   333     002D                     	ds	11
   334                           
   335                           	psect	inittext
   336     05B2                     init_fetch0:	
   337                           ;	Called with low address in FSR and high address in W
   338                           
   339     05B2  087E               	movf	btemp,w
   340     05B3  008A               	movwf	10
   341     05B4  087F               	movf	btemp+1,w
   342     05B5  0082               	movwf	2
   343     05B6                     init_ram0:	
   344                           ;Called with:
   345                           ;	high address of idata address in btemp 
   346                           ;	low address of idata address in btemp+1 
   347                           ;	low address of data in FSR
   348                           ;	high address + 1 of data in btemp-1
   349                           
   350     05B6  120A  118A  25B2  120A  118A  	fcall	init_fetch0
   351     05BB  0080               	movwf	0
   352     05BC  0A84               	incf	4,f
   353     05BD  0804               	movf	4,w
   354     05BE  067D               	xorwf	btemp+-1,w
   355     05BF  1903               	btfsc	3,2
   356     05C0  3400               	retlw	0
   357     05C1  0AFF               	incf	btemp+1,f
   358     05C2  1903               	btfsc	3,2
   359     05C3  0AFE               	incf	btemp,f
   360     05C4  2DB6               	goto	init_ram0
   361                           
   362                           	psect	cstackCOMMON
   363     0070                     __pcstackCOMMON:
   364     0070                     ?_clcd_write:
   365     0070                     ?_init_display_controller:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?_init_clcd:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_init_config:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     clcd_write@mode:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382     0070                     	ds	1
   383     0071                     ??_clcd_write:
   384                           
   385                           ; 1 bytes @ 0x1
   386     0071                     	ds	2
   387     0073                     clcd_write@byte:
   388                           
   389                           ; 1 bytes @ 0x3
   390     0073                     	ds	1
   391     0074                     ??_init_display_controller:
   392     0074                     ?_clcd_print:	
   393                           ; 1 bytes @ 0x4
   394                           
   395     0074                     clcd_print@str:	
   396                           ; 1 bytes @ 0x4
   397                           
   398                           
   399                           ; 2 bytes @ 0x4
   400     0074                     	ds	2
   401     0076                     ??_init_clcd:
   402     0076                     ??_init_config:	
   403                           ; 1 bytes @ 0x6
   404                           
   405     0076                     clcd_print@addr:	
   406                           ; 1 bytes @ 0x6
   407                           
   408                           
   409                           ; 1 bytes @ 0x6
   410     0076                     	ds	1
   411     0077                     ??_clcd_print:
   412     0077                     ??_main:	
   413                           ; 1 bytes @ 0x7
   414                           
   415                           
   416                           ; 1 bytes @ 0x7
   417     0077                     	ds	4
   418                           
   419                           	psect	cstackBANK0
   420     0020                     __pcstackBANK0:
   421     0020                     main@wait:
   422                           
   423                           ; 2 bytes @ 0x0
   424     0020                     	ds	2
   425     0022                     main@str:
   426                           
   427                           ; 11 bytes @ 0x2
   428     0022                     	ds	11
   429                           
   430                           	psect	maintext
   431     066B                     __pmaintext:	
   432 ;;
   433 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   434 ;;
   435 ;; *************** function _main *****************
   436 ;; Defined at:
   437 ;;		line 30 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  str            11    2[BANK0 ] unsigned char [11]
   442 ;;  wait            2    0[BANK0 ] int 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : B00/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0      13       0       0       0
   454 ;;      Temps:          4       0       0       0       0
   455 ;;      Totals:         4      13       0       0       0
   456 ;;Total ram usage:       17 bytes
   457 ;; Hardware stack levels required when called: 4
   458 ;; This function calls:
   459 ;;		_clcd_print
   460 ;;		_init_config
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466     066B                     _main:	
   467                           ;psect for function _main
   468                           
   469     066B                     l913:	
   470                           ;incstack = 0
   471                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   472                           
   473                           
   474                           ;main.c: 32:                 str[8] = '0';
   475     066B  120A  118A  2596  120A  118A  	fcall	_init_config
   476     0670                     l915:
   477                           
   478                           ;main.c: 34: 
   479     0670  3090               	movlw	144
   480     0671  1283               	bcf	3,5	;RP0=0, select bank0
   481     0672  1303               	bcf	3,6	;RP1=0, select bank0
   482     0673  00A0               	movwf	main@wait
   483     0674  3001               	movlw	1
   484     0675  00A1               	movwf	main@wait+1
   485     0676                     l917:
   486                           
   487                           ;main.c: 35:             }
   488     0676  3022               	movlw	main@str& (0+255)
   489     0677  0084               	movwf	4
   490     0678  302D               	movlw	low main@F860
   491     0679  00F7               	movwf	??_main
   492     067A  0804               	movf	4,w
   493     067B  00F8               	movwf	??_main+1
   494     067C  300B               	movlw	11
   495     067D  00F9               	movwf	??_main+2
   496     067E                     u290:
   497     067E  0877               	movf	??_main,w
   498     067F  0084               	movwf	4
   499     0680  1383               	bcf	3,7	;select IRP bank0
   500     0681  0800               	movf	0,w
   501     0682  00FA               	movwf	??_main+3
   502     0683  0AF7               	incf	??_main,f
   503     0684  0878               	movf	??_main+1,w
   504     0685  0084               	movwf	4
   505     0686  087A               	movf	??_main+3,w
   506     0687  0080               	movwf	0
   507     0688  0AF8               	incf	??_main+1,f
   508     0689  0BF9               	decfsz	??_main+2,f
   509     068A  2E7E               	goto	u290
   510     068B                     l919:
   511                           
   512                           ;main.c: 38:                 str[6]++;
   513     068B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   514     068C  00F4               	movwf	clcd_print@str
   515     068D  3080               	movlw	128
   516     068E  00F5               	movwf	clcd_print@str+1
   517     068F  3080               	movlw	128
   518     0690  00F6               	movwf	clcd_print@addr
   519     0691  120A  118A  25E5  120A  118A  	fcall	_clcd_print
   520     0696                     l921:
   521                           
   522                           ;main.c: 39:                 str[7] = '0';
   523     0696  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   524     0697  00F4               	movwf	clcd_print@str
   525     0698  3080               	movlw	128
   526     0699  00F5               	movwf	clcd_print@str+1
   527     069A  30C0               	movlw	192
   528     069B  00F6               	movwf	clcd_print@addr
   529     069C  120A  118A  25E5  120A  118A  	fcall	_clcd_print
   530     06A1                     l923:
   531                           
   532                           ;main.c: 40:                 str[8] = '0';
   533     06A1  3022               	movlw	(low (main@str| 0))& (0+255)
   534     06A2  00F4               	movwf	clcd_print@str
   535     06A3  3000               	movlw	0
   536     06A4  00F5               	movwf	clcd_print@str+1
   537     06A5  30C6               	movlw	198
   538     06A6  00F6               	movwf	clcd_print@addr
   539     06A7  120A  118A  25E5  120A  118A  	fcall	_clcd_print
   540     06AC                     l925:
   541                           
   542                           ;main.c: 42: ;main.c: 43:             }
   543     06AC  1283               	bcf	3,5	;RP0=0, select bank0
   544     06AD  1303               	bcf	3,6	;RP1=0, select bank0
   545     06AE  0821               	movf	main@wait+1,w
   546     06AF  00F8               	movwf	??_main+1
   547     06B0  03A0               	decf	main@wait,f
   548     06B1  0A20               	incf	main@wait,w
   549     06B2  00F7               	movwf	??_main
   550     06B3  1903               	skipnz
   551     06B4  03A1               	decf	main@wait+1,f
   552     06B5  0878               	movf	??_main+1,w
   553     06B6  3A80               	xorlw	128
   554     06B7  00FF               	movwf	btemp+1
   555     06B8  3080               	movlw	128
   556     06B9  027F               	subwf	btemp+1,w
   557     06BA  1D03               	skipz
   558     06BB  2EBE               	goto	u305
   559     06BC  3001               	movlw	1
   560     06BD  0277               	subwf	??_main,w
   561     06BE                     u305:
   562     06BE  1803               	skipnc
   563     06BF  2EC1               	goto	u301
   564     06C0  2EC2               	goto	u300
   565     06C1                     u301:
   566     06C1  2EAC               	goto	l925
   567     06C2                     u300:
   568     06C2                     l927:
   569                           
   570                           ;main.c: 44:             if(str[6] == ':');main.c: 45:             {
   571     06C2  3090               	movlw	144
   572     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   573     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   574     06C5  00A0               	movwf	main@wait
   575     06C6  3001               	movlw	1
   576     06C7  00A1               	movwf	main@wait+1
   577     06C8                     l929:
   578                           
   579                           ;main.c: 46:                 str[5]++;
   580     06C8  3001               	movlw	1
   581     06C9  00F7               	movwf	??_main
   582     06CA  0877               	movf	??_main,w
   583     06CB  07AB               	addwf	main@str+9,f
   584     06CC                     l931:
   585                           
   586                           ;main.c: 47:                 str[6] = '0';
   587     06CC  303A               	movlw	58
   588     06CD  062B               	xorwf	main@str+9,w
   589     06CE  1D03               	btfss	3,2
   590     06CF  2ED1               	goto	u311
   591     06D0  2ED2               	goto	u310
   592     06D1                     u311:
   593     06D1  2ED8               	goto	l937
   594     06D2                     u310:
   595     06D2                     l933:
   596                           
   597                           ;main.c: 48:                 str[7] = '0';;main.c: 49:                 str[8] = '0';
   598     06D2  3001               	movlw	1
   599     06D3  00F7               	movwf	??_main
   600     06D4  0877               	movf	??_main,w
   601     06D5  07AA               	addwf	main@str+8,f
   602     06D6                     l935:
   603                           
   604                           ;main.c: 50:                 str[9] = '0';
   605     06D6  3030               	movlw	48
   606     06D7  00AB               	movwf	main@str+9
   607     06D8                     l937:
   608                           
   609                           ;main.c: 54:             {
   610     06D8  303A               	movlw	58
   611     06D9  062A               	xorwf	main@str+8,w
   612     06DA  1D03               	btfss	3,2
   613     06DB  2EDD               	goto	u321
   614     06DC  2EDE               	goto	u320
   615     06DD                     u321:
   616     06DD  2EE6               	goto	l49
   617     06DE                     u320:
   618     06DE                     l939:
   619                           
   620                           ;main.c: 55:                 str[4]++;;main.c: 56:                 str[5] = '0';
   621     06DE  3001               	movlw	1
   622     06DF  00F7               	movwf	??_main
   623     06E0  0877               	movf	??_main,w
   624     06E1  07A9               	addwf	main@str+7,f
   625     06E2                     l941:
   626                           
   627                           ;main.c: 57:                 str[6] = '0';
   628     06E2  3030               	movlw	48
   629     06E3  00AA               	movwf	main@str+8
   630     06E4                     l943:
   631                           
   632                           ;main.c: 58:                 str[7] = '0';
   633     06E4  3030               	movlw	48
   634     06E5  00AB               	movwf	main@str+9
   635     06E6                     l49:	
   636                           ;main.c: 60:                 str[9] = '0';
   637                           
   638                           
   639                           ;main.c: 61: 
   640     06E6  303A               	movlw	58
   641     06E7  0629               	xorwf	main@str+7,w
   642     06E8  1D03               	btfss	3,2
   643     06E9  2EEB               	goto	u331
   644     06EA  2EEC               	goto	u330
   645     06EB                     u331:
   646     06EB  2EF6               	goto	l953
   647     06EC                     u330:
   648     06EC                     l945:
   649                           
   650                           ;main.c: 62:             };main.c: 63:             if(str[4] == ':')
   651     06EC  3001               	movlw	1
   652     06ED  00F7               	movwf	??_main
   653     06EE  0877               	movf	??_main,w
   654     06EF  07A8               	addwf	main@str+6,f
   655     06F0                     l947:
   656                           
   657                           ;main.c: 64:             {
   658     06F0  3030               	movlw	48
   659     06F1  00A9               	movwf	main@str+7
   660     06F2                     l949:
   661                           
   662                           ;main.c: 65:                 str[3]++;
   663     06F2  3030               	movlw	48
   664     06F3  00AA               	movwf	main@str+8
   665     06F4                     l951:
   666                           
   667                           ;main.c: 66:                 str[4] = '0';
   668     06F4  3030               	movlw	48
   669     06F5  00AB               	movwf	main@str+9
   670     06F6                     l953:
   671                           
   672                           ;main.c: 69:                 str[7] = '0';
   673     06F6  303A               	movlw	58
   674     06F7  0628               	xorwf	main@str+6,w
   675     06F8  1D03               	btfss	3,2
   676     06F9  2EFB               	goto	u341
   677     06FA  2EFC               	goto	u340
   678     06FB                     u341:
   679     06FB  2F08               	goto	l51
   680     06FC                     u340:
   681     06FC                     l955:
   682                           
   683                           ;main.c: 70:                 str[8] = '0';;main.c: 71:                 str[9] = '0';
   684     06FC  3001               	movlw	1
   685     06FD  00F7               	movwf	??_main
   686     06FE  0877               	movf	??_main,w
   687     06FF  07A7               	addwf	main@str+5,f
   688     0700                     l957:
   689                           
   690                           ;main.c: 72: 
   691     0700  3030               	movlw	48
   692     0701  00A8               	movwf	main@str+6
   693     0702                     l959:
   694                           
   695                           ;main.c: 73:             }
   696     0702  3030               	movlw	48
   697     0703  00A9               	movwf	main@str+7
   698     0704                     l961:
   699                           
   700                           ;main.c: 74:             if(str[3] == ':')
   701     0704  3030               	movlw	48
   702     0705  00AA               	movwf	main@str+8
   703     0706                     l963:
   704                           
   705                           ;main.c: 75:             {
   706     0706  3030               	movlw	48
   707     0707  00AB               	movwf	main@str+9
   708     0708                     l51:	
   709                           ;main.c: 77:                 str[3] = '0';
   710                           
   711                           
   712                           ;main.c: 78:                 str[4] = '0';
   713     0708  303A               	movlw	58
   714     0709  0627               	xorwf	main@str+5,w
   715     070A  1D03               	btfss	3,2
   716     070B  2F0D               	goto	u351
   717     070C  2F0E               	goto	u350
   718     070D                     u351:
   719     070D  2F1C               	goto	l977
   720     070E                     u350:
   721     070E                     l965:
   722                           
   723                           ;main.c: 79:                 str[5] = '0';;main.c: 80:                 str[6] = '0';
   724     070E  3001               	movlw	1
   725     070F  00F7               	movwf	??_main
   726     0710  0877               	movf	??_main,w
   727     0711  07A6               	addwf	main@str+4,f
   728     0712                     l967:
   729                           
   730                           ;main.c: 81:                 str[7] = '0';
   731     0712  3030               	movlw	48
   732     0713  00A7               	movwf	main@str+5
   733     0714                     l969:
   734                           
   735                           ;main.c: 82:                 str[8] = '0';
   736     0714  3030               	movlw	48
   737     0715  00A8               	movwf	main@str+6
   738     0716                     l971:
   739                           
   740                           ;main.c: 83:                 str[9] = '0';
   741     0716  3030               	movlw	48
   742     0717  00A9               	movwf	main@str+7
   743     0718                     l973:
   744                           
   745                           ;main.c: 84: 
   746     0718  3030               	movlw	48
   747     0719  00AA               	movwf	main@str+8
   748     071A                     l975:
   749                           
   750                           ;main.c: 85:             }
   751     071A  3030               	movlw	48
   752     071B  00AB               	movwf	main@str+9
   753     071C                     l977:
   754                           
   755                           ;main.c: 88:                 str[1]++;
   756     071C  303A               	movlw	58
   757     071D  0626               	xorwf	main@str+4,w
   758     071E  1D03               	btfss	3,2
   759     071F  2F21               	goto	u361
   760     0720  2F22               	goto	u360
   761     0721                     u361:
   762     0721  2F32               	goto	l53
   763     0722                     u360:
   764     0722                     l979:
   765                           
   766                           ;main.c: 89:                 str[2] = '0';;main.c: 90:                 str[3] = '0';
   767     0722  3001               	movlw	1
   768     0723  00F7               	movwf	??_main
   769     0724  0877               	movf	??_main,w
   770     0725  07A5               	addwf	main@str+3,f
   771     0726                     l981:
   772                           
   773                           ;main.c: 91:                 str[4] = '0';
   774     0726  3030               	movlw	48
   775     0727  00A6               	movwf	main@str+4
   776     0728                     l983:
   777                           
   778                           ;main.c: 92:                 str[5] = '0';
   779     0728  3030               	movlw	48
   780     0729  00A7               	movwf	main@str+5
   781     072A                     l985:
   782                           
   783                           ;main.c: 93:                 str[6] = '0';
   784     072A  3030               	movlw	48
   785     072B  00A8               	movwf	main@str+6
   786     072C                     l987:
   787                           
   788                           ;main.c: 94:                 str[7] = '0';
   789     072C  3030               	movlw	48
   790     072D  00A9               	movwf	main@str+7
   791     072E                     l989:
   792                           
   793                           ;main.c: 95:                 str[8] = '0';
   794     072E  3030               	movlw	48
   795     072F  00AA               	movwf	main@str+8
   796     0730                     l991:
   797                           
   798                           ;main.c: 96:                 str[9] = '0';
   799     0730  3030               	movlw	48
   800     0731  00AB               	movwf	main@str+9
   801     0732                     l53:	
   802                           ;main.c: 98:             }
   803                           
   804                           
   805                           ;main.c: 99:             if(str[1] == ':')
   806     0732  303A               	movlw	58
   807     0733  0625               	xorwf	main@str+3,w
   808     0734  1D03               	btfss	3,2
   809     0735  2F37               	goto	u371
   810     0736  2F38               	goto	u370
   811     0737                     u371:
   812     0737  2F4A               	goto	l1009
   813     0738                     u370:
   814     0738                     l993:
   815                           
   816                           ;main.c: 100:             {;main.c: 101:                 str[0]++;
   817     0738  3001               	movlw	1
   818     0739  00F7               	movwf	??_main
   819     073A  0877               	movf	??_main,w
   820     073B  07A4               	addwf	main@str+2,f
   821     073C                     l995:
   822                           
   823                           ;main.c: 102:                 str[1] = '0';
   824     073C  3030               	movlw	48
   825     073D  00A5               	movwf	main@str+3
   826     073E                     l997:
   827                           
   828                           ;main.c: 103:                 str[2] = '0';
   829     073E  3030               	movlw	48
   830     073F  00A6               	movwf	main@str+4
   831     0740                     l999:
   832                           
   833                           ;main.c: 104:                 str[3] = '0';
   834     0740  3030               	movlw	48
   835     0741  00A7               	movwf	main@str+5
   836     0742                     l1001:
   837                           
   838                           ;main.c: 105:                 str[4] = '0';
   839     0742  3030               	movlw	48
   840     0743  00A8               	movwf	main@str+6
   841     0744                     l1003:
   842                           
   843                           ;main.c: 106:                 str[5] = '0';
   844     0744  3030               	movlw	48
   845     0745  00A9               	movwf	main@str+7
   846     0746                     l1005:
   847                           
   848                           ;main.c: 107:                 str[6] = '0';
   849     0746  3030               	movlw	48
   850     0747  00AA               	movwf	main@str+8
   851     0748                     l1007:
   852                           
   853                           ;main.c: 108:                 str[7] = '0';
   854     0748  3030               	movlw	48
   855     0749  00AB               	movwf	main@str+9
   856     074A                     l1009:
   857                           
   858                           ;main.c: 111: 
   859     074A  303A               	movlw	58
   860     074B  0624               	xorwf	main@str+2,w
   861     074C  1D03               	btfss	3,2
   862     074D  2F4F               	goto	u381
   863     074E  2F50               	goto	u380
   864     074F                     u381:
   865     074F  2F64               	goto	l55
   866     0750                     u380:
   867     0750                     l1011:
   868                           
   869                           ;main.c: 112:             };main.c: 113:             if(str[0] == ':')
   870     0750  3001               	movlw	1
   871     0751  00F7               	movwf	??_main
   872     0752  0877               	movf	??_main,w
   873     0753  07A3               	addwf	main@str+1,f
   874     0754                     l1013:
   875                           
   876                           ;main.c: 114:             {
   877     0754  3030               	movlw	48
   878     0755  00A4               	movwf	main@str+2
   879     0756                     l1015:
   880                           
   881                           ;main.c: 115:                 str[0] = '0';
   882     0756  3030               	movlw	48
   883     0757  00A5               	movwf	main@str+3
   884     0758                     l1017:
   885                           
   886                           ;main.c: 116:                 str[1] = '0';
   887     0758  3030               	movlw	48
   888     0759  00A6               	movwf	main@str+4
   889     075A                     l1019:
   890                           
   891                           ;main.c: 117:                 str[2] = '0';
   892     075A  3030               	movlw	48
   893     075B  00A7               	movwf	main@str+5
   894     075C                     l1021:
   895                           
   896                           ;main.c: 118:                 str[3] = '0';
   897     075C  3030               	movlw	48
   898     075D  00A8               	movwf	main@str+6
   899     075E                     l1023:
   900                           
   901                           ;main.c: 119:                 str[4] = '0';
   902     075E  3030               	movlw	48
   903     075F  00A9               	movwf	main@str+7
   904     0760                     l1025:
   905                           
   906                           ;main.c: 120:                 str[5] = '0';
   907     0760  3030               	movlw	48
   908     0761  00AA               	movwf	main@str+8
   909     0762                     l1027:
   910                           
   911                           ;main.c: 121:                 str[6] = '0';
   912     0762  3030               	movlw	48
   913     0763  00AB               	movwf	main@str+9
   914     0764                     l55:	
   915                           ;main.c: 123:                 str[8] = '0';
   916                           
   917                           
   918                           ;main.c: 124:                 str[9] = '0';
   919     0764  303A               	movlw	58
   920     0765  0623               	xorwf	main@str+1,w
   921     0766  1D03               	btfss	3,2
   922     0767  2F69               	goto	u391
   923     0768  2F6A               	goto	u390
   924     0769                     u391:
   925     0769  2F80               	goto	l1049
   926     076A                     u390:
   927     076A                     l1029:
   928                           
   929                           ;main.c: 125: ;main.c: 126:             }
   930     076A  3001               	movlw	1
   931     076B  00F7               	movwf	??_main
   932     076C  0877               	movf	??_main,w
   933     076D  07A2               	addwf	main@str,f
   934     076E                     l1031:
   935                           
   936                           ;main.c: 127:             if((str[0] == '9') && (str[1] == '9') && (str[2] == '9') && (s
      +                          tr[3] == '9') && (str[4] == '9') && (str[5] == '9') && (str[6] == '9') && (str[7] == '9'
      +                          ) && (str[8] == '9') && (str[9] == '9'))
   937     076E  3030               	movlw	48
   938     076F  00A3               	movwf	main@str+1
   939     0770                     l1033:
   940                           
   941                           ;main.c: 128:      {
   942     0770  3030               	movlw	48
   943     0771  00A4               	movwf	main@str+2
   944     0772                     l1035:
   945                           
   946                           ;main.c: 129:                 str[0] = '9';
   947     0772  3030               	movlw	48
   948     0773  00A5               	movwf	main@str+3
   949     0774                     l1037:
   950                           
   951                           ;main.c: 130:                 str[1] = '9';
   952     0774  3030               	movlw	48
   953     0775  00A6               	movwf	main@str+4
   954     0776                     l1039:
   955                           
   956                           ;main.c: 131:                 str[2] = '9';
   957     0776  3030               	movlw	48
   958     0777  00A7               	movwf	main@str+5
   959     0778                     l1041:
   960                           
   961                           ;main.c: 132:                 str[3] = '9';
   962     0778  3030               	movlw	48
   963     0779  00A8               	movwf	main@str+6
   964     077A                     l1043:
   965                           
   966                           ;main.c: 133:                 str[4] = '9';
   967     077A  3030               	movlw	48
   968     077B  00A9               	movwf	main@str+7
   969     077C                     l1045:
   970                           
   971                           ;main.c: 134:                 str[5] = '9';
   972     077C  3030               	movlw	48
   973     077D  00AA               	movwf	main@str+8
   974     077E                     l1047:
   975                           
   976                           ;main.c: 135:                 str[6] = '9';
   977     077E  3030               	movlw	48
   978     077F  00AB               	movwf	main@str+9
   979     0780                     l1049:
   980                           
   981                           ;main.c: 138:                 str[9] = '9';
   982     0780  303A               	movlw	58
   983     0781  0622               	xorwf	main@str,w
   984     0782  1D03               	btfss	3,2
   985     0783  2F85               	goto	u401
   986     0784  2F86               	goto	u400
   987     0785                     u401:
   988     0785  2F9A               	goto	l1053
   989     0786                     u400:
   990     0786                     l1051:
   991                           
   992                           ;main.c: 139:             };main.c: 140: 
   993     0786  3030               	movlw	48
   994     0787  00A2               	movwf	main@str
   995                           
   996                           ;main.c: 141:             clcd_print(str, (0xC0 + 6));
   997     0788  3030               	movlw	48
   998     0789  00A3               	movwf	main@str+1
   999                           
  1000                           ;main.c: 142:   }
  1001     078A  3030               	movlw	48
  1002     078B  00A4               	movwf	main@str+2
  1003                           
  1004                           ;main.c: 143:     }
  1005     078C  3030               	movlw	48
  1006     078D  00A5               	movwf	main@str+3
  1007                           
  1008                           ;main.c: 144: }
  1009     078E  3030               	movlw	48
  1010     078F  00A6               	movwf	main@str+4
  1011     0790  3030               	movlw	48
  1012     0791  00A7               	movwf	main@str+5
  1013     0792  3030               	movlw	48
  1014     0793  00A8               	movwf	main@str+6
  1015     0794  3030               	movlw	48
  1016     0795  00A9               	movwf	main@str+7
  1017     0796  3030               	movlw	48
  1018     0797  00AA               	movwf	main@str+8
  1019     0798  3030               	movlw	48
  1020     0799  00AB               	movwf	main@str+9
  1021     079A                     l1053:
  1022     079A  3039               	movlw	57
  1023     079B  0622               	xorwf	main@str,w
  1024     079C  1D03               	btfss	3,2
  1025     079D  2F9F               	goto	u411
  1026     079E  2FA0               	goto	u410
  1027     079F                     u411:
  1028     079F  2EA1               	goto	l923
  1029     07A0                     u410:
  1030     07A0                     l1055:
  1031     07A0  3039               	movlw	57
  1032     07A1  0623               	xorwf	main@str+1,w
  1033     07A2  1D03               	btfss	3,2
  1034     07A3  2FA5               	goto	u421
  1035     07A4  2FA6               	goto	u420
  1036     07A5                     u421:
  1037     07A5  2EA1               	goto	l923
  1038     07A6                     u420:
  1039     07A6                     l1057:
  1040     07A6  3039               	movlw	57
  1041     07A7  0624               	xorwf	main@str+2,w
  1042     07A8  1D03               	btfss	3,2
  1043     07A9  2FAB               	goto	u431
  1044     07AA  2FAC               	goto	u430
  1045     07AB                     u431:
  1046     07AB  2EA1               	goto	l923
  1047     07AC                     u430:
  1048     07AC                     l1059:
  1049     07AC  3039               	movlw	57
  1050     07AD  0625               	xorwf	main@str+3,w
  1051     07AE  1D03               	btfss	3,2
  1052     07AF  2FB1               	goto	u441
  1053     07B0  2FB2               	goto	u440
  1054     07B1                     u441:
  1055     07B1  2EA1               	goto	l923
  1056     07B2                     u440:
  1057     07B2                     l1061:
  1058     07B2  3039               	movlw	57
  1059     07B3  0626               	xorwf	main@str+4,w
  1060     07B4  1D03               	btfss	3,2
  1061     07B5  2FB7               	goto	u451
  1062     07B6  2FB8               	goto	u450
  1063     07B7                     u451:
  1064     07B7  2EA1               	goto	l923
  1065     07B8                     u450:
  1066     07B8                     l1063:
  1067     07B8  3039               	movlw	57
  1068     07B9  0627               	xorwf	main@str+5,w
  1069     07BA  1D03               	btfss	3,2
  1070     07BB  2FBD               	goto	u461
  1071     07BC  2FBE               	goto	u460
  1072     07BD                     u461:
  1073     07BD  2EA1               	goto	l923
  1074     07BE                     u460:
  1075     07BE                     l1065:
  1076     07BE  3039               	movlw	57
  1077     07BF  0628               	xorwf	main@str+6,w
  1078     07C0  1D03               	btfss	3,2
  1079     07C1  2FC3               	goto	u471
  1080     07C2  2FC4               	goto	u470
  1081     07C3                     u471:
  1082     07C3  2EA1               	goto	l923
  1083     07C4                     u470:
  1084     07C4                     l1067:
  1085     07C4  3039               	movlw	57
  1086     07C5  0629               	xorwf	main@str+7,w
  1087     07C6  1D03               	btfss	3,2
  1088     07C7  2FC9               	goto	u481
  1089     07C8  2FCA               	goto	u480
  1090     07C9                     u481:
  1091     07C9  2EA1               	goto	l923
  1092     07CA                     u480:
  1093     07CA                     l1069:
  1094     07CA  3039               	movlw	57
  1095     07CB  062A               	xorwf	main@str+8,w
  1096     07CC  1D03               	btfss	3,2
  1097     07CD  2FCF               	goto	u491
  1098     07CE  2FD0               	goto	u490
  1099     07CF                     u491:
  1100     07CF  2EA1               	goto	l923
  1101     07D0                     u490:
  1102     07D0                     l1071:
  1103     07D0  3039               	movlw	57
  1104     07D1  062B               	xorwf	main@str+9,w
  1105     07D2  1D03               	btfss	3,2
  1106     07D3  2FD5               	goto	u501
  1107     07D4  2FD6               	goto	u500
  1108     07D5                     u501:
  1109     07D5  2EA1               	goto	l923
  1110     07D6                     u500:
  1111     07D6                     l1073:
  1112     07D6  3039               	movlw	57
  1113     07D7  00A2               	movwf	main@str
  1114     07D8  3039               	movlw	57
  1115     07D9  00A3               	movwf	main@str+1
  1116     07DA  3039               	movlw	57
  1117     07DB  00A4               	movwf	main@str+2
  1118     07DC  3039               	movlw	57
  1119     07DD  00A5               	movwf	main@str+3
  1120     07DE  3039               	movlw	57
  1121     07DF  00A6               	movwf	main@str+4
  1122     07E0  3039               	movlw	57
  1123     07E1  00A7               	movwf	main@str+5
  1124     07E2  3039               	movlw	57
  1125     07E3  00A8               	movwf	main@str+6
  1126     07E4  3039               	movlw	57
  1127     07E5  00A9               	movwf	main@str+7
  1128     07E6  3039               	movlw	57
  1129     07E7  00AA               	movwf	main@str+8
  1130     07E8  3039               	movlw	57
  1131     07E9  00AB               	movwf	main@str+9
  1132     07EA  2EA1               	goto	l923
  1133     07EB  120A  118A  2800   	ljmp	start
  1134     07EE                     __end_of_main:
  1135                           
  1136                           	psect	text1
  1137     0596                     __ptext1:	
  1138 ;; *************** function _init_config *****************
  1139 ;; Defined at:
  1140 ;;		line 25 in file "main.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 3
  1161 ;; This function calls:
  1162 ;;		_init_clcd
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168     0596                     _init_config:	
  1169                           ;psect for function _init_config
  1170                           
  1171     0596                     l909:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
  1174                           
  1175                           
  1176                           ;main.c: 27:             }
  1177     0596  120A  118A  259C  120A  118A  	fcall	_init_clcd
  1178     059B                     l39:
  1179     059B  0008               	return
  1180     059C                     __end_of_init_config:
  1181                           
  1182                           	psect	text2
  1183     059C                     __ptext2:	
  1184 ;; *************** function _init_clcd *****************
  1185 ;; Defined at:
  1186 ;;		line 43 in file "clcd.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1200 ;;      Params:         0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0
  1203 ;;      Totals:         0       0       0       0       0
  1204 ;;Total ram usage:        0 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 2
  1207 ;; This function calls:
  1208 ;;		_init_display_controller
  1209 ;; This function is called by:
  1210 ;;		_init_config
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214     059C                     _init_clcd:	
  1215                           ;psect for function _init_clcd
  1216                           
  1217     059C                     l893:	
  1218                           ;incstack = 0
  1219                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1220                           
  1221                           
  1222                           ;clcd.c: 46:     TRISD = 0x00;
  1223     059C  1683               	bsf	3,5	;RP0=1, select bank1
  1224     059D  1303               	bcf	3,6	;RP1=0, select bank1
  1225     059E  0188               	clrf	8	;volatile
  1226     059F                     l895:
  1227                           
  1228                           ;clcd.c: 49:     TRISE2 = 0;
  1229     059F  1109               	bcf	9,2	;volatile
  1230     05A0                     l897:
  1231                           
  1232                           ;clcd.c: 50:     TRISE1 = 0;
  1233     05A0  1089               	bcf	9,1	;volatile
  1234     05A1                     l899:
  1235                           
  1236                           ;clcd.c: 52:     init_display_controller();
  1237     05A1  120A  118A  2614  120A  118A  	fcall	_init_display_controller
  1238     05A6                     l23:
  1239     05A6  0008               	return
  1240     05A7                     __end_of_init_clcd:
  1241                           
  1242                           	psect	text3
  1243     0614                     __ptext3:	
  1244 ;; *************** function _init_display_controller *****************
  1245 ;; Defined at:
  1246 ;;		line 22 in file "clcd.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, pclath, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1260 ;;      Params:         0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0
  1262 ;;      Temps:          2       0       0       0       0
  1263 ;;      Totals:         2       0       0       0       0
  1264 ;;Total ram usage:        2 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 1
  1267 ;; This function calls:
  1268 ;;		_clcd_write
  1269 ;; This function is called by:
  1270 ;;		_init_clcd
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274     0614                     _init_display_controller:	
  1275                           ;psect for function _init_display_controller
  1276                           
  1277     0614                     l873:	
  1278                           ;incstack = 0
  1279                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1280                           
  1281                           
  1282                           ;clcd.c: 25:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1283     0614  30C3               	movlw	195
  1284     0615  00F5               	movwf	??_init_display_controller+1
  1285     0616  30CD               	movlw	205
  1286     0617  00F4               	movwf	??_init_display_controller
  1287     0618                     u517:
  1288     0618  0BF4               	decfsz	??_init_display_controller,f
  1289     0619  2E18               	goto	u517
  1290     061A  0BF5               	decfsz	??_init_display_controller+1,f
  1291     061B  2E18               	goto	u517
  1292     061C                     l875:
  1293                           
  1294                           ;clcd.c: 28:     clcd_write(0x33, 0);
  1295     061C  01F0               	clrf	clcd_write@mode
  1296     061D  3033               	movlw	51
  1297     061E  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1298     0623                     l877:
  1299                           
  1300                           ;clcd.c: 29:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1301     0623  301B               	movlw	27
  1302     0624  00F5               	movwf	??_init_display_controller+1
  1303     0625  309E               	movlw	158
  1304     0626  00F4               	movwf	??_init_display_controller
  1305     0627                     u527:
  1306     0627  0BF4               	decfsz	??_init_display_controller,f
  1307     0628  2E27               	goto	u527
  1308     0629  0BF5               	decfsz	??_init_display_controller+1,f
  1309     062A  2E27               	goto	u527
  1310     062B  0000               	nop
  1311                           
  1312                           ;clcd.c: 30:     clcd_write(0x33, 0);
  1313     062C  01F0               	clrf	clcd_write@mode
  1314     062D  3033               	movlw	51
  1315     062E  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1316     0633                     l879:
  1317                           
  1318                           ;clcd.c: 31:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1319     0633  30A6               	movlw	166
  1320     0634  00F4               	movwf	??_init_display_controller
  1321     0635                     u537:
  1322     0635  0BF4               	decfsz	??_init_display_controller,f
  1323     0636  2E35               	goto	u537
  1324     0637  0000               	nop
  1325     0638                     l881:
  1326                           
  1327                           ;clcd.c: 32:     clcd_write(0x33, 0);
  1328     0638  01F0               	clrf	clcd_write@mode
  1329     0639  3033               	movlw	51
  1330     063A  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1331     063F                     l883:
  1332                           
  1333                           ;clcd.c: 33:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1334     063F  2E40               	nop2	;2 cycle nop
  1335     0640  2E41               	nop2	;2 cycle nop
  1336     0641  0000               	nop
  1337     0642                     l885:
  1338                           
  1339                           ;clcd.c: 35:     clcd_write(0x38, 0);
  1340     0642  01F0               	clrf	clcd_write@mode
  1341     0643  3038               	movlw	56
  1342     0644  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1343     0649                     l887:
  1344                           
  1345                           ;clcd.c: 36:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1346     0649  30A6               	movlw	166
  1347     064A  00F4               	movwf	??_init_display_controller
  1348     064B                     u547:
  1349     064B  0BF4               	decfsz	??_init_display_controller,f
  1350     064C  2E4B               	goto	u547
  1351     064D  0000               	nop
  1352                           
  1353                           ;clcd.c: 37:     clcd_write(0x01, 0);
  1354     064E  01F0               	clrf	clcd_write@mode
  1355     064F  3001               	movlw	1
  1356     0650  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1357     0655                     l889:
  1358                           
  1359                           ;clcd.c: 38:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1360     0655  3004               	movlw	4
  1361     0656  00F5               	movwf	??_init_display_controller+1
  1362     0657  303D               	movlw	61
  1363     0658  00F4               	movwf	??_init_display_controller
  1364     0659                     u557:
  1365     0659  0BF4               	decfsz	??_init_display_controller,f
  1366     065A  2E59               	goto	u557
  1367     065B  0BF5               	decfsz	??_init_display_controller+1,f
  1368     065C  2E59               	goto	u557
  1369     065D  2E5E               	nop2
  1370     065E                     l891:
  1371                           
  1372                           ;clcd.c: 39:     clcd_write(0x0C, 0);
  1373     065E  01F0               	clrf	clcd_write@mode
  1374     065F  300C               	movlw	12
  1375     0660  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1376                           
  1377                           ;clcd.c: 40:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1378     0665  30A6               	movlw	166
  1379     0666  00F4               	movwf	??_init_display_controller
  1380     0667                     u567:
  1381     0667  0BF4               	decfsz	??_init_display_controller,f
  1382     0668  2E67               	goto	u567
  1383     0669  0000               	nop
  1384     066A                     l20:
  1385     066A  0008               	return
  1386     066B                     __end_of_init_display_controller:
  1387                           
  1388                           	psect	text4
  1389     05E5                     __ptext4:	
  1390 ;; *************** function _clcd_print *****************
  1391 ;; Defined at:
  1392 ;;		line 61 in file "clcd.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  str             2    4[COMMON] PTR const unsigned char 
  1395 ;;		 -> STR_2(7), STR_1(13), main@str(11), 
  1396 ;;  addr            1    6[COMMON] unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         3       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0
  1411 ;;      Totals:         3       0       0       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 1
  1415 ;; This function calls:
  1416 ;;		_clcd_write
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422     05E5                     _clcd_print:	
  1423                           ;psect for function _clcd_print
  1424                           
  1425     05E5                     l901:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1428                           
  1429                           
  1430                           ;clcd.c: 61: void clcd_print(const char *str, unsigned char addr);clcd.c: 62: {;clcd.c: 
      +                          63:     clcd_write(addr, 0);
  1431     05E5  01F0               	clrf	clcd_write@mode
  1432     05E6  0876               	movf	clcd_print@addr,w
  1433     05E7  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1434                           
  1435                           ;clcd.c: 65:     while (*str != '\0')
  1436     05EC  2E03               	goto	l907
  1437     05ED                     l903:
  1438                           
  1439                           ;clcd.c: 66:     {;clcd.c: 67:         clcd_write(*str, 1);
  1440     05ED  01F0               	clrf	clcd_write@mode
  1441     05EE  0AF0               	incf	clcd_write@mode,f
  1442     05EF  0875               	movf	clcd_print@str+1,w
  1443     05F0  00FF               	movwf	btemp+1
  1444     05F1  0874               	movf	clcd_print@str,w
  1445     05F2  0084               	movwf	4
  1446     05F3  120A  118A  2003  120A  118A  	fcall	stringtab
  1447     05F8  120A  118A  25C5  120A  118A  	fcall	_clcd_write
  1448     05FD                     l905:
  1449                           
  1450                           ;clcd.c: 68:         str++;
  1451     05FD  3001               	movlw	1
  1452     05FE  07F4               	addwf	clcd_print@str,f
  1453     05FF  1803               	skipnc
  1454     0600  0AF5               	incf	clcd_print@str+1,f
  1455     0601  3000               	movlw	0
  1456     0602  07F5               	addwf	clcd_print@str+1,f
  1457     0603                     l907:
  1458                           
  1459                           ;clcd.c: 65:     while (*str != '\0')
  1460     0603  0875               	movf	clcd_print@str+1,w
  1461     0604  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0605  1303               	bcf	3,6	;RP1=0, select bank0
  1463     0606  00FF               	movwf	btemp+1
  1464     0607  0874               	movf	clcd_print@str,w
  1465     0608  0084               	movwf	4
  1466     0609  120A  118A  2003  120A  118A  	fcall	stringtab
  1467     060E  3A00               	xorlw	0
  1468     060F  1D03               	skipz
  1469     0610  2E12               	goto	u281
  1470     0611  2E13               	goto	u280
  1471     0612                     u281:
  1472     0612  2DED               	goto	l903
  1473     0613                     u280:
  1474     0613                     l32:
  1475     0613  0008               	return
  1476     0614                     __end_of_clcd_print:
  1477                           
  1478                           	psect	text5
  1479     05C5                     __ptext5:	
  1480 ;; *************** function _clcd_write *****************
  1481 ;; Defined at:
  1482 ;;		line 10 in file "clcd.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  byte            1    wreg     unsigned char 
  1485 ;;  mode            1    0[COMMON] unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  byte            1    3[COMMON] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         1       0       0       0       0
  1498 ;;      Locals:         1       0       0       0       0
  1499 ;;      Temps:          2       0       0       0       0
  1500 ;;      Totals:         4       0       0       0       0
  1501 ;;Total ram usage:        4 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_init_display_controller
  1507 ;;		_clcd_print
  1508 ;;		_clcd_putch
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512     05C5                     _clcd_write:	
  1513                           ;psect for function _clcd_write
  1514                           
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in _clcd_write: [wreg]
  1518                           ;clcd_write@byte stored from wreg
  1519     05C5  00F3               	movwf	clcd_write@byte
  1520     05C6                     l865:
  1521                           
  1522                           ;clcd.c: 10: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 11: 
      +                          {;clcd.c: 12:     RE2 = mode;
  1523     05C6  1870               	btfsc	clcd_write@mode,0
  1524     05C7  2DC9               	goto	u261
  1525     05C8  2DCD               	goto	u260
  1526     05C9                     u261:
  1527     05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1528     05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1529     05CB  1509               	bsf	9,2	;volatile
  1530     05CC  2DD0               	goto	u274
  1531     05CD                     u260:
  1532     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1533     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1534     05CF  1109               	bcf	9,2	;volatile
  1535     05D0                     u274:
  1536     05D0                     l867:
  1537                           
  1538                           ;clcd.c: 13:     PORTD = byte;
  1539     05D0  0873               	movf	clcd_write@byte,w
  1540     05D1  0088               	movwf	8	;volatile
  1541     05D2                     l869:
  1542                           
  1543                           ;clcd.c: 15:     RE1 = 1;
  1544     05D2  1489               	bsf	9,1	;volatile
  1545                           
  1546                           ;clcd.c: 16:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1547     05D3  30A6               	movlw	166
  1548     05D4  00F1               	movwf	??_clcd_write
  1549     05D5                     u577:
  1550     05D5  0BF1               	decfsz	??_clcd_write,f
  1551     05D6  2DD5               	goto	u577
  1552     05D7  0000               	nop
  1553     05D8                     l871:
  1554                           
  1555                           ;clcd.c: 17:     RE1 = 0;
  1556     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1557     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1558     05DA  1089               	bcf	9,1	;volatile
  1559                           
  1560                           ;clcd.c: 19:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1561     05DB  301B               	movlw	27
  1562     05DC  00F2               	movwf	??_clcd_write+1
  1563     05DD  309E               	movlw	158
  1564     05DE  00F1               	movwf	??_clcd_write
  1565     05DF                     u587:
  1566     05DF  0BF1               	decfsz	??_clcd_write,f
  1567     05E0  2DDF               	goto	u587
  1568     05E1  0BF2               	decfsz	??_clcd_write+1,f
  1569     05E2  2DDF               	goto	u587
  1570     05E3  0000               	nop
  1571     05E4                     l17:
  1572     05E4  0008               	return
  1573     05E5                     __end_of_clcd_write:
  1574     007E                     btemp	set	126	;btemp
  1575     007E                     wtemp0	set	126
  1576                           
  1577                           	psect	config
  1578                           
  1579                           ;Config register CONFIG @ 0x2007
  1580                           ;	Oscillator Selection bits
  1581                           ;	FOSC = 0x3, unprogrammed default
  1582                           ;	Watchdog Timer Enable bit
  1583                           ;	WDTE = OFF, WDT disabled
  1584                           ;	Power-up Timer Enable bit
  1585                           ;	PWRTE = 0x1, unprogrammed default
  1586                           ;	Brown-out Reset Enable bit
  1587                           ;	BOREN = 0x1, unprogrammed default
  1588                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1589                           ;	LVP = 0x1, unprogrammed default
  1590                           ;	Data EEPROM Memory Code Protection bit
  1591                           ;	CPD = 0x1, unprogrammed default
  1592                           ;	Flash Program Memory Write Enable bits
  1593                           ;	WRT = 0x3, unprogrammed default
  1594                           ;	In-Circuit Debugger Mode bit
  1595                           ;	DEBUG = 0x1, unprogrammed default
  1596                           ;	Flash Program Memory Code Protection bit
  1597                           ;	CP = 0x1, unprogrammed default
  1598     2007                     	org	8199
  1599     2007  3FFB               	dw	16379

Data Sizes:
    Strings     20
    Constant    0
    Data        11
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     13      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[7]), STR_1(CODE[13]), main@str(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    4543
                                              7 COMMON     4     4      0
                                              0 BANK0     13    13      0
                         _clcd_print
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3    1479
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 20 21:47:52 2022

                              pc 0002                   clcd_print@addr 0076                               l20 066A  
                             l23 05A6                               l32 0613                               l17 05E4  
                             l51 0708                               l53 0732                               l39 059B  
                             l55 0764                               l49 06E6                               fsr 0004  
                            l901 05E5                              l903 05ED                              l905 05FD  
                            l921 0696                              l913 066B                              l907 0603  
                            l931 06CC                              l923 06A1                              l915 0670  
                            l909 0596                              l941 06E2                              l933 06D2  
                            l925 06AC                              l917 0676                              l871 05D8  
                            l951 06F4                              l943 06E4                              l935 06D6  
                            l927 06C2                              l919 068B                              l865 05C6  
                            l881 0638                              l873 0614                              l961 0704  
                            l945 06EC                              l953 06F6                              l937 06D8  
                            l929 06C8                              l867 05D0                              l891 065E  
                            l883 063F                              l875 061C                              l971 0716  
                            l963 0706                              l955 06FC                              l947 06F0  
                            l939 06DE                              l869 05D2                              l885 0642  
                            l877 0623                              l893 059C                              l981 0726  
                            l973 0718                              l965 070E                              l957 0700  
                            l949 06F2                              l887 0649                              l879 0633  
                            l895 059F                              l991 0730                              l983 0728  
                            l975 071A                              l967 0712                              l959 0702  
                            l889 0655                              l897 05A0                              l993 0738  
                            l985 072A                              l969 0714                              l977 071C  
                            l899 05A1                              l995 073C                              l987 072C  
                            l979 0722                              l997 073E                              l989 072E  
                            l999 0740                              _RE1 0049                              _RE2 004A  
                            u300 06C2                              u301 06C1                              u310 06D2  
                            u311 06D1                              u400 0786                              u320 06DE  
                            u401 0785                              u321 06DD                              u305 06BE  
                            u410 07A0                              u330 06EC                              u411 079F  
                            u331 06EB                              u260 05CD                              u500 07D6  
                            u420 07A6                              u340 06FC                              u261 05C9  
                            u501 07D5                              u421 07A5                              u341 06FB  
                            u430 07AC                              u350 070E                              u431 07AB  
                            u351 070D                              u280 0613                              u440 07B2  
                            u360 0722                              u281 0612                              u441 07B1  
                            u361 0721                              u274 05D0                              u450 07B8  
                            u370 0738                              u290 067E                              u451 07B7  
                            u371 0737                              u460 07BE                              u380 0750  
                            u517 0618                              u461 07BD                              u381 074F  
                            u470 07C4                              u390 076A                              u527 0627  
                            u471 07C3                              u391 0769                              u480 07CA  
                            u537 0635                              u481 07C9                              u490 07D0  
                            u547 064B                              u491 07CF                              u557 0659  
                            u567 0667                              u577 05D5                              u587 05DF  
                            fsr0 0004                              indf 0000                             l1001 0742  
                           l1011 0750                             l1003 0744                             l1021 075C  
                           l1013 0754                             l1005 0746                             l1031 076E  
                           l1023 075E                             l1015 0756                             l1007 0748  
                           l1041 0778                             l1033 0770                             l1025 0760  
                           l1017 0758                             l1009 074A                             l1051 0786  
                           l1043 077A                             l1035 0772                             l1027 0762  
                           l1019 075A                             l1061 07B2                             l1053 079A  
                           l1045 077C                             l1037 0774                             l1029 076A  
                           l1071 07D0                             l1063 07B8                             l1055 07A0  
                           l1047 077E                             l1039 0776                             l1073 07D6  
                           l1065 07BE                             l1057 07A6                             l1049 0780  
                           l1067 07C4                             l1059 07AC                             l1069 07CA  
                           STR_1 0013                             STR_2 0020                             _main 066B  
                           btemp 007E                             start 0000                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISD 0088                            pclath 000A  
                          status 0003                            wtemp0 007E                  __initialization 07EE  
                   __end_of_main 07EE                           ??_main 0077                           _TRISE1 0449  
                         _TRISE2 044A          _init_display_controller 0614          __end_of__initialization 07FC  
                 __pcstackCOMMON 0070                     __pidataBANK0 05A7        ??_init_display_controller 0074  
                     _clcd_print 05E5                       _clcd_write 05C5                       __pmaintext 066B  
                     __stringtab 0003                          __ptext1 0596                          __ptext2 059C  
                        __ptext3 0614                          __ptext4 05E5                          __ptext5 05C5  
__end_of_init_display_controller 066B                __end_of_init_clcd 05A7                          main@str 0022  
           end_of_initialization 07FC                      ?_clcd_print 0074                      ?_clcd_write 0070  
                  clcd_print@str 0074              start_initialization 07EE                       init_fetch0 05B2  
                    __pdataBANK0 002D                    ??_init_config 0076                        ___latbits 0002  
                  __pcstackBANK0 0020                        __pstrings 0003                        _init_clcd 059C  
            __end_of_init_config 059C         ?_init_display_controller 0070                     ??_clcd_print 0077  
                   ??_clcd_write 0071                      __stringbase 0012               __end_of_clcd_print 0614  
             __end_of_clcd_write 05E5                       ?_init_clcd 0070               __end_of__stringtab 0013  
                    _init_config 0596                         main@F860 002D                         main@wait 0020  
                       init_ram0 05B6                      ??_init_clcd 0076                        stringcode 000D  
                       stringdir 000D                         stringtab 0003  
