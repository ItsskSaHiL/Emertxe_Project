

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 29 19:35:30 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0000                     	;# 
   171     0001                     	;# 
   172     0002                     	;# 
   173     0003                     	;# 
   174     0004                     	;# 
   175     0005                     	;# 
   176     0006                     	;# 
   177     0007                     	;# 
   178     0008                     	;# 
   179     0009                     	;# 
   180     000A                     	;# 
   181     000B                     	;# 
   182     000C                     	;# 
   183     000D                     	;# 
   184     000E                     	;# 
   185     000E                     	;# 
   186     000F                     	;# 
   187     0010                     	;# 
   188     0011                     	;# 
   189     0012                     	;# 
   190     0013                     	;# 
   191     0014                     	;# 
   192     0015                     	;# 
   193     0015                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001B                     	;# 
   201     001C                     	;# 
   202     001D                     	;# 
   203     001E                     	;# 
   204     001F                     	;# 
   205     0081                     	;# 
   206     0085                     	;# 
   207     0086                     	;# 
   208     0087                     	;# 
   209     0088                     	;# 
   210     0089                     	;# 
   211     008C                     	;# 
   212     008D                     	;# 
   213     008E                     	;# 
   214     0091                     	;# 
   215     0092                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     0091                     	;# 
   273     0092                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009E                     	;# 
   279     009F                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0000                     	;# 
   287     0001                     	;# 
   288     0002                     	;# 
   289     0003                     	;# 
   290     0004                     	;# 
   291     0005                     	;# 
   292     0006                     	;# 
   293     0007                     	;# 
   294     0008                     	;# 
   295     0009                     	;# 
   296     000A                     	;# 
   297     000B                     	;# 
   298     000C                     	;# 
   299     000D                     	;# 
   300     000E                     	;# 
   301     000E                     	;# 
   302     000F                     	;# 
   303     0010                     	;# 
   304     0011                     	;# 
   305     0012                     	;# 
   306     0013                     	;# 
   307     0014                     	;# 
   308     0015                     	;# 
   309     0015                     	;# 
   310     0016                     	;# 
   311     0017                     	;# 
   312     0018                     	;# 
   313     0019                     	;# 
   314     001A                     	;# 
   315     001B                     	;# 
   316     001B                     	;# 
   317     001C                     	;# 
   318     001D                     	;# 
   319     001E                     	;# 
   320     001F                     	;# 
   321     0081                     	;# 
   322     0085                     	;# 
   323     0086                     	;# 
   324     0087                     	;# 
   325     0088                     	;# 
   326     0089                     	;# 
   327     008C                     	;# 
   328     008D                     	;# 
   329     008E                     	;# 
   330     0091                     	;# 
   331     0092                     	;# 
   332     0093                     	;# 
   333     0094                     	;# 
   334     0098                     	;# 
   335     0099                     	;# 
   336     009E                     	;# 
   337     009F                     	;# 
   338     010C                     	;# 
   339     010D                     	;# 
   340     010E                     	;# 
   341     010F                     	;# 
   342     018C                     	;# 
   343     018D                     	;# 
   344                           
   345                           	psect	nvBANK0
   346     0027                     __pnvBANK0:
   347     0027                     _duty_cycle:
   348     0027                     	ds	1
   349     0001                     _TMR0	set	1
   350     001E                     _ADRESH	set	30
   351     0008                     _PORTD	set	8
   352     0040                     _RD0	set	64
   353     005A                     _TMR0IF	set	90
   354     005D                     _TMR0IE	set	93
   355     00FA                     _nDONE	set	250
   356     00FA                     _GO	set	250
   357     00F8                     _ADON	set	248
   358     005F                     _GIE	set	95
   359     009E                     _ADRESL	set	158
   360     0088                     _TRISD	set	136
   361     040B                     _PSA	set	1035
   362     040D                     _T0CS	set	1037
   363     04FF                     _ADFM	set	1279
   364                           
   365                           	psect	cinit
   366     000F                     start_initialization:	
   367                           ; #config settings
   368                           
   369     000F                     __initialization:
   370                           
   371                           ; Clear objects allocated to COMMON
   372     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   373     0010                     end_of_initialization:	
   374                           ;End of C runtime variable initialization code
   375                           
   376     0010                     __end_of__initialization:
   377     0010  0183               	clrf	3
   378     0011  120A  118A  285A   	ljmp	_main	;jump to C main() function
   379                           
   380                           	psect	bssCOMMON
   381     007A                     __pbssCOMMON:
   382     007A                     isr@loop_counter:
   383     007A                     	ds	1
   384                           
   385                           	psect	cstackCOMMON
   386     0070                     __pcstackCOMMON:
   387     0070                     ?_init_timer0:
   388     0070                     ?_init_adc:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0070                     ?_init_config:	
   392                           ; 1 bytes @ 0x0
   393                           
   394     0070                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397     0070                     ?_isr:	
   398                           ; 1 bytes @ 0x0
   399                           
   400     0070                     ??_isr:	
   401                           ; 1 bytes @ 0x0
   402                           
   403                           
   404                           ; 1 bytes @ 0x0
   405     0070                     	ds	3
   406     0073                     ??_init_timer0:
   407     0073                     ??_init_adc:	
   408                           ; 1 bytes @ 0x3
   409                           
   410     0073                     ??_init_config:	
   411                           ; 1 bytes @ 0x3
   412                           
   413     0073                     ?_read_adc:	
   414                           ; 1 bytes @ 0x3
   415                           
   416                           
   417                           ; 2 bytes @ 0x3
   418     0073                     	ds	2
   419     0075                     ??_read_adc:
   420     0075                     read_adc@adc_reg_val:	
   421                           ; 1 bytes @ 0x5
   422                           
   423                           
   424                           ; 2 bytes @ 0x5
   425     0075                     	ds	2
   426     0077                     ??___lwdiv:
   427                           
   428                           ; 1 bytes @ 0x7
   429     0077                     	ds	1
   430     0078                     ??_main:
   431     0078                     main@i:	
   432                           ; 1 bytes @ 0x8
   433                           
   434                           
   435                           ; 2 bytes @ 0x8
   436     0078                     	ds	2
   437                           
   438                           	psect	cstackBANK0
   439     0020                     __pcstackBANK0:
   440     0020                     ?___lwdiv:
   441     0020                     ___lwdiv@divisor:	
   442                           ; 2 bytes @ 0x0
   443                           
   444                           
   445                           ; 2 bytes @ 0x0
   446     0020                     	ds	2
   447     0022                     ___lwdiv@dividend:
   448                           
   449                           ; 2 bytes @ 0x2
   450     0022                     	ds	2
   451     0024                     ___lwdiv@counter:
   452                           
   453                           ; 1 bytes @ 0x4
   454     0024                     	ds	1
   455     0025                     ___lwdiv@quotient:
   456                           
   457                           ; 2 bytes @ 0x5
   458     0025                     	ds	2
   459                           
   460                           	psect	maintext
   461     005A                     __pmaintext:	
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 44 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  i               2    8[COMMON] int 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : B00/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   481 ;;      Params:         0       0       0       0       0
   482 ;;      Locals:         2       0       0       0       0
   483 ;;      Temps:          0       0       0       0       0
   484 ;;      Totals:         2       0       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels required when called: 3
   487 ;; This function calls:
   488 ;;		___lwdiv
   489 ;;		_init_config
   490 ;;		_read_adc
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     005A                     _main:	
   497                           ;psect for function _main
   498                           
   499     005A                     l868:	
   500                           ;incstack = 0
   501                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   502                           
   503     005A  120A  118A  20D2  120A  118A  	fcall	_init_config
   504     005F                     l22:
   505     005F  300A               	movlw	10
   506     0060  1283               	bcf	3,5	;RP0=0, select bank0
   507     0061  1303               	bcf	3,6	;RP1=0, select bank0
   508     0062  00A0               	movwf	___lwdiv@divisor
   509     0063  3000               	movlw	0
   510     0064  00A1               	movwf	___lwdiv@divisor+1
   511     0065  120A  118A  20C0  120A  118A  	fcall	_read_adc
   512     006A  0874               	movf	?_read_adc+1,w
   513     006B  1283               	bcf	3,5	;RP0=0, select bank0
   514     006C  1303               	bcf	3,6	;RP1=0, select bank0
   515     006D  00A3               	movwf	___lwdiv@dividend+1
   516     006E  0873               	movf	?_read_adc,w
   517     006F  00A2               	movwf	___lwdiv@dividend
   518     0070  120A  118A  2014  120A  118A  	fcall	___lwdiv
   519     0075  1283               	bcf	3,5	;RP0=0, select bank0
   520     0076  1303               	bcf	3,6	;RP1=0, select bank0
   521     0077  0820               	movf	?___lwdiv,w
   522     0078  00A7               	movwf	_duty_cycle
   523     0079                     l870:
   524     0079  30F4               	movlw	244
   525     007A  00F8               	movwf	main@i
   526     007B  3001               	movlw	1
   527     007C  00F9               	movwf	main@i+1
   528     007D                     l872:
   529     007D  30FF               	movlw	255
   530     007E  07F8               	addwf	main@i,f
   531     007F  1803               	skipnc
   532     0080  0AF9               	incf	main@i+1,f
   533     0081  30FF               	movlw	255
   534     0082  07F9               	addwf	main@i+1,f
   535     0083  0A78               	incf	main@i,w
   536     0084  1D03               	skipz
   537     0085  288A               	goto	u371
   538     0086  0A79               	incf	main@i+1,w
   539     0087  1D03               	btfss	3,2
   540     0088  288A               	goto	u371
   541     0089  288B               	goto	u370
   542     008A                     u371:
   543     008A  287D               	goto	l872
   544     008B                     u370:
   545     008B  285F               	goto	l22
   546     008C  120A  118A  280C   	ljmp	start
   547     008F                     __end_of_main:
   548                           
   549                           	psect	text1
   550     00C0                     __ptext1:	
   551 ;; *************** function _read_adc *****************
   552 ;; Defined at:
   553 ;;		line 12 in file "adc.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  adc_reg_val     2    5[COMMON] unsigned short 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  2    3[COMMON] unsigned short 
   560 ;; Registers used:
   561 ;;		wreg
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         2       0       0       0       0
   568 ;;      Locals:         2       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         4       0       0       0       0
   571 ;;Total ram usage:        4 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 1
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581     00C0                     _read_adc:	
   582                           ;psect for function _read_adc
   583                           
   584     00C0                     l836:	
   585                           ;incstack = 0
   586                           ; Regs used in _read_adc: [wreg]
   587                           
   588                           
   589                           ;adc.c: 14:     unsigned short adc_reg_val;;adc.c: 17:     GO = 1;
   590     00C0  1283               	bcf	3,5	;RP0=0, select bank0
   591     00C1  1303               	bcf	3,6	;RP1=0, select bank0
   592     00C2  151F               	bsf	31,2	;volatile
   593     00C3                     l46:	
   594                           ;adc.c: 20:     while (nDONE);
   595                           
   596     00C3  191F               	btfsc	31,2	;volatile
   597     00C4  28C6               	goto	u291
   598     00C5  28C7               	goto	u290
   599     00C6                     u291:
   600     00C6  28C3               	goto	l46
   601     00C7                     u290:
   602     00C7                     l838:
   603                           
   604                           ;adc.c: 23:     adc_reg_val = (ADRESH << 8) | ADRESL;
   605     00C7  081E               	movf	30,w	;volatile
   606     00C8  00F6               	movwf	read_adc@adc_reg_val+1
   607     00C9  1683               	bsf	3,5	;RP0=1, select bank1
   608     00CA  1303               	bcf	3,6	;RP1=0, select bank1
   609     00CB  081E               	movf	30,w	;volatile
   610     00CC  00F5               	movwf	read_adc@adc_reg_val
   611                           
   612                           ;adc.c: 25:     return adc_reg_val;
   613     00CD  0876               	movf	read_adc@adc_reg_val+1,w
   614     00CE  00F4               	movwf	?_read_adc+1
   615     00CF  0875               	movf	read_adc@adc_reg_val,w
   616     00D0  00F3               	movwf	?_read_adc
   617     00D1                     l49:
   618     00D1  0008               	return
   619     00D2                     __end_of_read_adc:
   620                           
   621                           	psect	text2
   622     00D2                     __ptext2:	
   623 ;; *************** function _init_config *****************
   624 ;; Defined at:
   625 ;;		line 32 in file "main.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;		None
   628 ;; Auto vars:     Size  Location     Type
   629 ;;		None
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg, status,2, status,0, pclath, cstack
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         0       0       0       0       0
   641 ;;      Temps:          0       0       0       0       0
   642 ;;      Totals:         0       0       0       0       0
   643 ;;Total ram usage:        0 bytes
   644 ;; Hardware stack levels used: 1
   645 ;; Hardware stack levels required when called: 2
   646 ;; This function calls:
   647 ;;		_init_adc
   648 ;;		_init_timer0
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654     00D2                     _init_config:	
   655                           ;psect for function _init_config
   656                           
   657     00D2                     l828:	
   658                           ;incstack = 0
   659                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   660                           
   661     00D2  1283               	bcf	3,5	;RP0=0, select bank0
   662     00D3  1303               	bcf	3,6	;RP1=0, select bank0
   663     00D4  0188               	clrf	8	;volatile
   664     00D5  1683               	bsf	3,5	;RP0=1, select bank1
   665     00D6  1303               	bcf	3,6	;RP1=0, select bank1
   666     00D7  0188               	clrf	8	;volatile
   667     00D8                     l830:
   668     00D8  120A  118A  20E4  120A  118A  	fcall	_init_timer0
   669     00DD                     l832:
   670     00DD  178B               	bsf	11,7	;volatile
   671     00DE                     l834:
   672     00DE  120A  118A  20EE  120A  118A  	fcall	_init_adc
   673     00E3                     l17:
   674     00E3  0008               	return
   675     00E4                     __end_of_init_config:
   676                           
   677                           	psect	text3
   678     00E4                     __ptext3:	
   679 ;; *************** function _init_timer0 *****************
   680 ;; Defined at:
   681 ;;		line 3 in file "timers.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_init_config
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709     00E4                     _init_timer0:	
   710                           ;psect for function _init_timer0
   711                           
   712     00E4                     l820:	
   713                           ;incstack = 0
   714                           ; Regs used in _init_timer0: [wreg]
   715                           
   716                           
   717                           ;timers.c: 6:     T0CS = 0;
   718     00E4  1683               	bsf	3,5	;RP0=1, select bank1
   719     00E5  1303               	bcf	3,6	;RP1=0, select bank1
   720     00E6  1281               	bcf	1,5	;volatile
   721                           
   722                           ;timers.c: 9:     PSA = 1;
   723     00E7  1581               	bsf	1,3	;volatile
   724     00E8                     l822:
   725                           
   726                           ;timers.c: 11:     TMR0 = 6;
   727     00E8  3006               	movlw	6
   728     00E9  1283               	bcf	3,5	;RP0=0, select bank0
   729     00EA  1303               	bcf	3,6	;RP1=0, select bank0
   730     00EB  0081               	movwf	1	;volatile
   731     00EC                     l824:
   732                           
   733                           ;timers.c: 14:     TMR0IE = 1;
   734     00EC  168B               	bsf	11,5	;volatile
   735     00ED                     l60:
   736     00ED  0008               	return
   737     00EE                     __end_of_init_timer0:
   738                           
   739                           	psect	text4
   740     00EE                     __ptext4:	
   741 ;; *************** function _init_adc *****************
   742 ;; Defined at:
   743 ;;		line 3 in file "adc.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		None
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_init_config
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     00EE                     _init_adc:	
   772                           ;psect for function _init_adc
   773                           
   774     00EE                     l826:	
   775                           ;incstack = 0
   776                           ; Regs used in _init_adc: []
   777                           
   778                           
   779                           ;adc.c: 6:     ADFM = 1;
   780     00EE  1683               	bsf	3,5	;RP0=1, select bank1
   781     00EF  1303               	bcf	3,6	;RP1=0, select bank1
   782     00F0  179F               	bsf	31,7	;volatile
   783                           
   784                           ;adc.c: 9:     ADON = 1;
   785     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   786     00F2  1303               	bcf	3,6	;RP1=0, select bank0
   787     00F3  141F               	bsf	31,0	;volatile
   788     00F4                     l43:
   789     00F4  0008               	return
   790     00F5                     __end_of_init_adc:
   791                           
   792                           	psect	text5
   793     0014                     __ptext5:	
   794 ;; *************** function ___lwdiv *****************
   795 ;; Defined at:
   796 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  divisor         2    0[BANK0 ] unsigned int 
   799 ;;  dividend        2    2[BANK0 ] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  quotient        2    5[BANK0 ] unsigned int 
   802 ;;  counter         1    4[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2    0[BANK0 ] unsigned int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       4       0       0       0
   813 ;;      Locals:         0       3       0       0       0
   814 ;;      Temps:          1       0       0       0       0
   815 ;;      Totals:         1       7       0       0       0
   816 ;;Total ram usage:        8 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826     0014                     ___lwdiv:	
   827                           ;psect for function ___lwdiv
   828                           
   829     0014                     l842:	
   830                           ;incstack = 0
   831                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   832                           
   833     0014  1283               	bcf	3,5	;RP0=0, select bank0
   834     0015  1303               	bcf	3,6	;RP1=0, select bank0
   835     0016  01A5               	clrf	___lwdiv@quotient
   836     0017  01A6               	clrf	___lwdiv@quotient+1
   837     0018                     l844:
   838     0018  0820               	movf	___lwdiv@divisor,w
   839     0019  0421               	iorwf	___lwdiv@divisor+1,w
   840     001A  1903               	btfsc	3,2
   841     001B  281D               	goto	u301
   842     001C  281E               	goto	u300
   843     001D                     u301:
   844     001D  2855               	goto	l864
   845     001E                     u300:
   846     001E                     l846:
   847     001E  01A4               	clrf	___lwdiv@counter
   848     001F  0AA4               	incf	___lwdiv@counter,f
   849     0020  282C               	goto	l852
   850     0021                     l848:
   851     0021  3001               	movlw	1
   852     0022                     u315:
   853     0022  1003               	clrc
   854     0023  0DA0               	rlf	___lwdiv@divisor,f
   855     0024  0DA1               	rlf	___lwdiv@divisor+1,f
   856     0025  3EFF               	addlw	-1
   857     0026  1D03               	skipz
   858     0027  2822               	goto	u315
   859     0028                     l850:
   860     0028  3001               	movlw	1
   861     0029  00F7               	movwf	??___lwdiv
   862     002A  0877               	movf	??___lwdiv,w
   863     002B  07A4               	addwf	___lwdiv@counter,f
   864     002C                     l852:
   865     002C  1FA1               	btfss	___lwdiv@divisor+1,7
   866     002D  282F               	goto	u321
   867     002E  2830               	goto	u320
   868     002F                     u321:
   869     002F  2821               	goto	l848
   870     0030                     u320:
   871     0030                     l854:
   872     0030  3001               	movlw	1
   873     0031                     u335:
   874     0031  1003               	clrc
   875     0032  0DA5               	rlf	___lwdiv@quotient,f
   876     0033  0DA6               	rlf	___lwdiv@quotient+1,f
   877     0034  3EFF               	addlw	-1
   878     0035  1D03               	skipz
   879     0036  2831               	goto	u335
   880     0037  0821               	movf	___lwdiv@divisor+1,w
   881     0038  0223               	subwf	___lwdiv@dividend+1,w
   882     0039  1D03               	skipz
   883     003A  283D               	goto	u345
   884     003B  0820               	movf	___lwdiv@divisor,w
   885     003C  0222               	subwf	___lwdiv@dividend,w
   886     003D                     u345:
   887     003D  1C03               	skipc
   888     003E  2840               	goto	u341
   889     003F  2841               	goto	u340
   890     0040                     u341:
   891     0040  2848               	goto	l860
   892     0041                     u340:
   893     0041                     l856:
   894     0041  0820               	movf	___lwdiv@divisor,w
   895     0042  02A2               	subwf	___lwdiv@dividend,f
   896     0043  0821               	movf	___lwdiv@divisor+1,w
   897     0044  1C03               	skipc
   898     0045  03A3               	decf	___lwdiv@dividend+1,f
   899     0046  02A3               	subwf	___lwdiv@dividend+1,f
   900     0047                     l858:
   901     0047  1425               	bsf	___lwdiv@quotient,0
   902     0048                     l860:
   903     0048  3001               	movlw	1
   904     0049                     u355:
   905     0049  1003               	clrc
   906     004A  0CA1               	rrf	___lwdiv@divisor+1,f
   907     004B  0CA0               	rrf	___lwdiv@divisor,f
   908     004C  3EFF               	addlw	-1
   909     004D  1D03               	skipz
   910     004E  2849               	goto	u355
   911     004F                     l862:
   912     004F  3001               	movlw	1
   913     0050  02A4               	subwf	___lwdiv@counter,f
   914     0051  1D03               	btfss	3,2
   915     0052  2854               	goto	u361
   916     0053  2855               	goto	u360
   917     0054                     u361:
   918     0054  2830               	goto	l854
   919     0055                     u360:
   920     0055                     l864:
   921     0055  0826               	movf	___lwdiv@quotient+1,w
   922     0056  00A1               	movwf	?___lwdiv+1
   923     0057  0825               	movf	___lwdiv@quotient,w
   924     0058  00A0               	movwf	?___lwdiv
   925     0059                     l438:
   926     0059  0008               	return
   927     005A                     __end_of___lwdiv:
   928                           
   929                           	psect	text6
   930     008F                     __ptext6:	
   931 ;; *************** function _isr *****************
   932 ;; Defined at:
   933 ;;		line 11 in file "isr.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0
   949 ;;      Temps:          3       0       0       0       0
   950 ;;      Totals:         3       0       0       0       0
   951 ;;Total ram usage:        3 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		Interrupt level 1
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960     008F                     _isr:	
   961                           ;psect for function _isr
   962                           
   963     008F                     i1l800:
   964                           
   965                           ;isr.c: 14:     static unsigned char loop_counter = 0;;isr.c: 17:   if (TMR0IF == 1)
   966     008F  1D0B               	btfss	11,2	;volatile
   967     0090  2892               	goto	u24_21
   968     0091  2893               	goto	u24_20
   969     0092                     u24_21:
   970     0092  28B9               	goto	i1l80
   971     0093                     u24_20:
   972     0093                     i1l802:
   973                           
   974                           ;isr.c: 18:   {;isr.c: 20:         TMR0 = TMR0 + 8;
   975     0093  1283               	bcf	3,5	;RP0=0, select bank0
   976     0094  1303               	bcf	3,6	;RP1=0, select bank0
   977     0095  0801               	movf	1,w	;volatile
   978     0096  3E08               	addlw	8
   979     0097  0081               	movwf	1	;volatile
   980     0098                     i1l804:
   981                           
   982                           ;isr.c: 22:     if (loop_counter <= duty_cycle)
   983     0098  087A               	movf	isr@loop_counter,w
   984     0099  0227               	subwf	_duty_cycle,w
   985     009A  1C03               	skipc
   986     009B  289D               	goto	u25_21
   987     009C  289E               	goto	u25_20
   988     009D                     u25_21:
   989     009D  28A0               	goto	i1l808
   990     009E                     u25_20:
   991     009E                     i1l806:
   992                           
   993                           ;isr.c: 23:     {;isr.c: 24:         RD0 = 1;
   994     009E  1408               	bsf	8,0	;volatile
   995                           
   996                           ;isr.c: 25:     }
   997     009F  28AD               	goto	i1l814
   998     00A0                     i1l808:
   999     00A0  0827               	movf	_duty_cycle,w
  1000     00A1  027A               	subwf	isr@loop_counter,w
  1001     00A2  1C03               	skipc
  1002     00A3  28A5               	goto	u26_21
  1003     00A4  28A6               	goto	u26_20
  1004     00A5                     u26_21:
  1005     00A5  28AD               	goto	i1l814
  1006     00A6                     u26_20:
  1007     00A6                     i1l810:
  1008     00A6  3064               	movlw	100
  1009     00A7  027A               	subwf	isr@loop_counter,w
  1010     00A8  1803               	skipnc
  1011     00A9  28AB               	goto	u27_21
  1012     00AA  28AC               	goto	u27_20
  1013     00AB                     u27_21:
  1014     00AB  28AD               	goto	i1l814
  1015     00AC                     u27_20:
  1016     00AC                     i1l812:
  1017                           
  1018                           ;isr.c: 27:     {;isr.c: 28:         RD0 = 0;
  1019     00AC  1008               	bcf	8,0	;volatile
  1020     00AD                     i1l814:
  1021                           
  1022                           ;isr.c: 30:     if (loop_counter++ == 100)
  1023     00AD  3001               	movlw	1
  1024     00AE  00F0               	movwf	??_isr
  1025     00AF  0870               	movf	??_isr,w
  1026     00B0  07FA               	addwf	isr@loop_counter,f
  1027     00B1  3065               	movlw	101
  1028     00B2  067A               	xorwf	isr@loop_counter,w
  1029     00B3  1D03               	btfss	3,2
  1030     00B4  28B6               	goto	u28_21
  1031     00B5  28B7               	goto	u28_20
  1032     00B6                     u28_21:
  1033     00B6  28B8               	goto	i1l818
  1034     00B7                     u28_20:
  1035     00B7                     i1l816:
  1036                           
  1037                           ;isr.c: 31:     {;isr.c: 32:         loop_counter = 0;
  1038     00B7  01FA               	clrf	isr@loop_counter
  1039     00B8                     i1l818:
  1040                           
  1041                           ;isr.c: 34:     TMR0IF = 0;
  1042     00B8  110B               	bcf	11,2	;volatile
  1043     00B9                     i1l80:
  1044     00B9  0872               	movf	??_isr+2,w
  1045     00BA  008A               	movwf	10
  1046     00BB  0E71               	swapf	??_isr+1,w
  1047     00BC  0083               	movwf	3
  1048     00BD  0EFE               	swapf	btemp,f
  1049     00BE  0E7E               	swapf	btemp,w
  1050     00BF  0009               	retfie
  1051     00C0                     __end_of_isr:
  1052     007E                     btemp	set	126	;btemp
  1053     007E                     wtemp0	set	126
  1054                           
  1055                           	psect	intentry
  1056     0004                     __pintentry:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _isr: [wreg+status,2+status,0]
  1059                           
  1060     0004                     interrupt_function:
  1061     007E                     saved_w	set	btemp
  1062     0004  00FE               	movwf	btemp
  1063     0005  0E03               	swapf	3,w
  1064     0006  00F1               	movwf	??_isr+1
  1065     0007  080A               	movf	10,w
  1066     0008  00F2               	movwf	??_isr+2
  1067     0009  120A  118A  288F   	ljmp	_isr
  1068                           
  1069                           	psect	config
  1070                           
  1071                           ;Config register CONFIG @ 0x2007
  1072                           ;	Oscillator Selection bits
  1073                           ;	FOSC = 0x3, unprogrammed default
  1074                           ;	Watchdog Timer Enable bit
  1075                           ;	WDTE = OFF, WDT disabled
  1076                           ;	Power-up Timer Enable bit
  1077                           ;	PWRTE = 0x1, unprogrammed default
  1078                           ;	FLASH Program Memory Code Protection bits
  1079                           ;	CP = 0x303, unprogrammed default
  1080                           ;	Brown-out Reset Enable bit
  1081                           ;	BOREN = 0x1, unprogrammed default
  1082                           ;	Low Voltage In-Circuit Serial Programming Enable bit
  1083                           ;	LVP = 0x1, unprogrammed default
  1084                           ;	Data EE Memory Code Protection
  1085                           ;	CPD = 0x1, unprogrammed default
  1086                           ;	FLASH Program Memory Write Enable
  1087                           ;	WRT = 0x1, unprogrammed default
  1088                           ;	In-Circuit Debugger Mode bit
  1089                           ;	DEBUG = 0x1, unprogrammed default
  1090     2007                     	org	8199
  1091     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      7       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->_read_adc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     489
                                              8 COMMON     2     2      0
                            ___lwdiv
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      34
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_adc
                        _init_timer0
 ---------------------------------------------------------------------------------
 (2) _init_timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     421
                                              7 COMMON     1     1      0
                                              0 BANK0      7     3      4
                           _read_adc (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     _read_adc (ARG)
   _init_config
     _init_adc
     _init_timer0
   _read_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 29 19:35:30 2022

                     l22 005F                       l17 00E3                       l43 00F4  
                     l60 00ED                       l46 00C3                       l49 00D1  
                     _GO 00FA                      l438 0059                      l820 00E4  
                    l822 00E8                      l830 00D8                      l824 00EC  
                    l832 00DD                      l850 0028                      l842 0014  
                    l826 00EE                      l834 00DE                      l860 0048  
                    l852 002C                      l844 0018                      l828 00D2  
                    l836 00C0                      l862 004F                      l854 0030  
                    l846 001E                      l838 00C7                      l870 0079  
                    l856 0041                      l848 0021                      l864 0055  
                    l872 007D                      l858 0047                      l868 005A  
                    _GIE 005F                      _RD0 0040                      u300 001E  
                    u301 001D                      u320 0030                      u321 002F  
                    u315 0022                      u340 0041                      u341 0040  
                    u335 0031                      u360 0055                      u361 0054  
                    u345 003D                      u290 00C7                      u370 008B  
                    u355 0049                      u291 00C6                      u371 008A  
                    _PSA 040B                      _isr 008F                     _ADFM 04FF  
                   ?_isr 0070                     _ADON 00F8                     _T0CS 040D  
                   i1l80 00B9                     _TMR0 0001                     _main 005A  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070          __end_of___lwdiv 005A                    i1l800 008F  
                  i1l810 00A6                    i1l802 0093             ?_init_config 0070  
                  i1l812 00AC                    i1l804 0098                    i1l814 00AD  
                  i1l806 009E                    i1l816 00B7                    i1l808 00A0  
                  i1l818 00B8                    u24_20 0093                    u24_21 0092  
                  u25_20 009E                    u25_21 009D                    u26_20 00A6  
                  u26_21 00A5                    u27_20 00AC                    u27_21 00AB  
                  _PORTD 0008                    u28_20 00B7                    u28_21 00B6  
                  _TRISD 0088             ?_init_timer0 0070                    _nDONE 00FA  
                  main@i 0078                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 008F  
                 ??_main 0078          isr@loop_counter 007A                   _ADRESH 001E  
                 _ADRESL 009E                   _TMR0IE 005D                   _TMR0IF 005A  
              ??___lwdiv 0077         __end_of_init_adc 00F5         __end_of_read_adc 00D2  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
             __pmaintext 005A               __pintentry 0004                ?_init_adc 0070  
              ?_read_adc 0073                  ___lwdiv 0014                  __ptext1 00C0  
                __ptext2 00D2                  __ptext3 00E4                  __ptext4 00EE  
                __ptext5 0014                  __ptext6 008F               _duty_cycle 0027  
   end_of_initialization 0010               ??_init_adc 0073               ??_read_adc 0075  
    start_initialization 000F              __end_of_isr 00C0            ??_init_config 0073  
          ??_init_timer0 0073              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0027         ___lwdiv@dividend 0022  
               ?___lwdiv 0020      read_adc@adc_reg_val 0075         ___lwdiv@quotient 0025  
    __end_of_init_config 00E4      __end_of_init_timer0 00EE        interrupt_function 0004  
            _init_config 00D2              _init_timer0 00E4          ___lwdiv@divisor 0020  
        ___lwdiv@counter 0024                 _init_adc 00EE                 _read_adc 00C0  
               intlevel1 0000  
