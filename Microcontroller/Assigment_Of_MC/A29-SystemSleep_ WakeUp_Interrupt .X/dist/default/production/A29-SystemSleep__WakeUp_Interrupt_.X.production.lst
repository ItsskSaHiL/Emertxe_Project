

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 29 21:17:42 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0098                     	;# 
   282     0099                     	;# 
   283     009C                     	;# 
   284     009D                     	;# 
   285     009E                     	;# 
   286     009F                     	;# 
   287     010C                     	;# 
   288     010D                     	;# 
   289     010E                     	;# 
   290     010F                     	;# 
   291     018C                     	;# 
   292     018D                     	;# 
   293     0000                     	;# 
   294     0001                     	;# 
   295     0002                     	;# 
   296     0003                     	;# 
   297     0004                     	;# 
   298     0005                     	;# 
   299     0006                     	;# 
   300     0007                     	;# 
   301     0008                     	;# 
   302     0009                     	;# 
   303     000A                     	;# 
   304     000B                     	;# 
   305     000C                     	;# 
   306     000D                     	;# 
   307     000E                     	;# 
   308     000E                     	;# 
   309     000F                     	;# 
   310     0010                     	;# 
   311     0011                     	;# 
   312     0012                     	;# 
   313     0013                     	;# 
   314     0014                     	;# 
   315     0015                     	;# 
   316     0015                     	;# 
   317     0016                     	;# 
   318     0017                     	;# 
   319     0018                     	;# 
   320     0019                     	;# 
   321     001A                     	;# 
   322     001B                     	;# 
   323     001B                     	;# 
   324     001C                     	;# 
   325     001D                     	;# 
   326     001E                     	;# 
   327     001F                     	;# 
   328     0081                     	;# 
   329     0085                     	;# 
   330     0086                     	;# 
   331     0087                     	;# 
   332     0088                     	;# 
   333     0089                     	;# 
   334     008C                     	;# 
   335     008D                     	;# 
   336     008E                     	;# 
   337     0091                     	;# 
   338     0092                     	;# 
   339     0093                     	;# 
   340     0094                     	;# 
   341     0098                     	;# 
   342     0099                     	;# 
   343     009C                     	;# 
   344     009D                     	;# 
   345     009E                     	;# 
   346     009F                     	;# 
   347     010C                     	;# 
   348     010D                     	;# 
   349     010E                     	;# 
   350     010F                     	;# 
   351     018C                     	;# 
   352     018D                     	;# 
   353                           
   354                           	psect	idataBANK0
   355     0121                     __pidataBANK0:
   356                           
   357                           ;initializer for main@F861
   358     0121  3406               	retlw	6
   359     0122  345B               	retlw	91
   360     0123  344F               	retlw	79
   361     0124  3466               	retlw	102
   362                           
   363                           ;initializer for main@count
   364     0125  3405               	retlw	5
   365     0126  3400               	retlw	0
   366     0008                     _PORTD	set	8
   367     0005                     _PORTA	set	5
   368     0006                     _PORTB	set	6
   369     0037                     _RB7	set	55
   370     005F                     _GIE	set	95
   371     0036                     _RB6	set	54
   372     0059                     _INTF	set	89
   373     005C                     _INTE	set	92
   374     0085                     _TRISA	set	133
   375     0088                     _TRISD	set	136
   376     0086                     _TRISB	set	134
   377     040E                     _INTEDG	set	1038
   378                           
   379                           	psect	cinit
   380     000F                     start_initialization:	
   381                           ; #config settings
   382                           
   383     000F                     __initialization:
   384                           
   385                           ; Initialize objects allocated to BANK0
   386     000F  120A  118A  2121  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   387     0014  00A8               	movwf	__pdataBANK0& (0+127)
   388     0015  120A  118A  2122  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   389     001A  00A9               	movwf	(__pdataBANK0+1)& (0+127)
   390     001B  120A  118A  2123  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   391     0020  00AA               	movwf	(__pdataBANK0+2)& (0+127)
   392     0021  120A  118A  2124  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   393     0026  00AB               	movwf	(__pdataBANK0+3)& (0+127)
   394     0027  120A  118A  2125  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   395     002C  00AC               	movwf	(__pdataBANK0+4)& (0+127)
   396     002D  120A  118A  2126  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   397     0032  00AD               	movwf	(__pdataBANK0+5)& (0+127)
   398     0033                     end_of_initialization:	
   399                           ;End of C runtime variable initialization code
   400                           
   401     0033                     __end_of__initialization:
   402     0033  0183               	clrf	3
   403     0034  120A  118A  2837   	ljmp	_main	;jump to C main() function
   404                           
   405                           	psect	dataBANK0
   406     0028                     __pdataBANK0:
   407     0028                     main@F861:
   408     0028                     	ds	4
   409     002C                     main@count:
   410     002C                     	ds	2
   411                           
   412                           	psect	cstackCOMMON
   413     0070                     __pcstackCOMMON:
   414     0070                     ?_init_ssd:
   415     0070                     ?_display:	
   416                           ; 1 bytes @ 0x0
   417                           
   418     0070                     ?_init_ext_int:	
   419                           ; 1 bytes @ 0x0
   420                           
   421     0070                     ?_isr:	
   422                           ; 1 bytes @ 0x0
   423                           
   424     0070                     ??_isr:	
   425                           ; 1 bytes @ 0x0
   426                           
   427     0070                     ?_init_config:	
   428                           ; 1 bytes @ 0x0
   429                           
   430     0070                     ?_main:	
   431                           ; 1 bytes @ 0x0
   432                           
   433                           
   434                           ; 1 bytes @ 0x0
   435     0070                     	ds	2
   436     0072                     ??_init_ssd:
   437     0072                     ??_display:	
   438                           ; 1 bytes @ 0x2
   439                           
   440     0072                     ??_init_ext_int:	
   441                           ; 1 bytes @ 0x2
   442                           
   443     0072                     ??_init_config:	
   444                           ; 1 bytes @ 0x2
   445                           
   446                           
   447                           ; 1 bytes @ 0x2
   448     0072                     	ds	4
   449     0076                     display@wait:
   450                           
   451                           ; 4 bytes @ 0x6
   452     0076                     	ds	4
   453     007A                     display@data:
   454                           
   455                           ; 1 bytes @ 0xA
   456     007A                     	ds	1
   457     007B                     display@digit:
   458                           
   459                           ; 1 bytes @ 0xB
   460     007B                     	ds	1
   461     007C                     ??_main:
   462                           
   463                           	psect	cstackBANK0
   464     0020                     __pcstackBANK0:	
   465                           ; 1 bytes @ 0xC
   466                           
   467     0020                     main@i:
   468                           
   469                           ; 4 bytes @ 0x0
   470     0020                     	ds	4
   471     0024                     main@ssd:
   472                           
   473                           ; 4 bytes @ 0x4
   474     0024                     	ds	4
   475                           
   476                           	psect	maintext
   477     0037                     __pmaintext:	
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 36 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  ssd             4    4[BANK0 ] unsigned char [4]
   488 ;;  i               4    0[BANK0 ] unsigned long 
   489 ;;  key             1    0        unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : B00/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         0       8       0       0       0
   501 ;;      Temps:          0       0       0       0       0
   502 ;;      Totals:         0       8       0       0       0
   503 ;;Total ram usage:        8 bytes
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		_display
   507 ;;		_init_config
   508 ;; This function is called by:
   509 ;;		Startup code after reset
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513     0037                     _main:	
   514                           ;psect for function _main
   515                           
   516     0037                     l758:	
   517                           ;incstack = 0
   518                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   519                           
   520                           
   521                           ;main.c: 39:         };main.c: 40:         else;main.c: 41:         {;main.c: 42:       
      +                                count = 5;
   522     0037  1283               	bcf	3,5	;RP0=0, select bank0
   523     0038  1303               	bcf	3,6	;RP1=0, select bank0
   524     0039  082B               	movf	main@F861+3,w
   525     003A  00A7               	movwf	main@ssd+3
   526     003B  082A               	movf	main@F861+2,w
   527     003C  00A6               	movwf	main@ssd+2
   528     003D  0829               	movf	main@F861+1,w
   529     003E  00A5               	movwf	main@ssd+1
   530     003F  0828               	movf	main@F861,w
   531     0040  00A4               	movwf	main@ssd
   532     0041                     l760:
   533                           
   534                           ;main.c: 43: 
   535     0041  120A  118A  20F1  120A  118A  	fcall	_init_config
   536     0046                     l762:
   537                           
   538                           ;main.c: 46:             ssd[2] = 0x00;;main.c: 49: 
   539     0046  1283               	bcf	3,5	;RP0=0, select bank0
   540     0047  1303               	bcf	3,6	;RP1=0, select bank0
   541     0048  082C               	movf	main@count,w
   542     0049  042D               	iorwf	main@count+1,w
   543     004A  1903               	btfsc	3,2
   544     004B  284D               	goto	u121
   545     004C  284E               	goto	u120
   546     004D                     u121:
   547     004D  2888               	goto	l770
   548     004E                     u120:
   549     004E                     l764:
   550                           
   551                           ;main.c: 50: ;main.c: 53:         }
   552     004E  3001               	movlw	1
   553     004F  07A0               	addwf	main@i,f
   554     0050  3000               	movlw	0
   555     0051  1803               	skipnc
   556     0052  3001               	movlw	1
   557     0053  07A1               	addwf	main@i+1,f
   558     0054  3000               	movlw	0
   559     0055  1803               	skipnc
   560     0056  3001               	movlw	1
   561     0057  07A2               	addwf	main@i+2,f
   562     0058  3000               	movlw	0
   563     0059  1803               	skipnc
   564     005A  3001               	movlw	1
   565     005B  07A3               	addwf	main@i+3,f
   566     005C  3065               	movlw	101
   567     005D  0620               	xorwf	main@i,w
   568     005E  0421               	iorwf	main@i+1,w
   569     005F  0422               	iorwf	main@i+2,w
   570     0060  0423               	iorwf	main@i+3,w
   571     0061  1D03               	btfss	3,2
   572     0062  2864               	goto	u131
   573     0063  2865               	goto	u130
   574     0064                     u131:
   575     0064  2877               	goto	l45
   576     0065                     u130:
   577     0065                     l766:
   578                           
   579                           ;main.c: 54: ;main.c: 55: 
   580     0065  3000               	movlw	0
   581     0066  1283               	bcf	3,5	;RP0=0, select bank0
   582     0067  1303               	bcf	3,6	;RP1=0, select bank0
   583     0068  00A3               	movwf	main@i+3
   584     0069  3000               	movlw	0
   585     006A  00A2               	movwf	main@i+2
   586     006B  3000               	movlw	0
   587     006C  00A1               	movwf	main@i+1
   588     006D  3000               	movlw	0
   589     006E  00A0               	movwf	main@i
   590                           
   591                           ;main.c: 56:     }
   592     006F  3080               	movlw	128
   593     0070  0686               	xorwf	6,f
   594                           
   595                           ;main.c: 57:     return;
   596     0071  30FF               	movlw	255
   597     0072  07AC               	addwf	main@count,f
   598     0073  1803               	skipnc
   599     0074  0AAD               	incf	main@count+1,f
   600     0075  30FF               	movlw	255
   601     0076  07AD               	addwf	main@count+1,f
   602     0077                     l45:	
   603                           ;main.c: 58: }
   604                           
   605     0077  3006               	movlw	6
   606     0078  1283               	bcf	3,5	;RP0=0, select bank0
   607     0079  1303               	bcf	3,6	;RP1=0, select bank0
   608     007A  00A4               	movwf	main@ssd
   609     007B  305B               	movlw	91
   610     007C  00A5               	movwf	main@ssd+1
   611     007D  304F               	movlw	79
   612     007E  00A6               	movwf	main@ssd+2
   613     007F  3066               	movlw	102
   614     0080  00A7               	movwf	main@ssd+3
   615     0081                     l768:
   616     0081  3024               	movlw	(low (main@ssd| 0))& (0+255)
   617     0082  120A  118A  209B  120A  118A  	fcall	_display
   618     0087  2846               	goto	l762
   619     0088                     l770:
   620     0088  3005               	movlw	5
   621     0089  00AC               	movwf	main@count
   622     008A  3000               	movlw	0
   623     008B  00AD               	movwf	main@count+1
   624     008C                     l772:
   625     008C  01A4               	clrf	main@ssd
   626     008D                     l774:
   627     008D  01A5               	clrf	main@ssd+1
   628     008E                     l776:
   629     008E  01A6               	clrf	main@ssd+2
   630     008F                     l778:
   631     008F  01A7               	clrf	main@ssd+3
   632     0090                     l780:
   633     0090  3024               	movlw	(low (main@ssd| 0))& (0+255)
   634     0091  120A  118A  209B  120A  118A  	fcall	_display
   635     0096  0063               	sleep	;# 
   636     0097  2846               	goto	l762
   637     0098  120A  118A  280C   	ljmp	start
   638     009B                     __end_of_main:
   639                           
   640                           	psect	text1
   641     00F1                     __ptext1:	
   642 ;; *************** function _init_config *****************
   643 ;; Defined at:
   644 ;;		line 26 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used: 1
   664 ;; Hardware stack levels required when called: 2
   665 ;; This function calls:
   666 ;;		_init_ext_int
   667 ;;		_init_ssd
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673     00F1                     _init_config:	
   674                           ;psect for function _init_config
   675                           
   676     00F1                     l732:	
   677                           ;incstack = 0
   678                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;main.c: 27:             if(i++ == 100)
   682     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   683     00F2  1303               	bcf	3,6	;RP1=0, select bank0
   684     00F3  0186               	clrf	6	;volatile
   685     00F4                     l734:
   686                           
   687                           ;main.c: 28:             {
   688     00F4  1683               	bsf	3,5	;RP0=1, select bank1
   689     00F5  1303               	bcf	3,6	;RP1=0, select bank1
   690     00F6  0806               	movf	6,w	;volatile
   691     00F7  393F               	andlw	63
   692     00F8  0086               	movwf	6	;volatile
   693     00F9                     l736:
   694                           
   695                           ;main.c: 30:                 RB7 = !RB7;
   696     00F9  120A  118A  2127  120A  118A  	fcall	_init_ext_int
   697                           
   698                           ;main.c: 31:                 count--;
   699     00FE  120A  118A  2115  120A  118A  	fcall	_init_ssd
   700     0103                     l738:
   701                           
   702                           ;main.c: 33: 
   703     0103  178B               	bsf	11,7	;volatile
   704     0104                     l34:
   705     0104  0008               	return
   706     0105                     __end_of_init_config:
   707                           
   708                           	psect	text2
   709     0115                     __ptext2:	
   710 ;; *************** function _init_ssd *****************
   711 ;; Defined at:
   712 ;;		line 4 in file "ssd.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;		None
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      void 
   719 ;; Registers used:
   720 ;;		wreg, status,2
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   726 ;;      Params:         0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0
   728 ;;      Temps:          0       0       0       0       0
   729 ;;      Totals:         0       0       0       0       0
   730 ;;Total ram usage:        0 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_init_config
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740     0115                     _init_ssd:	
   741                           ;psect for function _init_ssd
   742                           
   743     0115                     l726:	
   744                           ;incstack = 0
   745                           ; Regs used in _init_ssd: [wreg+status,2]
   746                           
   747                           
   748                           ;ssd.c: 7:     TRISD = 0x00;
   749     0115  1683               	bsf	3,5	;RP0=1, select bank1
   750     0116  1303               	bcf	3,6	;RP1=0, select bank1
   751     0117  0188               	clrf	8	;volatile
   752     0118                     l728:
   753                           
   754                           ;ssd.c: 10:     TRISA = TRISA & 0xC3;
   755     0118  0805               	movf	5,w	;volatile
   756     0119  39C3               	andlw	195
   757     011A  0085               	movwf	5	;volatile
   758     011B                     l730:
   759                           
   760                           ;ssd.c: 13:     PORTA = PORTA & 0xC3;
   761     011B  1283               	bcf	3,5	;RP0=0, select bank0
   762     011C  1303               	bcf	3,6	;RP1=0, select bank0
   763     011D  0805               	movf	5,w	;volatile
   764     011E  39C3               	andlw	195
   765     011F  0085               	movwf	5	;volatile
   766     0120                     l60:
   767     0120  0008               	return
   768     0121                     __end_of_init_ssd:
   769                           
   770                           	psect	text3
   771     0127                     __ptext3:	
   772 ;; *************** function _init_ext_int *****************
   773 ;; Defined at:
   774 ;;		line 3 in file "external_interrupt.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		None
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_init_config
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802     0127                     _init_ext_int:	
   803                           ;psect for function _init_ext_int
   804                           
   805     0127                     l724:	
   806                           ;incstack = 0
   807                           ; Regs used in _init_ext_int: []
   808                           
   809                           
   810                           ;external_interrupt.c: 6:     INTEDG = 0;
   811     0127  1683               	bsf	3,5	;RP0=1, select bank1
   812     0128  1303               	bcf	3,6	;RP1=0, select bank1
   813     0129  1301               	bcf	1,6	;volatile
   814                           
   815                           ;external_interrupt.c: 8:     INTE = 1;
   816     012A  160B               	bsf	11,4	;volatile
   817     012B                     l7:
   818     012B  0008               	return
   819     012C                     __end_of_init_ext_int:
   820                           
   821                           	psect	text4
   822     009B                     __ptext4:	
   823 ;; *************** function _display *****************
   824 ;; Defined at:
   825 ;;		line 16 in file "ssd.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;  data            1    wreg     PTR unsigned char 
   828 ;;		 -> main@ssd(4), 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  data            1   10[COMMON] PTR unsigned char 
   831 ;;		 -> main@ssd(4), 
   832 ;;  wait            4    6[COMMON] unsigned long 
   833 ;;  digit           1   11[COMMON] unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         6       0       0       0       0
   845 ;;      Temps:          4       0       0       0       0
   846 ;;      Totals:        10       0       0       0       0
   847 ;;Total ram usage:       10 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857     009B                     _display:	
   858                           ;psect for function _display
   859                           
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   863                           ;display@data stored from wreg
   864     009B  00FA               	movwf	display@data
   865     009C                     l740:
   866                           
   867                           ;ssd.c: 16: void display(unsigned char data[]);ssd.c: 17: {;ssd.c: 18:     unsigned char
      +                           digit ;;ssd.c: 20:     for (digit = 0; digit < 4; digit++)
   868     009C  01FB               	clrf	display@digit
   869     009D                     l746:
   870                           
   871                           ;ssd.c: 21:     {;ssd.c: 22:         PORTD = data[digit];
   872     009D  087B               	movf	display@digit,w
   873     009E  077A               	addwf	display@data,w
   874     009F  00F2               	movwf	??_display
   875     00A0  0872               	movf	??_display,w
   876     00A1  0084               	movwf	4
   877     00A2  1383               	bcf	3,7	;select IRP bank0
   878     00A3  0800               	movf	0,w
   879     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   880     00A5  1303               	bcf	3,6	;RP1=0, select bank0
   881     00A6  0088               	movwf	8	;volatile
   882     00A7                     l748:
   883                           
   884                           ;ssd.c: 23:         PORTA = (PORTA & 0xC3) | (0x04 << digit);
   885     00A7  3004               	movlw	4
   886     00A8  00F2               	movwf	??_display
   887     00A9  0A7B               	incf	display@digit,w
   888     00AA  28AD               	goto	u84
   889     00AB                     u85:
   890     00AB  1003               	clrc
   891     00AC  0DF2               	rlf	??_display,f
   892     00AD                     u84:
   893     00AD  3EFF               	addlw	-1
   894     00AE  1D03               	skipz
   895     00AF  28AB               	goto	u85
   896     00B0  0805               	movf	5,w	;volatile
   897     00B1  39C3               	andlw	195
   898     00B2  0472               	iorwf	??_display,w
   899     00B3  0085               	movwf	5	;volatile
   900     00B4                     l750:
   901                           
   902                           ;ssd.c: 25:        for (unsigned long int wait = 200; wait--; );
   903     00B4  3000               	movlw	0
   904     00B5  00F9               	movwf	display@wait+3
   905     00B6  3000               	movlw	0
   906     00B7  00F8               	movwf	display@wait+2
   907     00B8  3000               	movlw	0
   908     00B9  00F7               	movwf	display@wait+1
   909     00BA  30C8               	movlw	200
   910     00BB  00F6               	movwf	display@wait
   911     00BC                     l752:
   912     00BC  3001               	movlw	1
   913     00BD  00F2               	movwf	??_display
   914     00BE  3000               	movlw	0
   915     00BF  00F3               	movwf	??_display+1
   916     00C0  3000               	movlw	0
   917     00C1  00F4               	movwf	??_display+2
   918     00C2  3000               	movlw	0
   919     00C3  00F5               	movwf	??_display+3
   920     00C4  0872               	movf	??_display,w
   921     00C5  02F6               	subwf	display@wait,f
   922     00C6  0873               	movf	??_display+1,w
   923     00C7  1C03               	skipc
   924     00C8  0F73               	incfsz	??_display+1,w
   925     00C9  28CB               	goto	u95
   926     00CA  28CC               	goto	u96
   927     00CB                     u95:
   928     00CB  02F7               	subwf	display@wait+1,f
   929     00CC                     u96:
   930     00CC  0874               	movf	??_display+2,w
   931     00CD  1C03               	skipc
   932     00CE  0F74               	incfsz	??_display+2,w
   933     00CF  28D1               	goto	u97
   934     00D0  28D2               	goto	u98
   935     00D1                     u97:
   936     00D1  02F8               	subwf	display@wait+2,f
   937     00D2                     u98:
   938     00D2  0875               	movf	??_display+3,w
   939     00D3  1C03               	skipc
   940     00D4  0F75               	incfsz	??_display+3,w
   941     00D5  28D7               	goto	u99
   942     00D6  28D8               	goto	u90
   943     00D7                     u99:
   944     00D7  02F9               	subwf	display@wait+3,f
   945     00D8                     u90:
   946     00D8  0A76               	incf	display@wait,w
   947     00D9  1D03               	skipz
   948     00DA  28E5               	goto	u101
   949     00DB  0A77               	incf	display@wait+1,w
   950     00DC  1D03               	skipz
   951     00DD  28E5               	goto	u101
   952     00DE  0A78               	incf	display@wait+2,w
   953     00DF  1D03               	skipz
   954     00E0  28E5               	goto	u101
   955     00E1  0A79               	incf	display@wait+3,w
   956     00E2  1D03               	btfss	3,2
   957     00E3  28E5               	goto	u101
   958     00E4  28E6               	goto	u100
   959     00E5                     u101:
   960     00E5  28BC               	goto	l752
   961     00E6                     u100:
   962     00E6                     l754:
   963                           
   964                           ;ssd.c: 26:     }
   965     00E6  3001               	movlw	1
   966     00E7  00F2               	movwf	??_display
   967     00E8  0872               	movf	??_display,w
   968     00E9  07FB               	addwf	display@digit,f
   969     00EA                     l756:
   970     00EA  3004               	movlw	4
   971     00EB  027B               	subwf	display@digit,w
   972     00EC  1C03               	skipc
   973     00ED  28EF               	goto	u111
   974     00EE  28F0               	goto	u110
   975     00EF                     u111:
   976     00EF  289D               	goto	l746
   977     00F0                     u110:
   978     00F0                     l68:
   979     00F0  0008               	return
   980     00F1                     __end_of_display:
   981                           
   982                           	psect	text5
   983     0105                     __ptext5:	
   984 ;; *************** function _isr *****************
   985 ;; Defined at:
   986 ;;		line 4 in file "isr.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          2       0       0       0       0
  1003 ;;      Totals:         2       0       0       0       0
  1004 ;;Total ram usage:        2 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		Interrupt level 1
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013     0105                     _isr:	
  1014                           ;psect for function _isr
  1015                           
  1016     0105                     i1l694:
  1017                           
  1018                           ;isr.c: 6:     if (INTF == 1)
  1019     0105  1C8B               	btfss	11,1	;volatile
  1020     0106  2908               	goto	u5_21
  1021     0107  2909               	goto	u5_20
  1022     0108                     u5_21:
  1023     0108  290E               	goto	i1l17
  1024     0109                     u5_20:
  1025     0109                     i1l696:
  1026                           
  1027                           ;isr.c: 7:     {;isr.c: 8:         RB6 = !RB6;
  1028     0109  3040               	movlw	64
  1029     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1030     010B  1303               	bcf	3,6	;RP1=0, select bank0
  1031     010C  0686               	xorwf	6,f
  1032     010D                     i1l698:
  1033                           
  1034                           ;isr.c: 9:         INTF = 0;
  1035     010D  108B               	bcf	11,1	;volatile
  1036     010E                     i1l17:
  1037     010E  0871               	movf	??_isr+1,w
  1038     010F  008A               	movwf	10
  1039     0110  0E70               	swapf	??_isr,w
  1040     0111  0083               	movwf	3
  1041     0112  0EFE               	swapf	btemp,f
  1042     0113  0E7E               	swapf	btemp,w
  1043     0114  0009               	retfie
  1044     0115                     __end_of_isr:
  1045     007E                     btemp	set	126	;btemp
  1046     007E                     wtemp0	set	126
  1047                           
  1048                           	psect	intentry
  1049     0004                     __pintentry:	
  1050                           ;incstack = 0
  1051                           ; Regs used in _isr: [wreg]
  1052                           
  1053     0004                     interrupt_function:
  1054     007E                     saved_w	set	btemp
  1055     0004  00FE               	movwf	btemp
  1056     0005  0E03               	swapf	3,w
  1057     0006  00F0               	movwf	??_isr
  1058     0007  080A               	movf	10,w
  1059     0008  00F1               	movwf	??_isr+1
  1060     0009  120A  118A  2905   	ljmp	_isr
  1061                           
  1062                           	psect	config
  1063                           
  1064                           ;Config register CONFIG @ 0x2007
  1065                           ;	Oscillator Selection bits
  1066                           ;	FOSC = 0x3, unprogrammed default
  1067                           ;	Watchdog Timer Enable bit
  1068                           ;	WDTE = OFF, WDT disabled
  1069                           ;	Power-up Timer Enable bit
  1070                           ;	PWRTE = 0x1, unprogrammed default
  1071                           ;	Brown-out Reset Enable bit
  1072                           ;	BOREN = 0x1, unprogrammed default
  1073                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1074                           ;	LVP = 0x1, unprogrammed default
  1075                           ;	Data EEPROM Memory Code Protection bit
  1076                           ;	CPD = 0x1, unprogrammed default
  1077                           ;	Flash Program Memory Write Enable bits
  1078                           ;	WRT = 0x3, unprogrammed default
  1079                           ;	In-Circuit Debugger Mode bit
  1080                           ;	DEBUG = 0x1, unprogrammed default
  1081                           ;	Flash Program Memory Code Protection bit
  1082                           ;	CP = 0x1, unprogrammed default
  1083     2007                     	org	8199
  1084     2007  3FFB               	dw	16379

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      8      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(1) Largest target is 4
		 -> main@ssd(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_display

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     416
                                              0 BANK0      8     8      0
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                       _init_ext_int
                           _init_ssd
 ---------------------------------------------------------------------------------
 (2) _init_ssd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_ext_int                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             10    10      0     201
                                              2 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_ext_int
     _init_ssd

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 29 21:17:42 2022

                      l7 012B                       l34 0104                       l60 0120  
                     l45 0077                       l68 00F0                       u90 00D8  
                     u84 00AD                       u85 00AB                       u95 00CB  
                     u96 00CC                       u97 00D1                       u98 00D2  
                     u99 00D7                      l730 011B                      l740 009C  
                    l724 0127                      l732 00F1                      l750 00B4  
                    l726 0115                      l734 00F4                      l752 00BC  
                    l728 0118                      l736 00F9                      l760 0041  
                    l754 00E6                      l746 009D                      l738 0103  
                    l770 0088                      l762 0046                      l756 00EA  
                    l748 00A7                      l780 0090                      l772 008C  
                    l764 004E                      l774 008D                      l766 0065  
                    l758 0037                      l776 008E                      l768 0081  
                    l778 008F                      _GIE 005F                      _RB6 0036  
                    _RB7 0037                      u100 00E6                      u101 00E5  
                    u110 00F0                      u111 00EF                      u120 004E  
                    u121 004D                      u130 0065                      u131 0064  
                    _isr 0105                      fsr0 0004                      indf 0000  
                   ?_isr 0070                     _INTE 005C                     _INTF 0059  
                   i1l17 010E                     u5_20 0109                     u5_21 0108  
            display@data 007A              display@wait 0076                     _main 0037  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070             ?_init_config 0070                    i1l694 0105  
                  i1l696 0109                    i1l698 010D                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088             display@digit 007B  
        __end_of_display 00F1                    main@i 0020                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 009B                   ??_main 007C                   _INTEDG 040E  
          ?_init_ext_int 0070         __end_of_init_ssd 0121                ??_display 0072  
                 saved_w 007E  __end_of__initialization 0033           ??_init_ext_int 0072  
         __pcstackCOMMON 0070             __pidataBANK0 0121               __pmaintext 0037  
             __pintentry 0004                ?_init_ssd 0070                  __ptext1 00F1  
                __ptext2 0115                  __ptext3 0127                  __ptext4 009B  
                __ptext5 0105                  _display 009B     __end_of_init_ext_int 012C  
                main@ssd 0024     end_of_initialization 0033               ??_init_ssd 0072  
    start_initialization 000F              __end_of_isr 0115              __pdataBANK0 0028  
          ??_init_config 0072                ___latbits 0002            __pcstackBANK0 0020  
           _init_ext_int 0127                 ?_display 0070      __end_of_init_config 0105  
      interrupt_function 0004                main@count 002C              _init_config 00F1  
               _init_ssd 0115                 main@F861 0028                 intlevel1 0000  
